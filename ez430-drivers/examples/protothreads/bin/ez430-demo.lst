
bin/ez430-demo.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
00009b56 l    d  .rodata	00000000 .rodata
00000200 l    d  .bss	00000000 .bss
00000238 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main.c
00000200 l     O .bss	00000001 node_id
00000202 l     O .bss	0000000a timer
00008120 l     F .text	00000044 printhex
00008164 l     F .text	00000018 prompt_node_id
0000817c l     F .text	00000050 set_node_id
0000020c l     O .bss	0000000c pt
00000218 l     O .bss	00000002 led_green_duration
0000021a l     O .bss	00000002 led_green_flag
0000823c l     F .text	0000001c led_green_blink
00008258 l     F .text	00000084 thread_led_green
000082dc l     F .text	00000060 thread_led_red
0000021c l     O .bss	00000002 uart_flag
0000021e l     O .bss	00000001 uart_data
0000835a l     F .text	00000040 print_temperature
0000839a l     F .text	00000076 thread_uart
00000220 l     O .bss	00000002 antibouncing_flag
00000222 l     O .bss	00000002 button_pressed_flag
00008436 l     F .text	0000005c thread_button
00008492 l     F .text	00000064 thread_antibouncing
000084f6 l     F .text	00000068 thread_periodic_print
0000811c l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 adc10.c
00000224 l     O .bss	00000002 coeff_1
00000226 l     O .bss	00000002 coeff_2
00000000 l    df *ABS*	00000000 clock.c
00000228 l     O .bss	00000002 mclk_freq_mhz
0000876a l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 timer.c
0000022a l     O .bss	00000002 timerA_cb
0000022c l     O .bss	00000002 timerA_wakeup
0000022e l     O .bss	00000002 timerB_cb
00000230 l     O .bss	00000002 timerB_wakeup
00000000 l    df *ABS*	00000000 uart.c
00000232 l     O .bss	00000002 uart_cb
00000000 l    df *ABS*	00000000 button.c
00000234 l     O .bss	00000002 cb
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 watchdog.c
00000236 l     O .bss	00000002 watchdog_backup
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vuprintf.c
000091cc l     F .text	00000198 print_field
00008da4 g     F .text	00000032 putchar
00000057 g       *ABS*	00000000 __BCSCTL1
000088d4 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000174 g       *ABS*	00000000 __TACCR1
00000000 g       *ABS*	00000000 __data_size
0000811c  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
000088ac g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
000085cc g     F .text	000000ce adc10_sample_temp
0000004b g       *ABS*	00000000 __ADC10AE1
000091ae g     F .text	00000010 printf
00000069 g       *ABS*	00000000 __UCB0CTL1
0000811c  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
00000060 g       *ABS*	00000000 __UCA0CTL0
00009028 g     F .text	00000064 flash_write_byte
0000884e g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
00008c74 g     F .text	00000018 timerB_register_cb
0000012e g       *ABS*	00000000 __TAIV
00008d9a g     F .text	0000000a uart_stop
00008e9a g     F .text	0000005c button_init
00000000 g       .vectors	00000000 _efartext
00009a02 g     F .text	00000000 __udivhi3
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
00009c10 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
00008b42 g     F .text	00000038 Timer_A
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
0000912e g     F .text	00000022 flash_erase_info_memory
0000001d g       *ABS*	00000000 __P4OUT
00000038 g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
00008924 g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
00008116  w      .text	00000000 __stop_progExec__
0000002d g       *ABS*	00000000 __P2IE
00008df4 g     F .text	00000014 uart_eint
00000192 g       *ABS*	00000000 __TBCCR0
0000811c  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
00008898 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
00009a24 g     F .text	00000000 __udivsi3
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
00008cfc g     F .text	0000000e timerB_stop
00000049 g       *ABS*	00000000 __ADC10DTC1
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
000085bc g     F .text	00000010 adc10irq
00008872 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
00009b16 g       .text	00000000 __udivmoddi4
000088fc g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
00000182 g       *ABS*	00000000 __TBCCTL0
00008410 g     F .text	00000026 button_pressed_cb
0000006d g       *ABS*	00000000 __UCB0STAT
000085bc g       .text	00000000 __isr_5
00008574 g     F .text	00000032 adc10_calibrate
00000063 g       *ABS*	00000000 __UCA0BR1
00009ae8 g     F .text	00000000 __umoddi3
00009c10 g       *ABS*	00000000 __data_load_start
00008afa g     F .text	00000016 leds_on
0000811c g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
00008a92 g     F .text	00000014 led_green_switch
000090f0 g     F .text	0000003e flash_erase_segment
000001bc g       *ABS*	00000000 __ADC10SA
00008fdc g     F .text	0000004c flash_init
00000166 g       *ABS*	00000000 __TACCTL2
0000821a g     F .text	00000022 timer_reached
00009ac2 g     F .text	00000000 __udivdi3
00000065 g       *ABS*	00000000 __UCA0STAT
00008a68 g     F .text	00000016 led_green_off
00008f9a g       .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
0000012c g       *ABS*	00000000 __FCTL3
00008b90 g     F .text	00000018 timerA_register_cb
0000811c  w      .text	00000000 __isr_10
0000875c g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
00008bf4 g     F .text	00000024 timerA_start_milliseconds
00008860 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
00008abc g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
00008ae4 g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
00000238 g     O .noinit	00000002 __wdt_clear_value
00008dd6 g     F .text	0000001e uart_getchar
0000001b g       *ABS*	00000000 __P3SEL
00008c18 g     F .text	0000000e timerA_stop
00008e46 g       .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
00008f84 g     F .text	00000016 button_disable_interrupt
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
00009a5a g     F .text	00000000 __umodsi3
000091be g     F .text	0000000e vprintf
00000028 g       *ABS*	00000000 __P2IN
00008ba8 g     F .text	00000018 timerA_set_wakeup
00008f9a g     F .text	00000042 port1_irq_handler
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
00008aa6 g     F .text	00000016 led_red_off
00009a1c g     F .text	00000000 __umodhi3
0000811c  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
00008d0a g     F .text	00000090 uart_init
00008028  w      .text	00000000 __do_clear_bss
00008e08 g     F .text	00000016 uart_dint
0000833c g     F .text	0000001e uart_cb
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
000088e8 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
00009150 g     F .text	0000001c watchdog_stop
0000882a g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
000088c0 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
000085a6 g     F .text	00000016 adc10_stop
00009a24 g       .text	00000000 __ext_udivmod32
00008c5e g     F .text	00000016 timerB_init
00000027 g       *ABS*	00000000 __P1REN
00009182 g       .text	00000000 __mulsi3
00008e1e g     F .text	00000028 uart_register_cb
000000c0 g       *ABS*	00000000 __OA0CTL0
00008910 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
00009b54  w      .text	00000000 _unexpected_
0000811c  w      .text	00000000 __isr_8
0000811c  w      .text	00000000 __isr_3
00009364 g     F .text	0000069e vuprintf
00008ad0 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
00009a02 g       .text	00000000 __ext_udivmod16
00008000  w      .text	00000000 _reset_vector__
0000811c g       .text	00000000 __ctors_start
00009a64 g       .text	00000000 __xabi_udivmod64
0000811c  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00008f3c g     F .text	0000001c button_is_pressed
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	000000d8 main
00000176 g       *ABS*	00000000 __TACCR2
000089da g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
00008c26 g       .text	00000000 __isr_13
00008934 g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
00008b7a g     F .text	00000016 timerA_init
00008e46 g     F .text	00000054 usart0irq
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00008c8c g     F .text	00000018 timerB_set_wakeup
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
0000869a g     F .text	000000c2 adc10_sample_avcc
00008c26 g     F .text	00000038 Timer_B
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
00008b42 g       .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00008bc0 g     F .text	00000034 timerA_start_ticks
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
00008884 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
0000811c g       .text	00000000 __dtors_start
0000811c  w      .text	00000000 __isr_6
0000811c g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
0000883c g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
0000811c  w      .text	00000000 __isr_1
00008f70 g     F .text	00000014 button_enable_interrupt
00000200 g       .rodata	00000000 _edata
0000023a g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
00008a7e g     F .text	00000014 led_green_on
000081cc g     F .text	0000004e timer_tick_cb
0000916c g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
00008116  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00008f58 g     F .text	00000018 button_register_cb
00000022 g       *ABS*	00000000 __P1DIR
00008ef6 g     F .text	00000046 button_stop
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
00008ca4 g     F .text	00000034 timerB_start_ticks
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
0000855e g     F .text	00000016 adc10_start
00000200 g       .rodata	00000000 __data_start
00008cd8 g     F .text	00000024 timerB_start_milliseconds
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
0000908c g     F .text	00000064 flash_write_word
00008b10 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 38 02 	mov	r5,	&0x0238	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 38 02 	mov	&0x0238,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f 10 9c 	mov	-25584(r15),512(r15);0x9c10(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 38 00 	mov	#56,	r15	;#0x0038
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 38 02 	mov	&0x0238,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:
/*
 * main
 */

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
    8042:	21 83       	decd	r1		
    watchdog_stop();
    8044:	b0 12 50 91 	call	#0x9150	

    TIMER_ID_INPUT = UINT_MAX;
    8048:	b2 43 0a 02 	mov	#-1,	&0x020a	;r3 As==11
    node_id = NODE_ID_UNDEFINED;
    804c:	c2 43 00 02 	mov.b	#0,	&0x0200	;r3 As==00

    /* protothreads init */
    int i;
    for(i = 0; i < NUM_PT; i++)
    8050:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    8054:	09 3c       	jmp	$+20     	;abs 0x8068
    {
        PT_INIT(&pt[i]);
    8056:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    805a:	0f 5f       	rla	r15		
    805c:	3f 50 0c 02 	add	#524,	r15	;#0x020c
    8060:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    TIMER_ID_INPUT = UINT_MAX;
    node_id = NODE_ID_UNDEFINED;

    /* protothreads init */
    int i;
    for(i = 0; i < NUM_PT; i++)
    8064:	94 53 fc ff 	inc	-4(r4)		;0xfffc(r4)
    8068:	b4 90 06 00 	cmp	#6,	-4(r4)	;#0x0006, 0xfffc(r4)
    806c:	fc ff 
    806e:	f3 3b       	jl	$-24     	;abs 0x8056
    {
        PT_INIT(&pt[i]);
    }

    /* clock init */
    set_mcu_speed_dco_mclk_16MHz_smclk_8MHz();
    8070:	b0 12 e8 88 	call	#0x88e8	

    /* LEDs init */
    leds_init();
    8074:	b0 12 10 8b 	call	#0x8b10	
    led_red_on();
    8078:	b0 12 bc 8a 	call	#0x8abc	
    led_green_flag = 0;
    807c:	82 43 1a 02 	mov	#0,	&0x021a	;r3 As==00

    /* timer init */
    timerA_init();
    8080:	b0 12 7a 8b 	call	#0x8b7a	
    timerA_register_cb(&timer_tick_cb);
    8084:	3f 40 cc 81 	mov	#-32308,r15	;#0x81cc
    8088:	b0 12 90 8b 	call	#0x8b90	
    timerA_start_milliseconds(TIMER_PERIOD_MS);
    808c:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8090:	b0 12 f4 8b 	call	#0x8bf4	

    /* button init */
    button_init();
    8094:	b0 12 9a 8e 	call	#0x8e9a	
    button_register_cb(button_pressed_cb);
    8098:	3f 40 10 84 	mov	#-31728,r15	;#0x8410
    809c:	b0 12 58 8f 	call	#0x8f58	
    antibouncing_flag = 0;
    80a0:	82 43 20 02 	mov	#0,	&0x0220	;r3 As==00
    button_pressed_flag = 0;
    80a4:	82 43 22 02 	mov	#0,	&0x0222	;r3 As==00

    /* UART init (serial link) */
    uart_init(UART_9600_SMCLK_8MHZ);
    80a8:	3f 42       	mov	#8,	r15	;r2 As==11
    80aa:	b0 12 0a 8d 	call	#0x8d0a	
    uart_register_cb(uart_cb);
    80ae:	3f 40 3c 83 	mov	#-31940,r15	;#0x833c
    80b2:	b0 12 1e 8e 	call	#0x8e1e	
    uart_flag = 0;
    80b6:	82 43 1c 02 	mov	#0,	&0x021c	;r3 As==00
    uart_data = 0;
    80ba:	c2 43 1e 02 	mov.b	#0,	&0x021e	;r3 As==00

    /* ADC10 init (temperature) */
    adc10_start();
    80be:	b0 12 5e 85 	call	#0x855e	


    /* retrieve node id from flash */
    node_id = *((char *) NODE_ID_LOCATION);
    80c2:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    80c6:	6f 4f       	mov.b	@r15,	r15	
    80c8:	c2 4f 00 02 	mov.b	r15,	&0x0200	
    printf("node id retrieved from flash: %d\r\n", node_id);
    80cc:	5f 42 00 02 	mov.b	&0x0200,r15	
    80d0:	4f 4f       	mov.b	r15,	r15	
    80d2:	0f 12       	push	r15		
    80d4:	30 12 e5 9b 	push	#-25627	;#0x9be5
    80d8:	b0 12 ae 91 	call	#0x91ae	
    80dc:	21 52       	add	#4,	r1	;r2 As==10

    button_enable_interrupt();
    80de:	b0 12 70 8f 	call	#0x8f70	
    __enable_interrupt();
    80e2:	32 d2       	eint			

    /* simple cycle scheduling */
    while(1) {
        thread_led_red(&pt[0]);
    80e4:	3f 40 0c 02 	mov	#524,	r15	;#0x020c
    80e8:	b0 12 dc 82 	call	#0x82dc	
        thread_led_green(&pt[1]);
    80ec:	3f 40 0e 02 	mov	#526,	r15	;#0x020e
    80f0:	b0 12 58 82 	call	#0x8258	
        thread_uart(&pt[2]);
    80f4:	3f 40 10 02 	mov	#528,	r15	;#0x0210
    80f8:	b0 12 9a 83 	call	#0x839a	
        thread_antibouncing(&pt[3]);
    80fc:	3f 40 12 02 	mov	#530,	r15	;#0x0212
    8100:	b0 12 92 84 	call	#0x8492	
        thread_periodic_print(&pt[4]);
    8104:	3f 40 14 02 	mov	#532,	r15	;#0x0214
    8108:	b0 12 f6 84 	call	#0x84f6	
        thread_button(&pt[5]);
    810c:	3f 40 16 02 	mov	#534,	r15	;#0x0216
    8110:	b0 12 36 84 	call	#0x8436	
    }
    8114:	e7 3f       	jmp	$-48     	;abs 0x80e4

00008116 <__stop_progExec__>:
    8116:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    811a:	fd 3f       	jmp	$-4      	;abs 0x8116

0000811c <__ctors_end>:
    811c:	30 40 54 9b 	br	#0x9b54	

00008120 <printhex>:
#define TIMER_ANTIBOUNCING timer[2]
#define TIMER_TEMP_PRINT timer[3]
#define TIMER_ID_INPUT timer[4]

static void printhex(char *buffer, unsigned int len)
{
    8120:	04 12       	push	r4		
    8122:	04 41       	mov	r1,	r4	
    8124:	24 53       	incd	r4		
    8126:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    812a:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    812e:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    unsigned int i;
    for(i = 0; i < len; i++)
    8132:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    8136:	0e 3c       	jmp	$+30     	;abs 0x8154
    {
        printf("%02X ", buffer[i]);
    8138:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    813c:	1f 54 f8 ff 	add	-8(r4),	r15	;0xfff8(r4)
    8140:	6f 4f       	mov.b	@r15,	r15	
    8142:	8f 11       	sxt	r15		
    8144:	0f 12       	push	r15		
    8146:	30 12 56 9b 	push	#-25770	;#0x9b56
    814a:	b0 12 ae 91 	call	#0x91ae	
    814e:	21 52       	add	#4,	r1	;r2 As==10
#define TIMER_ID_INPUT timer[4]

static void printhex(char *buffer, unsigned int len)
{
    unsigned int i;
    for(i = 0; i < len; i++)
    8150:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    8154:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    8158:	f8 ff 
    815a:	ee 2b       	jnc	$-34     	;abs 0x8138
    {
        printf("%02X ", buffer[i]);
    }
}
    815c:	31 50 06 00 	add	#6,	r1	;#0x0006
    8160:	34 41       	pop	r4		
    8162:	30 41       	ret			

00008164 <prompt_node_id>:

static void prompt_node_id()
{
    8164:	04 12       	push	r4		
    8166:	04 41       	mov	r1,	r4	
    8168:	24 53       	incd	r4		
    printf("A node requested an id. You have %d seconds to enter an 8-bit ID.\r\n", ID_INPUT_TIMEOUT_SECONDS);
    816a:	30 12 0a 00 	push	#10		;#0x000a
    816e:	30 12 5c 9b 	push	#-25764	;#0x9b5c
    8172:	b0 12 ae 91 	call	#0x91ae	
    8176:	21 52       	add	#4,	r1	;r2 As==10
}
    8178:	34 41       	pop	r4		
    817a:	30 41       	ret			

0000817c <set_node_id>:

/* returns 1 if the id was expected and set, 0 otherwise */
static void set_node_id(unsigned char id)
{
    817c:	04 12       	push	r4		
    817e:	04 41       	mov	r1,	r4	
    8180:	24 53       	incd	r4		
    8182:	21 83       	decd	r1		
    8184:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    TIMER_ID_INPUT = UINT_MAX;
    8188:	b2 43 0a 02 	mov	#-1,	&0x020a	;r3 As==11
    if(flash_write_byte((unsigned char *) NODE_ID_LOCATION, id) != 0)
    818c:	5e 44 fc ff 	mov.b	-4(r4),	r14	;0xfffc(r4)
    8190:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    8194:	b0 12 28 90 	call	#0x9028	
    8198:	0f 93       	tst	r15		
    819a:	0a 24       	jz	$+22     	;abs 0x81b0
    {
        flash_erase_segment((unsigned int *) NODE_ID_LOCATION);
    819c:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    81a0:	b0 12 f0 90 	call	#0x90f0	
        flash_write_byte((unsigned char *) NODE_ID_LOCATION, id);
    81a4:	5e 44 fc ff 	mov.b	-4(r4),	r14	;0xfffc(r4)
    81a8:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    81ac:	b0 12 28 90 	call	#0x9028	
    }
    node_id = id;
    81b0:	d2 44 fc ff 	mov.b	-4(r4),	&0x0200	;0xfffc(r4)
    81b4:	00 02 
    printf("this node id is now 0x%02X\r\n", id);
    81b6:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    81ba:	0f 12       	push	r15		
    81bc:	30 12 a0 9b 	push	#-25696	;#0x9ba0
    81c0:	b0 12 ae 91 	call	#0x91ae	
    81c4:	21 52       	add	#4,	r1	;r2 As==10
}
    81c6:	21 53       	incd	r1		
    81c8:	34 41       	pop	r4		
    81ca:	30 41       	ret			

000081cc <timer_tick_cb>:

/*
 * Timer
 */

void timer_tick_cb() {
    81cc:	04 12       	push	r4		
    81ce:	04 41       	mov	r1,	r4	
    81d0:	24 53       	incd	r4		
    81d2:	21 83       	decd	r1		
    int i;
    for(i = 0; i < NUM_TIMERS; i++)
    81d4:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    81d8:	19 3c       	jmp	$+52     	;abs 0x820c
    {
        if(timer[i] != UINT_MAX) {
    81da:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81de:	0f 5f       	rla	r15		
    81e0:	3f 50 02 02 	add	#514,	r15	;#0x0202
    81e4:	2f 4f       	mov	@r15,	r15	
    81e6:	3f 93       	cmp	#-1,	r15	;r3 As==11
    81e8:	0f 24       	jz	$+32     	;abs 0x8208
            timer[i]++;
    81ea:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81ee:	0f 5f       	rla	r15		
    81f0:	3f 50 02 02 	add	#514,	r15	;#0x0202
    81f4:	2f 4f       	mov	@r15,	r15	
    81f6:	0e 4f       	mov	r15,	r14	
    81f8:	1e 53       	inc	r14		
    81fa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81fe:	0f 5f       	rla	r15		
    8200:	3f 50 02 02 	add	#514,	r15	;#0x0202
    8204:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
 * Timer
 */

void timer_tick_cb() {
    int i;
    for(i = 0; i < NUM_TIMERS; i++)
    8208:	94 53 fc ff 	inc	-4(r4)		;0xfffc(r4)
    820c:	b4 90 05 00 	cmp	#5,	-4(r4)	;#0x0005, 0xfffc(r4)
    8210:	fc ff 
    8212:	e3 3b       	jl	$-56     	;abs 0x81da
    {
        if(timer[i] != UINT_MAX) {
            timer[i]++;
        }
    }
}
    8214:	21 53       	incd	r1		
    8216:	34 41       	pop	r4		
    8218:	30 41       	ret			

0000821a <timer_reached>:

int timer_reached(uint16_t timer, uint16_t count) {
    821a:	04 12       	push	r4		
    821c:	04 41       	mov	r1,	r4	
    821e:	24 53       	incd	r4		
    8220:	21 82       	sub	#4,	r1	;r2 As==10
    8222:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8226:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    return (timer >= count);
    822a:	1f 43       	mov	#1,	r15	;r3 As==01
    822c:	94 94 fc ff 	cmp	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    8230:	fa ff 
    8232:	01 2c       	jc	$+4      	;abs 0x8236
    8234:	0f 43       	clr	r15		
}
    8236:	21 52       	add	#4,	r1	;r2 As==10
    8238:	34 41       	pop	r4		
    823a:	30 41       	ret			

0000823c <led_green_blink>:
static int led_green_duration;
static int led_green_flag;

/* asynchronous */
static void led_green_blink(int duration)
{
    823c:	04 12       	push	r4		
    823e:	04 41       	mov	r1,	r4	
    8240:	24 53       	incd	r4		
    8242:	21 83       	decd	r1		
    8244:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    led_green_duration = duration;
    8248:	92 44 fc ff 	mov	-4(r4),	&0x0218	;0xfffc(r4)
    824c:	18 02 
    led_green_flag = 1;
    824e:	92 43 1a 02 	mov	#1,	&0x021a	;r3 As==01
}
    8252:	21 53       	incd	r1		
    8254:	34 41       	pop	r4		
    8256:	30 41       	ret			

00008258 <thread_led_green>:

static PT_THREAD(thread_led_green(struct pt *pt))
{
    8258:	04 12       	push	r4		
    825a:	04 41       	mov	r1,	r4	
    825c:	24 53       	incd	r4		
    825e:	21 82       	sub	#4,	r1	;r2 As==10
    8260:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    8264:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    8268:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    826c:	2f 4f       	mov	@r15,	r15	
    826e:	3f 90 87 00 	cmp	#135,	r15	;#0x0087
    8272:	0a 24       	jz	$+22     	;abs 0x8288
    8274:	3f 90 8b 00 	cmp	#139,	r15	;#0x008b
    8278:	16 24       	jz	$+46     	;abs 0x82a6
    827a:	0f 93       	tst	r15		
    827c:	24 20       	jnz	$+74     	;abs 0x82c6

    while(1)
    {
        PT_WAIT_UNTIL(pt, led_green_flag);
    827e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8282:	bf 40 87 00 	mov	#135,	0(r15)	;#0x0087, 0x0000(r15)
    8286:	00 00 
    8288:	1f 42 1a 02 	mov	&0x021a,r15	
    828c:	0f 93       	tst	r15		
    828e:	02 20       	jnz	$+6      	;abs 0x8294
    8290:	4f 43       	clr.b	r15		
    8292:	21 3c       	jmp	$+68     	;abs 0x82d6
        led_green_on();
    8294:	b0 12 7e 8a 	call	#0x8a7e	
        TIMER_LED_GREEN_ON = 0;
    8298:	82 43 04 02 	mov	#0,	&0x0204	;r3 As==00
        PT_WAIT_UNTIL(pt, timer_reached(TIMER_LED_GREEN_ON,
    829c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82a0:	bf 40 8b 00 	mov	#139,	0(r15)	;#0x008b, 0x0000(r15)
    82a4:	00 00 
    82a6:	1f 42 18 02 	mov	&0x0218,r15	
    82aa:	0e 4f       	mov	r15,	r14	
    82ac:	1f 42 04 02 	mov	&0x0204,r15	
    82b0:	b0 12 1a 82 	call	#0x821a	
    82b4:	0f 93       	tst	r15		
    82b6:	02 20       	jnz	$+6      	;abs 0x82bc
    82b8:	4f 43       	clr.b	r15		
    82ba:	0d 3c       	jmp	$+28     	;abs 0x82d6
          led_green_duration));
        led_green_off();
    82bc:	b0 12 68 8a 	call	#0x8a68	
        led_green_flag = 0;
    82c0:	82 43 1a 02 	mov	#0,	&0x021a	;r3 As==00
    }
    82c4:	dc 3f       	jmp	$-70     	;abs 0x827e

    PT_END(pt);
    82c6:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    82ca:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82ce:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    82d2:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    82d6:	21 52       	add	#4,	r1	;r2 As==10
    82d8:	34 41       	pop	r4		
    82da:	30 41       	ret			

000082dc <thread_led_red>:

static PT_THREAD(thread_led_red(struct pt *pt))
{
    82dc:	04 12       	push	r4		
    82de:	04 41       	mov	r1,	r4	
    82e0:	24 53       	incd	r4		
    82e2:	21 82       	sub	#4,	r1	;r2 As==10
    82e4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    82e8:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    82ec:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82f0:	2f 4f       	mov	@r15,	r15	
    82f2:	0f 93       	tst	r15		
    82f4:	05 24       	jz	$+12     	;abs 0x8300
    82f6:	3f 90 9b 00 	cmp	#155,	r15	;#0x009b
    82fa:	0b 24       	jz	$+24     	;abs 0x8312
    82fc:	14 3c       	jmp	$+42     	;abs 0x8326
    while(1)
    {
        led_red_switch();
        TIMER_LED_RED_ON = 0;
        PT_WAIT_UNTIL(pt, timer_reached(TIMER_LED_RED_ON, 100));
    }
    82fe:	03 43       	nop			
{
    PT_BEGIN(pt);

    while(1)
    {
        led_red_switch();
    8300:	b0 12 d0 8a 	call	#0x8ad0	
        TIMER_LED_RED_ON = 0;
    8304:	82 43 02 02 	mov	#0,	&0x0202	;r3 As==00
        PT_WAIT_UNTIL(pt, timer_reached(TIMER_LED_RED_ON, 100));
    8308:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    830c:	bf 40 9b 00 	mov	#155,	0(r15)	;#0x009b, 0x0000(r15)
    8310:	00 00 
    8312:	1f 42 02 02 	mov	&0x0202,r15	
    8316:	3e 40 64 00 	mov	#100,	r14	;#0x0064
    831a:	b0 12 1a 82 	call	#0x821a	
    831e:	0f 93       	tst	r15		
    8320:	ee 23       	jnz	$-34     	;abs 0x82fe
    8322:	4f 43       	clr.b	r15		
    8324:	08 3c       	jmp	$+18     	;abs 0x8336
    }

    PT_END(pt);
    8326:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    832a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    832e:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8332:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    8336:	21 52       	add	#4,	r1	;r2 As==10
    8338:	34 41       	pop	r4		
    833a:	30 41       	ret			

0000833c <uart_cb>:

static int uart_flag;
static uint8_t uart_data;

int uart_cb(uint8_t data)
{
    833c:	04 12       	push	r4		
    833e:	04 41       	mov	r1,	r4	
    8340:	24 53       	incd	r4		
    8342:	21 83       	decd	r1		
    8344:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    uart_flag = 1;
    8348:	92 43 1c 02 	mov	#1,	&0x021c	;r3 As==01
    uart_data = data;
    834c:	d2 44 fc ff 	mov.b	-4(r4),	&0x021e	;0xfffc(r4)
    8350:	1e 02 
    return 0;
    8352:	0f 43       	clr	r15		
}
    8354:	21 53       	incd	r1		
    8356:	34 41       	pop	r4		
    8358:	30 41       	ret			

0000835a <print_temperature>:

/* to be called from within a protothread */
static void print_temperature()
{
    835a:	04 12       	push	r4		
    835c:	04 41       	mov	r1,	r4	
    835e:	24 53       	incd	r4		
    8360:	21 83       	decd	r1		
    int temperature = adc10_sample_temp();
    8362:	b0 12 cc 85 	call	#0x85cc	
    8366:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    printf("temperature: %d, hex: ", temperature);
    836a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    836e:	0f 12       	push	r15		
    8370:	30 12 bd 9b 	push	#-25667	;#0x9bbd
    8374:	b0 12 ae 91 	call	#0x91ae	
    8378:	21 52       	add	#4,	r1	;r2 As==10
    printhex((char *) &temperature, 2);
    837a:	2e 43       	mov	#2,	r14	;r3 As==10
    837c:	0f 44       	mov	r4,	r15	
    837e:	2f 82       	sub	#4,	r15	;r2 As==10
    8380:	b0 12 20 81 	call	#0x8120	
    putchar('\r');
    8384:	3f 40 0d 00 	mov	#13,	r15	;#0x000d
    8388:	b0 12 a4 8d 	call	#0x8da4	
    putchar('\n');
    838c:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8390:	b0 12 a4 8d 	call	#0x8da4	
}
    8394:	21 53       	incd	r1		
    8396:	34 41       	pop	r4		
    8398:	30 41       	ret			

0000839a <thread_uart>:

static PT_THREAD(thread_uart(struct pt *pt))
{
    839a:	04 12       	push	r4		
    839c:	04 41       	mov	r1,	r4	
    839e:	24 53       	incd	r4		
    83a0:	21 82       	sub	#4,	r1	;r2 As==10
    83a2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    83a6:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    83aa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83ae:	2f 4f       	mov	@r15,	r15	
    83b0:	0f 93       	tst	r15		
    83b2:	04 24       	jz	$+10     	;abs 0x83bc
    83b4:	3f 90 c3 00 	cmp	#195,	r15	;#0x00c3
    83b8:	06 24       	jz	$+14     	;abs 0x83c6
    83ba:	1f 3c       	jmp	$+64     	;abs 0x83fa

    while(1)
    {
        PT_WAIT_UNTIL(pt, uart_flag);
    83bc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83c0:	bf 40 c3 00 	mov	#195,	0(r15)	;#0x00c3, 0x0000(r15)
    83c4:	00 00 
    83c6:	1f 42 1c 02 	mov	&0x021c,r15	
    83ca:	0f 93       	tst	r15		
    83cc:	02 20       	jnz	$+6      	;abs 0x83d2
    83ce:	4f 43       	clr.b	r15		
    83d0:	1c 3c       	jmp	$+58     	;abs 0x840a

        led_green_blink(10); /* 10 timer ticks = 100 ms */
    83d2:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    83d6:	b0 12 3c 82 	call	#0x823c	

        /* does the local node expects an id
         * or do we have to broadcast it? */
	

	printf("uart_data: %d \r\n", uart_data);
    83da:	5f 42 1e 02 	mov.b	&0x021e,r15	
    83de:	4f 4f       	mov.b	r15,	r15	
    83e0:	0f 12       	push	r15		
    83e2:	30 12 d4 9b 	push	#-25644	;#0x9bd4
    83e6:	b0 12 ae 91 	call	#0x91ae	
    83ea:	21 52       	add	#4,	r1	;r2 As==10

	set_node_id(uart_data);
    83ec:	5f 42 1e 02 	mov.b	&0x021e,r15	
    83f0:	b0 12 7c 81 	call	#0x817c	

        uart_flag = 0;
    83f4:	82 43 1c 02 	mov	#0,	&0x021c	;r3 As==00
    }
    83f8:	e1 3f       	jmp	$-60     	;abs 0x83bc

    PT_END(pt);
    83fa:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    83fe:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8402:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8406:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    840a:	21 52       	add	#4,	r1	;r2 As==10
    840c:	34 41       	pop	r4		
    840e:	30 41       	ret			

00008410 <button_pressed_cb>:
#define ANTIBOUNCING_DURATION 10 /* 10 timer counts = 100 ms */
static int antibouncing_flag;
static int button_pressed_flag;

void button_pressed_cb()
{
    8410:	04 12       	push	r4		
    8412:	04 41       	mov	r1,	r4	
    8414:	24 53       	incd	r4		
    if(antibouncing_flag == 0)
    8416:	1f 42 20 02 	mov	&0x0220,r15	
    841a:	0f 93       	tst	r15		
    841c:	0a 20       	jnz	$+22     	;abs 0x8432
    {
        button_pressed_flag = 1;
    841e:	92 43 22 02 	mov	#1,	&0x0222	;r3 As==01
        antibouncing_flag = 1;
    8422:	92 43 20 02 	mov	#1,	&0x0220	;r3 As==01
        TIMER_ANTIBOUNCING = 0;
    8426:	82 43 06 02 	mov	#0,	&0x0206	;r3 As==00
        led_green_blink(200); /* 200 timer ticks = 2 seconds */
    842a:	3f 40 c8 00 	mov	#200,	r15	;#0x00c8
    842e:	b0 12 3c 82 	call	#0x823c	
    }
}
    8432:	34 41       	pop	r4		
    8434:	30 41       	ret			

00008436 <thread_button>:

static PT_THREAD(thread_button(struct pt *pt))
{
    8436:	04 12       	push	r4		
    8438:	04 41       	mov	r1,	r4	
    843a:	24 53       	incd	r4		
    843c:	21 82       	sub	#4,	r1	;r2 As==10
    843e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    8442:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    8446:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    844a:	2f 4f       	mov	@r15,	r15	
    844c:	0f 93       	tst	r15		
    844e:	04 24       	jz	$+10     	;abs 0x8458
    8450:	3f 90 ee 00 	cmp	#238,	r15	;#0x00ee
    8454:	06 24       	jz	$+14     	;abs 0x8462
    8456:	12 3c       	jmp	$+38     	;abs 0x847c

    while(1)
    {
        PT_WAIT_UNTIL(pt, button_pressed_flag == 1);
    8458:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    845c:	bf 40 ee 00 	mov	#238,	0(r15)	;#0x00ee, 0x0000(r15)
    8460:	00 00 
    8462:	1f 42 22 02 	mov	&0x0222,r15	
    8466:	1f 93       	cmp	#1,	r15	;r3 As==01
    8468:	02 24       	jz	$+6      	;abs 0x846e
    846a:	4f 43       	clr.b	r15		
    846c:	0f 3c       	jmp	$+32     	;abs 0x848c

        TIMER_ID_INPUT = 0;
    846e:	82 43 0a 02 	mov	#0,	&0x020a	;r3 As==00

        /* ask locally for a node id and broadcast an id request */
        prompt_node_id();
    8472:	b0 12 64 81 	call	#0x8164	

        button_pressed_flag = 0;
    8476:	82 43 22 02 	mov	#0,	&0x0222	;r3 As==00
    }
    847a:	ee 3f       	jmp	$-34     	;abs 0x8458


    PT_END(pt);
    847c:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8480:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8484:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8488:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    848c:	21 52       	add	#4,	r1	;r2 As==10
    848e:	34 41       	pop	r4		
    8490:	30 41       	ret			

00008492 <thread_antibouncing>:

static PT_THREAD(thread_antibouncing(struct pt *pt))
{
    8492:	04 12       	push	r4		
    8494:	04 41       	mov	r1,	r4	
    8496:	24 53       	incd	r4		
    8498:	21 82       	sub	#4,	r1	;r2 As==10
    849a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    849e:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    84a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84a6:	2f 4f       	mov	@r15,	r15	
    84a8:	0f 93       	tst	r15		
    84aa:	04 24       	jz	$+10     	;abs 0x84b4
    84ac:	3f 90 03 01 	cmp	#259,	r15	;#0x0103
    84b0:	06 24       	jz	$+14     	;abs 0x84be
    84b2:	16 3c       	jmp	$+46     	;abs 0x84e0

    while(1)
    {
        PT_WAIT_UNTIL(pt, antibouncing_flag
    84b4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84b8:	bf 40 03 01 	mov	#259,	0(r15)	;#0x0103, 0x0000(r15)
    84bc:	00 00 
    84be:	1f 42 20 02 	mov	&0x0220,r15	
    84c2:	0f 93       	tst	r15		
    84c4:	08 24       	jz	$+18     	;abs 0x84d6
    84c6:	1f 42 06 02 	mov	&0x0206,r15	
    84ca:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    84ce:	b0 12 1a 82 	call	#0x821a	
    84d2:	0f 93       	tst	r15		
    84d4:	02 20       	jnz	$+6      	;abs 0x84da
    84d6:	4f 43       	clr.b	r15		
    84d8:	0b 3c       	jmp	$+24     	;abs 0x84f0
          && timer_reached(TIMER_ANTIBOUNCING, ANTIBOUNCING_DURATION));
        antibouncing_flag = 0;
    84da:	82 43 20 02 	mov	#0,	&0x0220	;r3 As==00
    }
    84de:	ea 3f       	jmp	$-42     	;abs 0x84b4

    PT_END(pt);
    84e0:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84e4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84e8:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    84ec:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    84f0:	21 52       	add	#4,	r1	;r2 As==10
    84f2:	34 41       	pop	r4		
    84f4:	30 41       	ret			

000084f6 <thread_periodic_print>:

static PT_THREAD(thread_periodic_print(struct pt *pt))
{
    84f6:	04 12       	push	r4		
    84f8:	04 41       	mov	r1,	r4	
    84fa:	24 53       	incd	r4		
    84fc:	21 82       	sub	#4,	r1	;r2 As==10
    84fe:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    8502:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    8506:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    850a:	2f 4f       	mov	@r15,	r15	
    850c:	0f 93       	tst	r15		
    850e:	04 24       	jz	$+10     	;abs 0x8518
    8510:	3f 90 11 01 	cmp	#273,	r15	;#0x0111
    8514:	08 24       	jz	$+18     	;abs 0x8526
    8516:	18 3c       	jmp	$+50     	;abs 0x8548

    while(1)
    {
        TIMER_TEMP_PRINT = 0;
    8518:	82 43 08 02 	mov	#0,	&0x0208	;r3 As==00
        PT_WAIT_UNTIL(pt, node_id != NODE_ID_UNDEFINED && timer_reached( TIMER_TEMP_PRINT, 1000));
    851c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8520:	bf 40 11 01 	mov	#273,	0(r15)	;#0x0111, 0x0000(r15)
    8524:	00 00 
    8526:	5f 42 00 02 	mov.b	&0x0200,r15	
    852a:	4f 93       	tst.b	r15		
    852c:	08 24       	jz	$+18     	;abs 0x853e
    852e:	1f 42 08 02 	mov	&0x0208,r15	
    8532:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    8536:	b0 12 1a 82 	call	#0x821a	
    853a:	0f 93       	tst	r15		
    853c:	02 20       	jnz	$+6      	;abs 0x8542
    853e:	4f 43       	clr.b	r15		
    8540:	0b 3c       	jmp	$+24     	;abs 0x8558
        print_temperature();
    8542:	b0 12 5a 83 	call	#0x835a	
    }
    8546:	e8 3f       	jmp	$-46     	;abs 0x8518

    PT_END(pt);
    8548:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    854c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8550:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8554:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    8558:	21 52       	add	#4,	r1	;r2 As==10
    855a:	34 41       	pop	r4		
    855c:	30 41       	ret			

0000855e <adc10_start>:
    855e:	04 12       	push	r4		
    8560:	04 41       	mov	r1,	r4	
    8562:	24 53       	incd	r4		
    8564:	b2 40 86 10 	mov	#4230,	&0x0224	;#0x1086
    8568:	24 02 
    856a:	b2 40 dc 0a 	mov	#2780,	&0x0226	;#0x0adc
    856e:	26 02 
    8570:	34 41       	pop	r4		
    8572:	30 41       	ret			

00008574 <adc10_calibrate>:
    8574:	04 12       	push	r4		
    8576:	04 41       	mov	r1,	r4	
    8578:	24 53       	incd	r4		
    857a:	21 82       	sub	#4,	r1	;r2 As==10
    857c:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8580:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    8584:	84 93 fa ff 	tst	-6(r4)		;0xfffa(r4)
    8588:	04 24       	jz	$+10     	;abs 0x8592
    858a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    858e:	82 4f 24 02 	mov	r15,	&0x0224	
    8592:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    8596:	04 24       	jz	$+10     	;abs 0x85a0
    8598:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    859c:	82 4f 26 02 	mov	r15,	&0x0226	
    85a0:	21 52       	add	#4,	r1	;r2 As==10
    85a2:	34 41       	pop	r4		
    85a4:	30 41       	ret			

000085a6 <adc10_stop>:
    85a6:	04 12       	push	r4		
    85a8:	04 41       	mov	r1,	r4	
    85aa:	24 53       	incd	r4		
    85ac:	1f 42 b0 01 	mov	&0x01b0,r15	
    85b0:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    85b4:	82 4f b0 01 	mov	r15,	&0x01b0	
    85b8:	34 41       	pop	r4		
    85ba:	30 41       	ret			

000085bc <adc10irq>:
    85bc:	04 12       	push	r4		
    85be:	04 41       	mov	r1,	r4	
    85c0:	24 53       	incd	r4		
    85c2:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    85c6:	00 00 
    85c8:	34 41       	pop	r4		
    85ca:	00 13       	reti			

000085cc <adc10_sample_temp>:
    85cc:	0b 12       	push	r11		
    85ce:	0a 12       	push	r10		
    85d0:	09 12       	push	r9		
    85d2:	08 12       	push	r8		
    85d4:	04 12       	push	r4		
    85d6:	04 41       	mov	r1,	r4	
    85d8:	34 50 0a 00 	add	#10,	r4	;#0x000a
    85dc:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    85e0:	b2 40 80 a0 	mov	#-24448,&0x01b2	;#0xa080
    85e4:	b2 01 
    85e6:	b2 40 38 3c 	mov	#15416,	&0x01b0	;#0x3c38
    85ea:	b0 01 
    85ec:	3e 40 3c 00 	mov	#60,	r14	;#0x003c
    85f0:	0f 43       	clr	r15		
    85f2:	b0 12 24 89 	call	#0x8924	
    85f6:	1f 42 b0 01 	mov	&0x01b0,r15	
    85fa:	3f d0 03 00 	bis	#3,	r15	;#0x0003
    85fe:	82 4f b0 01 	mov	r15,	&0x01b0	
    8602:	32 d0 10 00 	bis	#16,	r2	;#0x0010
    8606:	1f 42 b4 01 	mov	&0x01b4,r15	
    860a:	08 4f       	mov	r15,	r8	
    860c:	09 43       	clr	r9		
    860e:	84 48 f2 ff 	mov	r8,	-14(r4)	;0xfff2(r4)
    8612:	84 49 f4 ff 	mov	r9,	-12(r4)	;0xfff4(r4)
    8616:	1f 42 b0 01 	mov	&0x01b0,r15	
    861a:	3f f0 fd ff 	and	#-3,	r15	;#0xfffd
    861e:	82 4f b0 01 	mov	r15,	&0x01b0	
    8622:	1f 42 b0 01 	mov	&0x01b0,r15	
    8626:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    862a:	82 4f b0 01 	mov	r15,	&0x01b0	
    862e:	1f 42 24 02 	mov	&0x0224,r15	
    8632:	0a 4f       	mov	r15,	r10	
    8634:	0f 4a       	mov	r10,	r15	
    8636:	8f 10       	swpb	r15		
    8638:	8f 11       	sxt	r15		
    863a:	8f 10       	swpb	r15		
    863c:	8f 11       	sxt	r15		
    863e:	0b 4f       	mov	r15,	r11	
    8640:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    8644:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8648:	0c 4e       	mov	r14,	r12	
    864a:	0d 4f       	mov	r15,	r13	
    864c:	0e 4a       	mov	r10,	r14	
    864e:	0f 4b       	mov	r11,	r15	
    8650:	b0 12 82 91 	call	#0x9182	
    8654:	0f 93       	tst	r15		
    8656:	04 38       	jl	$+10     	;abs 0x8660
    8658:	1f 93       	cmp	#1,	r15	;r3 As==01
    865a:	05 34       	jge	$+12     	;abs 0x8666
    865c:	0e 93       	tst	r14		
    865e:	03 2c       	jc	$+8      	;abs 0x8666
    8660:	3e 50 ff 03 	add	#1023,	r14	;#0x03ff
    8664:	0f 63       	adc	r15		
    8666:	8e 10       	swpb	r14		
    8668:	8f 10       	swpb	r15		
    866a:	4e ef       	xor.b	r15,	r14	
    866c:	0e ef       	xor	r15,	r14	
    866e:	8f 11       	sxt	r15		
    8670:	0f 11       	rra	r15		
    8672:	0e 10       	rrc	r14		
    8674:	0f 11       	rra	r15		
    8676:	0e 10       	rrc	r14		
    8678:	1f 42 26 02 	mov	&0x0226,r15	
    867c:	0d 4e       	mov	r14,	r13	
    867e:	0d 8f       	sub	r15,	r13	
    8680:	0f 4d       	mov	r13,	r15	
    8682:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
    8686:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    868a:	31 50 06 00 	add	#6,	r1	;#0x0006
    868e:	34 41       	pop	r4		
    8690:	38 41       	pop	r8		
    8692:	39 41       	pop	r9		
    8694:	3a 41       	pop	r10		
    8696:	3b 41       	pop	r11		
    8698:	30 41       	ret			

0000869a <adc10_sample_avcc>:
    869a:	0b 12       	push	r11		
    869c:	0a 12       	push	r10		
    869e:	04 12       	push	r4		
    86a0:	04 41       	mov	r1,	r4	
    86a2:	34 50 06 00 	add	#6,	r4	;#0x0006
    86a6:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    86aa:	b2 40 00 b0 	mov	#-20480,&0x01b2	;#0xb000
    86ae:	b2 01 
    86b0:	b2 40 78 30 	mov	#12408,	&0x01b0	;#0x3078
    86b4:	b0 01 
    86b6:	3e 40 3c 00 	mov	#60,	r14	;#0x003c
    86ba:	0f 43       	clr	r15		
    86bc:	b0 12 24 89 	call	#0x8924	
    86c0:	1f 42 b0 01 	mov	&0x01b0,r15	
    86c4:	3f d0 03 00 	bis	#3,	r15	;#0x0003
    86c8:	82 4f b0 01 	mov	r15,	&0x01b0	
    86cc:	32 d0 10 00 	bis	#16,	r2	;#0x0010
    86d0:	1f 42 b4 01 	mov	&0x01b4,r15	
    86d4:	0a 4f       	mov	r15,	r10	
    86d6:	0b 43       	clr	r11		
    86d8:	84 4a f6 ff 	mov	r10,	-10(r4)	;0xfff6(r4)
    86dc:	84 4b f8 ff 	mov	r11,	-8(r4)	;0xfff8(r4)
    86e0:	1f 42 b0 01 	mov	&0x01b0,r15	
    86e4:	3f f0 fd ff 	and	#-3,	r15	;#0xfffd
    86e8:	82 4f b0 01 	mov	r15,	&0x01b0	
    86ec:	1f 42 b0 01 	mov	&0x01b0,r15	
    86f0:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    86f4:	82 4f b0 01 	mov	r15,	&0x01b0	
    86f8:	1a 44 f6 ff 	mov	-10(r4),r10	;0xfff6(r4)
    86fc:	1b 44 f8 ff 	mov	-8(r4),	r11	;0xfff8(r4)
    8700:	0c 4a       	mov	r10,	r12	
    8702:	0d 4b       	mov	r11,	r13	
    8704:	0e 4c       	mov	r12,	r14	
    8706:	0f 4d       	mov	r13,	r15	
    8708:	0e 5e       	rla	r14		
    870a:	0f 6f       	rlc	r15		
    870c:	0e 5e       	rla	r14		
    870e:	0f 6f       	rlc	r15		
    8710:	0c 4e       	mov	r14,	r12	
    8712:	0d 4f       	mov	r15,	r13	
    8714:	0c 5a       	add	r10,	r12	
    8716:	0d 6b       	addc	r11,	r13	
    8718:	0e 4c       	mov	r12,	r14	
    871a:	0f 4d       	mov	r13,	r15	
    871c:	0e 5e       	rla	r14		
    871e:	0f 6f       	rlc	r15		
    8720:	0e 5e       	rla	r14		
    8722:	0f 6f       	rlc	r15		
    8724:	0e 5c       	add	r12,	r14	
    8726:	0f 6d       	addc	r13,	r15	
    8728:	0f 93       	tst	r15		
    872a:	04 38       	jl	$+10     	;abs 0x8734
    872c:	1f 93       	cmp	#1,	r15	;r3 As==01
    872e:	05 34       	jge	$+12     	;abs 0x873a
    8730:	0e 93       	tst	r14		
    8732:	03 2c       	jc	$+8      	;abs 0x873a
    8734:	3e 50 ff 01 	add	#511,	r14	;#0x01ff
    8738:	0f 63       	adc	r15		
    873a:	8e 10       	swpb	r14		
    873c:	8f 10       	swpb	r15		
    873e:	4e ef       	xor.b	r15,	r14	
    8740:	0e ef       	xor	r15,	r14	
    8742:	8f 11       	sxt	r15		
    8744:	0f 11       	rra	r15		
    8746:	0e 10       	rrc	r14		
    8748:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    874c:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8750:	31 50 06 00 	add	#6,	r1	;#0x0006
    8754:	34 41       	pop	r4		
    8756:	3a 41       	pop	r10		
    8758:	3b 41       	pop	r11		
    875a:	30 41       	ret			

0000875c <get_mclk_freq_mhz>:
    875c:	04 12       	push	r4		
    875e:	04 41       	mov	r1,	r4	
    8760:	24 53       	incd	r4		
    8762:	1f 42 28 02 	mov	&0x0228,r15	
    8766:	34 41       	pop	r4		
    8768:	30 41       	ret			

0000876a <set_mcu_speed>:
    876a:	04 12       	push	r4		
    876c:	04 41       	mov	r1,	r4	
    876e:	24 53       	incd	r4		
    8770:	21 83       	decd	r1		
    8772:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8776:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    877a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    877e:	3f 92       	cmp	#8,	r15	;r2 As==11
    8780:	16 24       	jz	$+46     	;abs 0x87ae
    8782:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    8786:	03 34       	jge	$+8      	;abs 0x878e
    8788:	1f 93       	cmp	#1,	r15	;r3 As==01
    878a:	08 24       	jz	$+18     	;abs 0x879c
    878c:	2b 3c       	jmp	$+88     	;abs 0x87e4
    878e:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8792:	16 24       	jz	$+46     	;abs 0x87c0
    8794:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8798:	1c 24       	jz	$+58     	;abs 0x87d2
    879a:	24 3c       	jmp	$+74     	;abs 0x87e4
    879c:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    87a0:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    87a4:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    87a8:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    87ac:	1b 3c       	jmp	$+56     	;abs 0x87e4
    87ae:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    87b2:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    87b6:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    87ba:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    87be:	12 3c       	jmp	$+38     	;abs 0x87e4
    87c0:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    87c4:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    87c8:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    87cc:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    87d0:	09 3c       	jmp	$+20     	;abs 0x87e4
    87d2:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    87d6:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    87da:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    87de:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    87e2:	03 43       	nop			
    87e4:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    87e8:	2f 93       	cmp	#2,	r15	;r3 As==10
    87ea:	0e 24       	jz	$+30     	;abs 0x8808
    87ec:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    87f0:	03 34       	jge	$+8      	;abs 0x87f8
    87f2:	1f 93       	cmp	#1,	r15	;r3 As==01
    87f4:	06 24       	jz	$+14     	;abs 0x8802
    87f6:	12 3c       	jmp	$+38     	;abs 0x881c
    87f8:	2f 92       	cmp	#4,	r15	;r2 As==10
    87fa:	09 24       	jz	$+20     	;abs 0x880e
    87fc:	3f 92       	cmp	#8,	r15	;r2 As==11
    87fe:	0a 24       	jz	$+22     	;abs 0x8814
    8800:	0d 3c       	jmp	$+28     	;abs 0x881c
    8802:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    8806:	0a 3c       	jmp	$+22     	;abs 0x881c
    8808:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    880c:	07 3c       	jmp	$+16     	;abs 0x881c
    880e:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    8812:	04 3c       	jmp	$+10     	;abs 0x881c
    8814:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    8818:	58 00 
    881a:	03 43       	nop			
    881c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8820:	82 4f 28 02 	mov	r15,	&0x0228	
    8824:	21 53       	incd	r1		
    8826:	34 41       	pop	r4		
    8828:	30 41       	ret			

0000882a <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    882a:	04 12       	push	r4		
    882c:	04 41       	mov	r1,	r4	
    882e:	24 53       	incd	r4		
    8830:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8832:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8834:	b0 12 6a 87 	call	#0x876a	
    8838:	34 41       	pop	r4		
    883a:	30 41       	ret			

0000883c <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    883c:	04 12       	push	r4		
    883e:	04 41       	mov	r1,	r4	
    8840:	24 53       	incd	r4		
    8842:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8844:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8846:	b0 12 6a 87 	call	#0x876a	
    884a:	34 41       	pop	r4		
    884c:	30 41       	ret			

0000884e <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    884e:	04 12       	push	r4		
    8850:	04 41       	mov	r1,	r4	
    8852:	24 53       	incd	r4		
    8854:	6e 43       	mov.b	#2,	r14	;r3 As==10
    8856:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8858:	b0 12 6a 87 	call	#0x876a	
    885c:	34 41       	pop	r4		
    885e:	30 41       	ret			

00008860 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    8860:	04 12       	push	r4		
    8862:	04 41       	mov	r1,	r4	
    8864:	24 53       	incd	r4		
    8866:	6e 42       	mov.b	#4,	r14	;r2 As==10
    8868:	7f 42       	mov.b	#8,	r15	;r2 As==11
    886a:	b0 12 6a 87 	call	#0x876a	
    886e:	34 41       	pop	r4		
    8870:	30 41       	ret			

00008872 <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    8872:	04 12       	push	r4		
    8874:	04 41       	mov	r1,	r4	
    8876:	24 53       	incd	r4		
    8878:	7e 42       	mov.b	#8,	r14	;r2 As==11
    887a:	7f 42       	mov.b	#8,	r15	;r2 As==11
    887c:	b0 12 6a 87 	call	#0x876a	
    8880:	34 41       	pop	r4		
    8882:	30 41       	ret			

00008884 <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    8884:	04 12       	push	r4		
    8886:	04 41       	mov	r1,	r4	
    8888:	24 53       	incd	r4		
    888a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    888c:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    8890:	b0 12 6a 87 	call	#0x876a	
    8894:	34 41       	pop	r4		
    8896:	30 41       	ret			

00008898 <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    8898:	04 12       	push	r4		
    889a:	04 41       	mov	r1,	r4	
    889c:	24 53       	incd	r4		
    889e:	6e 43       	mov.b	#2,	r14	;r3 As==10
    88a0:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    88a4:	b0 12 6a 87 	call	#0x876a	
    88a8:	34 41       	pop	r4		
    88aa:	30 41       	ret			

000088ac <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    88ac:	04 12       	push	r4		
    88ae:	04 41       	mov	r1,	r4	
    88b0:	24 53       	incd	r4		
    88b2:	6e 42       	mov.b	#4,	r14	;r2 As==10
    88b4:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    88b8:	b0 12 6a 87 	call	#0x876a	
    88bc:	34 41       	pop	r4		
    88be:	30 41       	ret			

000088c0 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    88c0:	04 12       	push	r4		
    88c2:	04 41       	mov	r1,	r4	
    88c4:	24 53       	incd	r4		
    88c6:	7e 42       	mov.b	#8,	r14	;r2 As==11
    88c8:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    88cc:	b0 12 6a 87 	call	#0x876a	
    88d0:	34 41       	pop	r4		
    88d2:	30 41       	ret			

000088d4 <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    88d4:	04 12       	push	r4		
    88d6:	04 41       	mov	r1,	r4	
    88d8:	24 53       	incd	r4		
    88da:	5e 43       	mov.b	#1,	r14	;r3 As==01
    88dc:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    88e0:	b0 12 6a 87 	call	#0x876a	
    88e4:	34 41       	pop	r4		
    88e6:	30 41       	ret			

000088e8 <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    88e8:	04 12       	push	r4		
    88ea:	04 41       	mov	r1,	r4	
    88ec:	24 53       	incd	r4		
    88ee:	6e 43       	mov.b	#2,	r14	;r3 As==10
    88f0:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    88f4:	b0 12 6a 87 	call	#0x876a	
    88f8:	34 41       	pop	r4		
    88fa:	30 41       	ret			

000088fc <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    88fc:	04 12       	push	r4		
    88fe:	04 41       	mov	r1,	r4	
    8900:	24 53       	incd	r4		
    8902:	6e 42       	mov.b	#4,	r14	;r2 As==10
    8904:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8908:	b0 12 6a 87 	call	#0x876a	
    890c:	34 41       	pop	r4		
    890e:	30 41       	ret			

00008910 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    8910:	04 12       	push	r4		
    8912:	04 41       	mov	r1,	r4	
    8914:	24 53       	incd	r4		
    8916:	7e 42       	mov.b	#8,	r14	;r2 As==11
    8918:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    891c:	b0 12 6a 87 	call	#0x876a	
    8920:	34 41       	pop	r4		
    8922:	30 41       	ret			

00008924 <loop_4_cycles>:
    8924:	04 12       	push	r4		
    8926:	04 41       	mov	r1,	r4	
    8928:	24 53       	incd	r4		
    892a:	3e 53       	add	#-1,	r14	;r3 As==11
    892c:	3f 63       	addc	#-1,	r15	;r3 As==11
    892e:	fd 2f       	jc	$-4      	;abs 0x892a
    8930:	34 41       	pop	r4		
    8932:	30 41       	ret			

00008934 <delay_usec>:
    8934:	04 12       	push	r4		
    8936:	04 41       	mov	r1,	r4	
    8938:	24 53       	incd	r4		
    893a:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    893e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8942:	1f 42 28 02 	mov	&0x0228,r15	
    8946:	3f 92       	cmp	#8,	r15	;r2 As==11
    8948:	18 24       	jz	$+50     	;abs 0x897a
    894a:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    894e:	03 2c       	jc	$+8      	;abs 0x8956
    8950:	1f 93       	cmp	#1,	r15	;r3 As==01
    8952:	08 24       	jz	$+18     	;abs 0x8964
    8954:	2d 3c       	jmp	$+92     	;abs 0x89b0
    8956:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    895a:	17 24       	jz	$+48     	;abs 0x898a
    895c:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8960:	1e 24       	jz	$+62     	;abs 0x899e
    8962:	26 3c       	jmp	$+78     	;abs 0x89b0
    8964:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8968:	12 c3       	clrc			
    896a:	0f 10       	rrc	r15		
    896c:	12 c3       	clrc			
    896e:	0f 10       	rrc	r15		
    8970:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    8974:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8978:	26 3c       	jmp	$+78     	;abs 0x89c6
    897a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    897e:	0f 5f       	rla	r15		
    8980:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    8984:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8988:	1e 3c       	jmp	$+62     	;abs 0x89c6
    898a:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    898e:	0f 4e       	mov	r14,	r15	
    8990:	0f 5f       	rla	r15		
    8992:	0f 5e       	add	r14,	r15	
    8994:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    8998:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    899c:	14 3c       	jmp	$+42     	;abs 0x89c6
    899e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89a2:	0f 5f       	rla	r15		
    89a4:	0f 5f       	rla	r15		
    89a6:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    89aa:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    89ae:	0b 3c       	jmp	$+24     	;abs 0x89c6
    89b0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89b4:	12 c3       	clrc			
    89b6:	0f 10       	rrc	r15		
    89b8:	12 c3       	clrc			
    89ba:	0f 10       	rrc	r15		
    89bc:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    89c0:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    89c4:	03 43       	nop			
    89c6:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    89ca:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    89ce:	b0 12 24 89 	call	#0x8924	
    89d2:	31 50 06 00 	add	#6,	r1	;#0x0006
    89d6:	34 41       	pop	r4		
    89d8:	30 41       	ret			

000089da <delay_ms>:
    89da:	04 12       	push	r4		
    89dc:	04 41       	mov	r1,	r4	
    89de:	24 53       	incd	r4		
    89e0:	31 82       	sub	#8,	r1	;r2 As==11
    89e2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    89e6:	1f 42 28 02 	mov	&0x0228,r15	
    89ea:	3f 92       	cmp	#8,	r15	;r2 As==11
    89ec:	13 24       	jz	$+40     	;abs 0x8a14
    89ee:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    89f2:	03 2c       	jc	$+8      	;abs 0x89fa
    89f4:	1f 93       	cmp	#1,	r15	;r3 As==01
    89f6:	08 24       	jz	$+18     	;abs 0x8a08
    89f8:	1f 3c       	jmp	$+64     	;abs 0x8a38
    89fa:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    89fe:	10 24       	jz	$+34     	;abs 0x8a20
    8a00:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8a04:	13 24       	jz	$+40     	;abs 0x8a2c
    8a06:	18 3c       	jmp	$+50     	;abs 0x8a38
    8a08:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8a0c:	f8 ff 
    8a0e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8a12:	18 3c       	jmp	$+50     	;abs 0x8a44
    8a14:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    8a18:	f8 ff 
    8a1a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8a1e:	12 3c       	jmp	$+38     	;abs 0x8a44
    8a20:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    8a24:	f8 ff 
    8a26:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8a2a:	0c 3c       	jmp	$+26     	;abs 0x8a44
    8a2c:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    8a30:	f8 ff 
    8a32:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8a36:	06 3c       	jmp	$+14     	;abs 0x8a44
    8a38:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8a3c:	f8 ff 
    8a3e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8a42:	03 43       	nop			
    8a44:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    8a48:	08 3c       	jmp	$+18     	;abs 0x8a5a
    8a4a:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    8a4e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8a52:	b0 12 24 89 	call	#0x8924	
    8a56:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    8a5a:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    8a5e:	f6 ff 
    8a60:	f4 2b       	jnc	$-22     	;abs 0x8a4a
    8a62:	31 52       	add	#8,	r1	;r2 As==11
    8a64:	34 41       	pop	r4		
    8a66:	30 41       	ret			

00008a68 <led_green_off>:
    8a68:	04 12       	push	r4		
    8a6a:	04 41       	mov	r1,	r4	
    8a6c:	24 53       	incd	r4		
    8a6e:	5f 42 21 00 	mov.b	&0x0021,r15	
    8a72:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    8a76:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8a7a:	34 41       	pop	r4		
    8a7c:	30 41       	ret			

00008a7e <led_green_on>:
    8a7e:	04 12       	push	r4		
    8a80:	04 41       	mov	r1,	r4	
    8a82:	24 53       	incd	r4		
    8a84:	5f 42 21 00 	mov.b	&0x0021,r15	
    8a88:	6f d3       	bis.b	#2,	r15	;r3 As==10
    8a8a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8a8e:	34 41       	pop	r4		
    8a90:	30 41       	ret			

00008a92 <led_green_switch>:
    8a92:	04 12       	push	r4		
    8a94:	04 41       	mov	r1,	r4	
    8a96:	24 53       	incd	r4		
    8a98:	5f 42 21 00 	mov.b	&0x0021,r15	
    8a9c:	6f e3       	xor.b	#2,	r15	;r3 As==10
    8a9e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8aa2:	34 41       	pop	r4		
    8aa4:	30 41       	ret			

00008aa6 <led_red_off>:
    8aa6:	04 12       	push	r4		
    8aa8:	04 41       	mov	r1,	r4	
    8aaa:	24 53       	incd	r4		
    8aac:	5f 42 21 00 	mov.b	&0x0021,r15	
    8ab0:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    8ab4:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8ab8:	34 41       	pop	r4		
    8aba:	30 41       	ret			

00008abc <led_red_on>:
    8abc:	04 12       	push	r4		
    8abe:	04 41       	mov	r1,	r4	
    8ac0:	24 53       	incd	r4		
    8ac2:	5f 42 21 00 	mov.b	&0x0021,r15	
    8ac6:	5f d3       	bis.b	#1,	r15	;r3 As==01
    8ac8:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8acc:	34 41       	pop	r4		
    8ace:	30 41       	ret			

00008ad0 <led_red_switch>:
    8ad0:	04 12       	push	r4		
    8ad2:	04 41       	mov	r1,	r4	
    8ad4:	24 53       	incd	r4		
    8ad6:	5f 42 21 00 	mov.b	&0x0021,r15	
    8ada:	5f e3       	xor.b	#1,	r15	;r3 As==01
    8adc:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8ae0:	34 41       	pop	r4		
    8ae2:	30 41       	ret			

00008ae4 <leds_off>:
    8ae4:	04 12       	push	r4		
    8ae6:	04 41       	mov	r1,	r4	
    8ae8:	24 53       	incd	r4		
    8aea:	5f 42 21 00 	mov.b	&0x0021,r15	
    8aee:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    8af2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8af6:	34 41       	pop	r4		
    8af8:	30 41       	ret			

00008afa <leds_on>:
    8afa:	04 12       	push	r4		
    8afc:	04 41       	mov	r1,	r4	
    8afe:	24 53       	incd	r4		
    8b00:	5f 42 21 00 	mov.b	&0x0021,r15	
    8b04:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8b08:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8b0c:	34 41       	pop	r4		
    8b0e:	30 41       	ret			

00008b10 <leds_init>:
    8b10:	04 12       	push	r4		
    8b12:	04 41       	mov	r1,	r4	
    8b14:	24 53       	incd	r4		
    8b16:	5f 42 21 00 	mov.b	&0x0021,r15	
    8b1a:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    8b1e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8b22:	5f 42 22 00 	mov.b	&0x0022,r15	
    8b26:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8b2a:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    8b2e:	5f 42 26 00 	mov.b	&0x0026,r15	
    8b32:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    8b36:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    8b3a:	b0 12 e4 8a 	call	#0x8ae4	
    8b3e:	34 41       	pop	r4		
    8b40:	30 41       	ret			

00008b42 <Timer_A>:
    8b42:	0f 12       	push	r15		
    8b44:	0e 12       	push	r14		
    8b46:	0d 12       	push	r13		
    8b48:	0c 12       	push	r12		
    8b4a:	04 12       	push	r4		
    8b4c:	04 41       	mov	r1,	r4	
    8b4e:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8b52:	1f 42 2a 02 	mov	&0x022a,r15	
    8b56:	0f 93       	tst	r15		
    8b58:	03 24       	jz	$+8      	;abs 0x8b60
    8b5a:	1f 42 2a 02 	mov	&0x022a,r15	
    8b5e:	8f 12       	call	r15		
    8b60:	1f 42 2c 02 	mov	&0x022c,r15	
    8b64:	1f 93       	cmp	#1,	r15	;r3 As==01
    8b66:	03 20       	jnz	$+8      	;abs 0x8b6e
    8b68:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    8b6c:	00 00 
    8b6e:	34 41       	pop	r4		
    8b70:	3c 41       	pop	r12		
    8b72:	3d 41       	pop	r13		
    8b74:	3e 41       	pop	r14		
    8b76:	3f 41       	pop	r15		
    8b78:	00 13       	reti			

00008b7a <timerA_init>:
    8b7a:	04 12       	push	r4		
    8b7c:	04 41       	mov	r1,	r4	
    8b7e:	24 53       	incd	r4		
    8b80:	82 43 2a 02 	mov	#0,	&0x022a	;r3 As==00
    8b84:	82 43 2c 02 	mov	#0,	&0x022c	;r3 As==00
    8b88:	b0 12 18 8c 	call	#0x8c18	
    8b8c:	34 41       	pop	r4		
    8b8e:	30 41       	ret			

00008b90 <timerA_register_cb>:
    8b90:	04 12       	push	r4		
    8b92:	04 41       	mov	r1,	r4	
    8b94:	24 53       	incd	r4		
    8b96:	21 83       	decd	r1		
    8b98:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8b9c:	92 44 fc ff 	mov	-4(r4),	&0x022a	;0xfffc(r4)
    8ba0:	2a 02 
    8ba2:	21 53       	incd	r1		
    8ba4:	34 41       	pop	r4		
    8ba6:	30 41       	ret			

00008ba8 <timerA_set_wakeup>:
    8ba8:	04 12       	push	r4		
    8baa:	04 41       	mov	r1,	r4	
    8bac:	24 53       	incd	r4		
    8bae:	21 83       	decd	r1		
    8bb0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8bb4:	92 44 fc ff 	mov	-4(r4),	&0x022c	;0xfffc(r4)
    8bb8:	2c 02 
    8bba:	21 53       	incd	r1		
    8bbc:	34 41       	pop	r4		
    8bbe:	30 41       	ret			

00008bc0 <timerA_start_ticks>:
    8bc0:	04 12       	push	r4		
    8bc2:	04 41       	mov	r1,	r4	
    8bc4:	24 53       	incd	r4		
    8bc6:	21 83       	decd	r1		
    8bc8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8bcc:	5f 42 53 00 	mov.b	&0x0053,r15	
    8bd0:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    8bd4:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    8bd8:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    8bdc:	62 01 
    8bde:	82 43 70 01 	mov	#0,	&0x0170	;r3 As==00
    8be2:	92 44 fc ff 	mov	-4(r4),	&0x0172	;0xfffc(r4)
    8be6:	72 01 
    8be8:	b2 40 10 01 	mov	#272,	&0x0160	;#0x0110
    8bec:	60 01 
    8bee:	21 53       	incd	r1		
    8bf0:	34 41       	pop	r4		
    8bf2:	30 41       	ret			

00008bf4 <timerA_start_milliseconds>:
    8bf4:	04 12       	push	r4		
    8bf6:	04 41       	mov	r1,	r4	
    8bf8:	24 53       	incd	r4		
    8bfa:	21 83       	decd	r1		
    8bfc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8c00:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8c04:	0f 4e       	mov	r14,	r15	
    8c06:	0f 5f       	rla	r15		
    8c08:	0f 5e       	add	r14,	r15	
    8c0a:	0f 5f       	rla	r15		
    8c0c:	0f 5f       	rla	r15		
    8c0e:	b0 12 c0 8b 	call	#0x8bc0	
    8c12:	21 53       	incd	r1		
    8c14:	34 41       	pop	r4		
    8c16:	30 41       	ret			

00008c18 <timerA_stop>:
    8c18:	04 12       	push	r4		
    8c1a:	04 41       	mov	r1,	r4	
    8c1c:	24 53       	incd	r4		
    8c1e:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
    8c22:	34 41       	pop	r4		
    8c24:	30 41       	ret			

00008c26 <Timer_B>:
    8c26:	0f 12       	push	r15		
    8c28:	0e 12       	push	r14		
    8c2a:	0d 12       	push	r13		
    8c2c:	0c 12       	push	r12		
    8c2e:	04 12       	push	r4		
    8c30:	04 41       	mov	r1,	r4	
    8c32:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8c36:	1f 42 2e 02 	mov	&0x022e,r15	
    8c3a:	0f 93       	tst	r15		
    8c3c:	03 24       	jz	$+8      	;abs 0x8c44
    8c3e:	1f 42 2e 02 	mov	&0x022e,r15	
    8c42:	8f 12       	call	r15		
    8c44:	1f 42 30 02 	mov	&0x0230,r15	
    8c48:	1f 93       	cmp	#1,	r15	;r3 As==01
    8c4a:	03 20       	jnz	$+8      	;abs 0x8c52
    8c4c:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    8c50:	00 00 
    8c52:	34 41       	pop	r4		
    8c54:	3c 41       	pop	r12		
    8c56:	3d 41       	pop	r13		
    8c58:	3e 41       	pop	r14		
    8c5a:	3f 41       	pop	r15		
    8c5c:	00 13       	reti			

00008c5e <timerB_init>:
    8c5e:	04 12       	push	r4		
    8c60:	04 41       	mov	r1,	r4	
    8c62:	24 53       	incd	r4		
    8c64:	82 43 2e 02 	mov	#0,	&0x022e	;r3 As==00
    8c68:	82 43 30 02 	mov	#0,	&0x0230	;r3 As==00
    8c6c:	b0 12 fc 8c 	call	#0x8cfc	
    8c70:	34 41       	pop	r4		
    8c72:	30 41       	ret			

00008c74 <timerB_register_cb>:
    8c74:	04 12       	push	r4		
    8c76:	04 41       	mov	r1,	r4	
    8c78:	24 53       	incd	r4		
    8c7a:	21 83       	decd	r1		
    8c7c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8c80:	92 44 fc ff 	mov	-4(r4),	&0x022e	;0xfffc(r4)
    8c84:	2e 02 
    8c86:	21 53       	incd	r1		
    8c88:	34 41       	pop	r4		
    8c8a:	30 41       	ret			

00008c8c <timerB_set_wakeup>:
    8c8c:	04 12       	push	r4		
    8c8e:	04 41       	mov	r1,	r4	
    8c90:	24 53       	incd	r4		
    8c92:	21 83       	decd	r1		
    8c94:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8c98:	92 44 fc ff 	mov	-4(r4),	&0x0230	;0xfffc(r4)
    8c9c:	30 02 
    8c9e:	21 53       	incd	r1		
    8ca0:	34 41       	pop	r4		
    8ca2:	30 41       	ret			

00008ca4 <timerB_start_ticks>:
    8ca4:	04 12       	push	r4		
    8ca6:	04 41       	mov	r1,	r4	
    8ca8:	24 53       	incd	r4		
    8caa:	21 83       	decd	r1		
    8cac:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8cb0:	5f 42 53 00 	mov.b	&0x0053,r15	
    8cb4:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    8cb8:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    8cbc:	b2 40 10 00 	mov	#16,	&0x0182	;#0x0010
    8cc0:	82 01 
    8cc2:	82 43 90 01 	mov	#0,	&0x0190	;r3 As==00
    8cc6:	92 44 fc ff 	mov	-4(r4),	&0x0192	;0xfffc(r4)
    8cca:	92 01 
    8ccc:	b2 40 10 01 	mov	#272,	&0x0180	;#0x0110
    8cd0:	80 01 
    8cd2:	21 53       	incd	r1		
    8cd4:	34 41       	pop	r4		
    8cd6:	30 41       	ret			

00008cd8 <timerB_start_milliseconds>:
    8cd8:	04 12       	push	r4		
    8cda:	04 41       	mov	r1,	r4	
    8cdc:	24 53       	incd	r4		
    8cde:	21 83       	decd	r1		
    8ce0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8ce4:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8ce8:	0f 4e       	mov	r14,	r15	
    8cea:	0f 5f       	rla	r15		
    8cec:	0f 5e       	add	r14,	r15	
    8cee:	0f 5f       	rla	r15		
    8cf0:	0f 5f       	rla	r15		
    8cf2:	b0 12 a4 8c 	call	#0x8ca4	
    8cf6:	21 53       	incd	r1		
    8cf8:	34 41       	pop	r4		
    8cfa:	30 41       	ret			

00008cfc <timerB_stop>:
    8cfc:	04 12       	push	r4		
    8cfe:	04 41       	mov	r1,	r4	
    8d00:	24 53       	incd	r4		
    8d02:	82 43 80 01 	mov	#0,	&0x0180	;r3 As==00
    8d06:	34 41       	pop	r4		
    8d08:	30 41       	ret			

00008d0a <uart_init>:
    8d0a:	04 12       	push	r4		
    8d0c:	04 41       	mov	r1,	r4	
    8d0e:	24 53       	incd	r4		
    8d10:	21 83       	decd	r1		
    8d12:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8d16:	5f 42 1b 00 	mov.b	&0x001b,r15	
    8d1a:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    8d1e:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    8d22:	5f 42 1a 00 	mov.b	&0x001a,r15	
    8d26:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    8d2a:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    8d2e:	5f 42 1a 00 	mov.b	&0x001a,r15	
    8d32:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    8d36:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    8d3a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8d3e:	1f 93       	cmp	#1,	r15	;r3 As==01
    8d40:	03 24       	jz	$+8      	;abs 0x8d48
    8d42:	3f 92       	cmp	#8,	r15	;r2 As==11
    8d44:	12 24       	jz	$+38     	;abs 0x8d6a
    8d46:	23 3c       	jmp	$+72     	;abs 0x8d8e
    8d48:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    8d4c:	61 00 
    8d4e:	f2 40 68 00 	mov.b	#104,	&0x0062	;#0x0068
    8d52:	62 00 
    8d54:	c2 43 63 00 	mov.b	#0,	&0x0063	;r3 As==00
    8d58:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    8d5c:	5f 42 61 00 	mov.b	&0x0061,r15	
    8d60:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    8d64:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    8d68:	13 3c       	jmp	$+40     	;abs 0x8d90
    8d6a:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    8d6e:	61 00 
    8d70:	f2 40 41 00 	mov.b	#65,	&0x0062	;#0x0041
    8d74:	62 00 
    8d76:	f2 40 03 00 	mov.b	#3,	&0x0063	;#0x0003
    8d7a:	63 00 
    8d7c:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    8d80:	5f 42 61 00 	mov.b	&0x0061,r15	
    8d84:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    8d88:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    8d8c:	01 3c       	jmp	$+4      	;abs 0x8d90
    8d8e:	03 43       	nop			
    8d90:	82 43 32 02 	mov	#0,	&0x0232	;r3 As==00
    8d94:	21 53       	incd	r1		
    8d96:	34 41       	pop	r4		
    8d98:	30 41       	ret			

00008d9a <uart_stop>:
    8d9a:	04 12       	push	r4		
    8d9c:	04 41       	mov	r1,	r4	
    8d9e:	24 53       	incd	r4		
    8da0:	34 41       	pop	r4		
    8da2:	30 41       	ret			

00008da4 <putchar>:
    8da4:	04 12       	push	r4		
    8da6:	04 41       	mov	r1,	r4	
    8da8:	24 53       	incd	r4		
    8daa:	21 83       	decd	r1		
    8dac:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8db0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8db4:	4f 4f       	mov.b	r15,	r15	
    8db6:	c2 4f 67 00 	mov.b	r15,	&0x0067	
    8dba:	03 43       	nop			
    8dbc:	5f 42 03 00 	mov.b	&0x0003,r15	
    8dc0:	4f 4f       	mov.b	r15,	r15	
    8dc2:	2f f3       	and	#2,	r15	;r3 As==10
    8dc4:	0f 93       	tst	r15		
    8dc6:	fa 27       	jz	$-10     	;abs 0x8dbc
    8dc8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8dcc:	4f 4f       	mov.b	r15,	r15	
    8dce:	4f 4f       	mov.b	r15,	r15	
    8dd0:	21 53       	incd	r1		
    8dd2:	34 41       	pop	r4		
    8dd4:	30 41       	ret			

00008dd6 <uart_getchar>:
    8dd6:	04 12       	push	r4		
    8dd8:	04 41       	mov	r1,	r4	
    8dda:	24 53       	incd	r4		
    8ddc:	21 83       	decd	r1		
    8dde:	5f 42 66 00 	mov.b	&0x0066,r15	
    8de2:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8de6:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    8dea:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8dee:	21 53       	incd	r1		
    8df0:	34 41       	pop	r4		
    8df2:	30 41       	ret			

00008df4 <uart_eint>:
    8df4:	04 12       	push	r4		
    8df6:	04 41       	mov	r1,	r4	
    8df8:	24 53       	incd	r4		
    8dfa:	5f 42 01 00 	mov.b	&0x0001,r15	
    8dfe:	5f d3       	bis.b	#1,	r15	;r3 As==01
    8e00:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    8e04:	34 41       	pop	r4		
    8e06:	30 41       	ret			

00008e08 <uart_dint>:
    8e08:	04 12       	push	r4		
    8e0a:	04 41       	mov	r1,	r4	
    8e0c:	24 53       	incd	r4		
    8e0e:	5f 42 01 00 	mov.b	&0x0001,r15	
    8e12:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    8e16:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    8e1a:	34 41       	pop	r4		
    8e1c:	30 41       	ret			

00008e1e <uart_register_cb>:
    8e1e:	04 12       	push	r4		
    8e20:	04 41       	mov	r1,	r4	
    8e22:	24 53       	incd	r4		
    8e24:	21 83       	decd	r1		
    8e26:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8e2a:	92 44 fc ff 	mov	-4(r4),	&0x0232	;0xfffc(r4)
    8e2e:	32 02 
    8e30:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    8e34:	03 20       	jnz	$+8      	;abs 0x8e3c
    8e36:	b0 12 08 8e 	call	#0x8e08	
    8e3a:	02 3c       	jmp	$+6      	;abs 0x8e40
    8e3c:	b0 12 f4 8d 	call	#0x8df4	
    8e40:	21 53       	incd	r1		
    8e42:	34 41       	pop	r4		
    8e44:	30 41       	ret			

00008e46 <usart0irq>:
    8e46:	0f 12       	push	r15		
    8e48:	0e 12       	push	r14		
    8e4a:	0d 12       	push	r13		
    8e4c:	0c 12       	push	r12		
    8e4e:	04 12       	push	r4		
    8e50:	04 41       	mov	r1,	r4	
    8e52:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8e56:	21 83       	decd	r1		
    8e58:	5f 42 65 00 	mov.b	&0x0065,r15	
    8e5c:	4f 4f       	mov.b	r15,	r15	
    8e5e:	2f f2       	and	#4,	r15	;r2 As==10
    8e60:	0f 93       	tst	r15		
    8e62:	0a 24       	jz	$+22     	;abs 0x8e78
    8e64:	5f 42 66 00 	mov.b	&0x0066,r15	
    8e68:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    8e6c:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    8e70:	5f 53       	inc.b	r15		
    8e72:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    8e76:	0a 3c       	jmp	$+22     	;abs 0x8e8c
    8e78:	1e 42 32 02 	mov	&0x0232,r14	
    8e7c:	5f 42 66 00 	mov.b	&0x0066,r15	
    8e80:	8e 12       	call	r14		
    8e82:	0f 93       	tst	r15		
    8e84:	03 24       	jz	$+8      	;abs 0x8e8c
    8e86:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    8e8a:	00 00 
    8e8c:	21 53       	incd	r1		
    8e8e:	34 41       	pop	r4		
    8e90:	3c 41       	pop	r12		
    8e92:	3d 41       	pop	r13		
    8e94:	3e 41       	pop	r14		
    8e96:	3f 41       	pop	r15		
    8e98:	00 13       	reti			

00008e9a <button_init>:
    8e9a:	04 12       	push	r4		
    8e9c:	04 41       	mov	r1,	r4	
    8e9e:	24 53       	incd	r4		
    8ea0:	82 43 34 02 	mov	#0,	&0x0234	;r3 As==00
    8ea4:	5f 42 26 00 	mov.b	&0x0026,r15	
    8ea8:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8eac:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    8eb0:	5f 42 22 00 	mov.b	&0x0022,r15	
    8eb4:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8eb8:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    8ebc:	5f 42 25 00 	mov.b	&0x0025,r15	
    8ec0:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8ec4:	c2 4f 25 00 	mov.b	r15,	&0x0025	
    8ec8:	5f 42 24 00 	mov.b	&0x0024,r15	
    8ecc:	6f d2       	bis.b	#4,	r15	;r2 As==10
    8ece:	c2 4f 24 00 	mov.b	r15,	&0x0024	
    8ed2:	5f 42 23 00 	mov.b	&0x0023,r15	
    8ed6:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8eda:	c2 4f 23 00 	mov.b	r15,	&0x0023	
    8ede:	5f 42 27 00 	mov.b	&0x0027,r15	
    8ee2:	6f d2       	bis.b	#4,	r15	;r2 As==10
    8ee4:	c2 4f 27 00 	mov.b	r15,	&0x0027	
    8ee8:	5f 42 21 00 	mov.b	&0x0021,r15	
    8eec:	6f d2       	bis.b	#4,	r15	;r2 As==10
    8eee:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8ef2:	34 41       	pop	r4		
    8ef4:	30 41       	ret			

00008ef6 <button_stop>:
    8ef6:	04 12       	push	r4		
    8ef8:	04 41       	mov	r1,	r4	
    8efa:	24 53       	incd	r4		
    8efc:	5f 42 26 00 	mov.b	&0x0026,r15	
    8f00:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f04:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    8f08:	5f 42 22 00 	mov.b	&0x0022,r15	
    8f0c:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f10:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    8f14:	5f 42 25 00 	mov.b	&0x0025,r15	
    8f18:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f1c:	c2 4f 25 00 	mov.b	r15,	&0x0025	
    8f20:	5f 42 23 00 	mov.b	&0x0023,r15	
    8f24:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f28:	c2 4f 23 00 	mov.b	r15,	&0x0023	
    8f2c:	5f 42 27 00 	mov.b	&0x0027,r15	
    8f30:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f34:	c2 4f 27 00 	mov.b	r15,	&0x0027	
    8f38:	34 41       	pop	r4		
    8f3a:	30 41       	ret			

00008f3c <button_is_pressed>:
    8f3c:	04 12       	push	r4		
    8f3e:	04 41       	mov	r1,	r4	
    8f40:	24 53       	incd	r4		
    8f42:	5f 42 20 00 	mov.b	&0x0020,r15	
    8f46:	4f 4f       	mov.b	r15,	r15	
    8f48:	0e 4f       	mov	r15,	r14	
    8f4a:	2e f2       	and	#4,	r14	;r2 As==10
    8f4c:	1f 43       	mov	#1,	r15	;r3 As==01
    8f4e:	0e 93       	tst	r14		
    8f50:	01 24       	jz	$+4      	;abs 0x8f54
    8f52:	0f 43       	clr	r15		
    8f54:	34 41       	pop	r4		
    8f56:	30 41       	ret			

00008f58 <button_register_cb>:
    8f58:	04 12       	push	r4		
    8f5a:	04 41       	mov	r1,	r4	
    8f5c:	24 53       	incd	r4		
    8f5e:	21 83       	decd	r1		
    8f60:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8f64:	92 44 fc ff 	mov	-4(r4),	&0x0234	;0xfffc(r4)
    8f68:	34 02 
    8f6a:	21 53       	incd	r1		
    8f6c:	34 41       	pop	r4		
    8f6e:	30 41       	ret			

00008f70 <button_enable_interrupt>:
    8f70:	04 12       	push	r4		
    8f72:	04 41       	mov	r1,	r4	
    8f74:	24 53       	incd	r4		
    8f76:	5f 42 25 00 	mov.b	&0x0025,r15	
    8f7a:	6f d2       	bis.b	#4,	r15	;r2 As==10
    8f7c:	c2 4f 25 00 	mov.b	r15,	&0x0025	
    8f80:	34 41       	pop	r4		
    8f82:	30 41       	ret			

00008f84 <button_disable_interrupt>:
    8f84:	04 12       	push	r4		
    8f86:	04 41       	mov	r1,	r4	
    8f88:	24 53       	incd	r4		
    8f8a:	5f 42 25 00 	mov.b	&0x0025,r15	
    8f8e:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    8f92:	c2 4f 25 00 	mov.b	r15,	&0x0025	
    8f96:	34 41       	pop	r4		
    8f98:	30 41       	ret			

00008f9a <port1_irq_handler>:
    8f9a:	0f 12       	push	r15		
    8f9c:	0e 12       	push	r14		
    8f9e:	0d 12       	push	r13		
    8fa0:	0c 12       	push	r12		
    8fa2:	04 12       	push	r4		
    8fa4:	04 41       	mov	r1,	r4	
    8fa6:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8faa:	5f 42 23 00 	mov.b	&0x0023,r15	
    8fae:	4f 4f       	mov.b	r15,	r15	
    8fb0:	5e 42 25 00 	mov.b	&0x0025,r14	
    8fb4:	4e 4e       	mov.b	r14,	r14	
    8fb6:	2e f2       	and	#4,	r14	;r2 As==10
    8fb8:	0f fe       	and	r14,	r15	
    8fba:	0f 93       	tst	r15		
    8fbc:	07 24       	jz	$+16     	;abs 0x8fcc
    8fbe:	1f 42 34 02 	mov	&0x0234,r15	
    8fc2:	0f 93       	tst	r15		
    8fc4:	03 24       	jz	$+8      	;abs 0x8fcc
    8fc6:	1f 42 34 02 	mov	&0x0234,r15	
    8fca:	8f 12       	call	r15		
    8fcc:	c2 43 23 00 	mov.b	#0,	&0x0023	;r3 As==00
    8fd0:	34 41       	pop	r4		
    8fd2:	3c 41       	pop	r12		
    8fd4:	3d 41       	pop	r13		
    8fd6:	3e 41       	pop	r14		
    8fd8:	3f 41       	pop	r15		
    8fda:	00 13       	reti			

00008fdc <flash_init>:
    8fdc:	04 12       	push	r4		
    8fde:	04 41       	mov	r1,	r4	
    8fe0:	24 53       	incd	r4		
    8fe2:	b0 12 5c 87 	call	#0x875c	
    8fe6:	3f 92       	cmp	#8,	r15	;r2 As==11
    8fe8:	11 24       	jz	$+36     	;abs 0x900c
    8fea:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    8fee:	03 34       	jge	$+8      	;abs 0x8ff6
    8ff0:	1f 93       	cmp	#1,	r15	;r3 As==01
    8ff2:	08 24       	jz	$+18     	;abs 0x9004
    8ff4:	17 3c       	jmp	$+48     	;abs 0x9024
    8ff6:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8ffa:	0c 24       	jz	$+26     	;abs 0x9014
    8ffc:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    9000:	0d 24       	jz	$+28     	;abs 0x901c
    9002:	10 3c       	jmp	$+34     	;abs 0x9024
    9004:	b2 40 83 a5 	mov	#-23165,&0x012a	;#0xa583
    9008:	2a 01 
    900a:	0c 3c       	jmp	$+26     	;abs 0x9024
    900c:	b2 40 96 a5 	mov	#-23146,&0x012a	;#0xa596
    9010:	2a 01 
    9012:	08 3c       	jmp	$+18     	;abs 0x9024
    9014:	b2 40 a1 a5 	mov	#-23135,&0x012a	;#0xa5a1
    9018:	2a 01 
    901a:	04 3c       	jmp	$+10     	;abs 0x9024
    901c:	b2 40 ac a5 	mov	#-23124,&0x012a	;#0xa5ac
    9020:	2a 01 
    9022:	03 43       	nop			
    9024:	34 41       	pop	r4		
    9026:	30 41       	ret			

00009028 <flash_write_byte>:
    9028:	04 12       	push	r4		
    902a:	04 41       	mov	r1,	r4	
    902c:	24 53       	incd	r4		
    902e:	21 82       	sub	#4,	r1	;r2 As==10
    9030:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    9034:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    9038:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    903c:	6f 4f       	mov.b	@r15,	r15	
    903e:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    9042:	02 20       	jnz	$+6      	;abs 0x9048
    9044:	0f 43       	clr	r15		
    9046:	1f 3c       	jmp	$+64     	;abs 0x9086
    9048:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    904c:	6f 4f       	mov.b	@r15,	r15	
    904e:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    9050:	02 24       	jz	$+6      	;abs 0x9056
    9052:	3f 43       	mov	#-1,	r15	;r3 As==11
    9054:	18 3c       	jmp	$+50     	;abs 0x9086
    9056:	b0 12 dc 8f 	call	#0x8fdc	
    905a:	b0 12 50 91 	call	#0x9150	
    905e:	b2 40 00 a5 	mov	#-23296,&0x012c	;#0xa500
    9062:	2c 01 
    9064:	b2 40 40 a5 	mov	#-23232,&0x0128	;#0xa540
    9068:	28 01 
    906a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    906e:	df 44 fc ff 	mov.b	-4(r4),	0(r15)	;0xfffc(r4), 0x0000(r15)
    9072:	00 00 
    9074:	b2 40 00 a5 	mov	#-23296,&0x0128	;#0xa500
    9078:	28 01 
    907a:	b2 40 10 a5 	mov	#-23280,&0x012c	;#0xa510
    907e:	2c 01 
    9080:	b0 12 6c 91 	call	#0x916c	
    9084:	0f 43       	clr	r15		
    9086:	21 52       	add	#4,	r1	;r2 As==10
    9088:	34 41       	pop	r4		
    908a:	30 41       	ret			

0000908c <flash_write_word>:
    908c:	04 12       	push	r4		
    908e:	04 41       	mov	r1,	r4	
    9090:	24 53       	incd	r4		
    9092:	21 82       	sub	#4,	r1	;r2 As==10
    9094:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    9098:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    909c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    90a0:	2f 4f       	mov	@r15,	r15	
    90a2:	1f 94 fc ff 	cmp	-4(r4),	r15	;0xfffc(r4)
    90a6:	02 20       	jnz	$+6      	;abs 0x90ac
    90a8:	0f 43       	clr	r15		
    90aa:	1f 3c       	jmp	$+64     	;abs 0x90ea
    90ac:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    90b0:	2f 4f       	mov	@r15,	r15	
    90b2:	3f 93       	cmp	#-1,	r15	;r3 As==11
    90b4:	02 24       	jz	$+6      	;abs 0x90ba
    90b6:	3f 43       	mov	#-1,	r15	;r3 As==11
    90b8:	18 3c       	jmp	$+50     	;abs 0x90ea
    90ba:	b0 12 dc 8f 	call	#0x8fdc	
    90be:	b0 12 50 91 	call	#0x9150	
    90c2:	b2 40 00 a5 	mov	#-23296,&0x012c	;#0xa500
    90c6:	2c 01 
    90c8:	b2 40 40 a5 	mov	#-23232,&0x0128	;#0xa540
    90cc:	28 01 
    90ce:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    90d2:	9f 44 fc ff 	mov	-4(r4),	0(r15)	;0xfffc(r4), 0x0000(r15)
    90d6:	00 00 
    90d8:	b2 40 00 a5 	mov	#-23296,&0x0128	;#0xa500
    90dc:	28 01 
    90de:	b2 40 10 a5 	mov	#-23280,&0x012c	;#0xa510
    90e2:	2c 01 
    90e4:	b0 12 6c 91 	call	#0x916c	
    90e8:	0f 43       	clr	r15		
    90ea:	21 52       	add	#4,	r1	;r2 As==10
    90ec:	34 41       	pop	r4		
    90ee:	30 41       	ret			

000090f0 <flash_erase_segment>:
    90f0:	04 12       	push	r4		
    90f2:	04 41       	mov	r1,	r4	
    90f4:	24 53       	incd	r4		
    90f6:	21 83       	decd	r1		
    90f8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    90fc:	b0 12 dc 8f 	call	#0x8fdc	
    9100:	b0 12 50 91 	call	#0x9150	
    9104:	b2 40 00 a5 	mov	#-23296,&0x012c	;#0xa500
    9108:	2c 01 
    910a:	b2 40 02 a5 	mov	#-23294,&0x0128	;#0xa502
    910e:	28 01 
    9110:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9114:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    9118:	b2 40 00 a5 	mov	#-23296,&0x0128	;#0xa500
    911c:	28 01 
    911e:	b2 40 10 a5 	mov	#-23280,&0x012c	;#0xa510
    9122:	2c 01 
    9124:	b0 12 6c 91 	call	#0x916c	
    9128:	21 53       	incd	r1		
    912a:	34 41       	pop	r4		
    912c:	30 41       	ret			

0000912e <flash_erase_info_memory>:
    912e:	04 12       	push	r4		
    9130:	04 41       	mov	r1,	r4	
    9132:	24 53       	incd	r4		
    9134:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    9138:	b0 12 f0 90 	call	#0x90f0	
    913c:	3f 40 40 10 	mov	#4160,	r15	;#0x1040
    9140:	b0 12 f0 90 	call	#0x90f0	
    9144:	3f 40 80 10 	mov	#4224,	r15	;#0x1080
    9148:	b0 12 f0 90 	call	#0x90f0	
    914c:	34 41       	pop	r4		
    914e:	30 41       	ret			

00009150 <watchdog_stop>:
    9150:	04 12       	push	r4		
    9152:	04 41       	mov	r1,	r4	
    9154:	24 53       	incd	r4		
    9156:	1f 42 20 01 	mov	&0x0120,r15	
    915a:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    915e:	82 4f 36 02 	mov	r15,	&0x0236	
    9162:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    9166:	20 01 
    9168:	34 41       	pop	r4		
    916a:	30 41       	ret			

0000916c <watchdog_restore>:
    916c:	04 12       	push	r4		
    916e:	04 41       	mov	r1,	r4	
    9170:	24 53       	incd	r4		
    9172:	1f 42 36 02 	mov	&0x0236,r15	
    9176:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    917a:	82 4f 20 01 	mov	r15,	&0x0120	
    917e:	34 41       	pop	r4		
    9180:	30 41       	ret			

00009182 <__mulsi3>:
    9182:	0b 12       	push	r11		
    9184:	0a 12       	push	r10		
    9186:	0b 43       	clr	r11		
    9188:	0a 43       	clr	r10		
    918a:	08 3c       	jmp	$+18     	;abs 0x919c
    918c:	12 c3       	clrc			
    918e:	0d 10       	rrc	r13		
    9190:	0c 10       	rrc	r12		
    9192:	02 28       	jnc	$+6      	;abs 0x9198
    9194:	0a 5e       	add	r14,	r10	
    9196:	0b 6f       	addc	r15,	r11	
    9198:	0e 5e       	rla	r14		
    919a:	0f 6f       	rlc	r15		
    919c:	0c 93       	tst	r12		
    919e:	f6 23       	jnz	$-18     	;abs 0x918c
    91a0:	0d 93       	tst	r13		
    91a2:	f4 23       	jnz	$-22     	;abs 0x918c
    91a4:	0e 4a       	mov	r10,	r14	
    91a6:	0f 4b       	mov	r11,	r15	
    91a8:	3a 41       	pop	r10		
    91aa:	3b 41       	pop	r11		
    91ac:	30 41       	ret			

000091ae <printf>:
    91ae:	0d 41       	mov	r1,	r13	
    91b0:	2d 53       	incd	r13		
    91b2:	3e 4d       	mov	@r13+,	r14	
    91b4:	3f 40 a4 8d 	mov	#-29276,r15	;#0x8da4
    91b8:	b0 12 64 93 	call	#0x9364	
    91bc:	30 41       	ret			

000091be <vprintf>:
    91be:	0d 4e       	mov	r14,	r13	
    91c0:	0e 4f       	mov	r15,	r14	
    91c2:	3f 40 a4 8d 	mov	#-29276,r15	;#0x8da4
    91c6:	b0 12 64 93 	call	#0x9364	
    91ca:	30 41       	ret			

000091cc <print_field>:
    91cc:	0b 12       	push	r11		
    91ce:	0a 12       	push	r10		
    91d0:	09 12       	push	r9		
    91d2:	08 12       	push	r8		
    91d4:	07 12       	push	r7		
    91d6:	06 12       	push	r6		
    91d8:	05 12       	push	r5		
    91da:	04 12       	push	r4		
    91dc:	31 82       	sub	#8,	r1	;r2 As==11
    91de:	08 4f       	mov	r15,	r8	
    91e0:	81 4e 04 00 	mov	r14,	4(r1)	;0x0004(r1)
    91e4:	09 4d       	mov	r13,	r9	
    91e6:	1f 41 1a 00 	mov	26(r1),	r15	;0x001a(r1)
    91ea:	1d 41 1c 00 	mov	28(r1),	r13	;0x001c(r1)
    91ee:	4c 4d       	mov.b	r13,	r12	
    91f0:	04 4d       	mov	r13,	r4	
    91f2:	84 10       	swpb	r4		
    91f4:	45 44       	mov.b	r4,	r5	
    91f6:	4e 4f       	mov.b	r15,	r14	
    91f8:	7e b0 40 00 	bit.b	#64,	r14	;#0x0040
    91fc:	11 24       	jz	$+36     	;abs 0x9220
    91fe:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9202:	00 00 
    9204:	0e 4f       	mov	r15,	r14	
    9206:	8e 10       	swpb	r14		
    9208:	5e f3       	and.b	#1,	r14	;r3 As==01
    920a:	03 24       	jz	$+8      	;abs 0x9212
    920c:	7e 40 58 00 	mov.b	#88,	r14	;#0x0058
    9210:	02 3c       	jmp	$+6      	;abs 0x9216
    9212:	7e 40 78 00 	mov.b	#120,	r14	;#0x0078
    9216:	c1 4e 01 00 	mov.b	r14,	1(r1)	;0x0001(r1)
    921a:	0c 41       	mov	r1,	r12	
    921c:	2c 53       	incd	r12		
    921e:	0f 3c       	jmp	$+32     	;abs 0x923e
    9220:	7e f0 20 00 	and.b	#32,	r14	;#0x0020
    9224:	04 24       	jz	$+10     	;abs 0x922e
    9226:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    922a:	00 00 
    922c:	04 3c       	jmp	$+10     	;abs 0x9236
    922e:	4c 93       	tst.b	r12		
    9230:	05 24       	jz	$+12     	;abs 0x923c
    9232:	c1 4d 00 00 	mov.b	r13,	0(r1)	;0x0000(r1)
    9236:	0c 41       	mov	r1,	r12	
    9238:	1c 53       	inc	r12		
    923a:	01 3c       	jmp	$+4      	;abs 0x923e
    923c:	0c 41       	mov	r1,	r12	
    923e:	0a 4c       	mov	r12,	r10	
    9240:	8c 10       	swpb	r12		
    9242:	8c 11       	sxt	r12		
    9244:	8c 10       	swpb	r12		
    9246:	8c 11       	sxt	r12		
    9248:	0b 4c       	mov	r12,	r11	
    924a:	06 41       	mov	r1,	r6	
    924c:	0c 41       	mov	r1,	r12	
    924e:	8c 10       	swpb	r12		
    9250:	8c 11       	sxt	r12		
    9252:	8c 10       	swpb	r12		
    9254:	8c 11       	sxt	r12		
    9256:	07 4c       	mov	r12,	r7	
    9258:	0a 86       	sub	r6,	r10	
    925a:	0b 77       	subc	r7,	r11	
    925c:	0e 4f       	mov	r15,	r14	
    925e:	8e 10       	swpb	r14		
    9260:	c1 4e 02 00 	mov.b	r14,	2(r1)	;0x0002(r1)
    9264:	6e f2       	and.b	#4,	r14	;r2 As==10
    9266:	02 24       	jz	$+6      	;abs 0x926c
    9268:	07 45       	mov	r5,	r7	
    926a:	01 3c       	jmp	$+4      	;abs 0x926e
    926c:	37 43       	mov	#-1,	r7	;r3 As==11
    926e:	4f 4f       	mov.b	r15,	r15	
    9270:	7f b0 10 00 	bit.b	#16,	r15	;#0x0010
    9274:	3c 20       	jnz	$+122    	;abs 0x92ee
    9276:	1d 41 04 00 	mov	4(r1),	r13	;0x0004(r1)
    927a:	3d 53       	add	#-1,	r13	;r3 As==11
    927c:	1d 53       	inc	r13		
    927e:	cd 93 00 00 	tst.b	0(r13)		;0x0000(r13)
    9282:	fc 23       	jnz	$-6      	;abs 0x927c
    9284:	1d 81 04 00 	sub	4(r1),	r13	;0x0004(r1)
    9288:	09 9a       	cmp	r10,	r9	
    928a:	02 28       	jnc	$+6      	;abs 0x9290
    928c:	09 8a       	sub	r10,	r9	
    928e:	01 3c       	jmp	$+4      	;abs 0x9292
    9290:	09 43       	clr	r9		
    9292:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    9296:	05 24       	jz	$+12     	;abs 0x92a2
    9298:	09 95       	cmp	r5,	r9	
    929a:	02 28       	jnc	$+6      	;abs 0x92a0
    929c:	09 85       	sub	r5,	r9	
    929e:	01 3c       	jmp	$+4      	;abs 0x92a2
    92a0:	09 43       	clr	r9		
    92a2:	05 4d       	mov	r13,	r5	
    92a4:	07 9d       	cmp	r13,	r7	
    92a6:	01 2c       	jc	$+4      	;abs 0x92aa
    92a8:	05 47       	mov	r7,	r5	
    92aa:	4f 93       	tst.b	r15		
    92ac:	0d 38       	jl	$+28     	;abs 0x92c8
    92ae:	f1 40 20 00 	mov.b	#32,	6(r1)	;#0x0020, 0x0006(r1)
    92b2:	06 00 
    92b4:	06 43       	clr	r6		
    92b6:	0b 43       	clr	r11		
    92b8:	0e 3c       	jmp	$+30     	;abs 0x92d6
    92ba:	0f 41       	mov	r1,	r15	
    92bc:	0f 56       	add	r6,	r15	
    92be:	6f 4f       	mov.b	@r15,	r15	
    92c0:	8f 11       	sxt	r15		
    92c2:	16 53       	inc	r6		
    92c4:	88 12       	call	r8		
    92c6:	01 3c       	jmp	$+4      	;abs 0x92ca
    92c8:	06 43       	clr	r6		
    92ca:	06 9a       	cmp	r10,	r6	
    92cc:	f6 3b       	jl	$-18     	;abs 0x92ba
    92ce:	0b 4a       	mov	r10,	r11	
    92d0:	f1 40 30 00 	mov.b	#48,	6(r1)	;#0x0030, 0x0006(r1)
    92d4:	06 00 
    92d6:	05 8b       	sub	r11,	r5	
    92d8:	05 3c       	jmp	$+12     	;abs 0x92e4
    92da:	5f 41 06 00 	mov.b	6(r1),	r15	;0x0006(r1)
    92de:	8f 11       	sxt	r15		
    92e0:	88 12       	call	r8		
    92e2:	1b 53       	inc	r11		
    92e4:	0f 45       	mov	r5,	r15	
    92e6:	0f 5b       	add	r11,	r15	
    92e8:	0f 99       	cmp	r9,	r15	
    92ea:	f7 2b       	jnc	$-16     	;abs 0x92da
    92ec:	0a 3c       	jmp	$+22     	;abs 0x9302
    92ee:	06 43       	clr	r6		
    92f0:	0b 43       	clr	r11		
    92f2:	07 3c       	jmp	$+16     	;abs 0x9302
    92f4:	1b 53       	inc	r11		
    92f6:	0f 41       	mov	r1,	r15	
    92f8:	0f 56       	add	r6,	r15	
    92fa:	6f 4f       	mov.b	@r15,	r15	
    92fc:	8f 11       	sxt	r15		
    92fe:	16 53       	inc	r6		
    9300:	88 12       	call	r8		
    9302:	06 9a       	cmp	r10,	r6	
    9304:	f7 3b       	jl	$-16     	;abs 0x92f4
    9306:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    930a:	02 24       	jz	$+6      	;abs 0x9310
    930c:	4a 44       	mov.b	r4,	r10	
    930e:	08 3c       	jmp	$+18     	;abs 0x9320
    9310:	1a 41 04 00 	mov	4(r1),	r10	;0x0004(r1)
    9314:	0a 8b       	sub	r11,	r10	
    9316:	0d 3c       	jmp	$+28     	;abs 0x9332
    9318:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    931c:	88 12       	call	r8		
    931e:	7a 53       	add.b	#-1,	r10	;r3 As==11
    9320:	4a 93       	tst.b	r10		
    9322:	fa 23       	jnz	$-10     	;abs 0x9318
    9324:	44 44       	mov.b	r4,	r4	
    9326:	0b 54       	add	r4,	r11	
    9328:	f3 3f       	jmp	$-24     	;abs 0x9310
    932a:	37 53       	add	#-1,	r7	;r3 As==11
    932c:	8f 11       	sxt	r15		
    932e:	88 12       	call	r8		
    9330:	1b 53       	inc	r11		
    9332:	0f 4a       	mov	r10,	r15	
    9334:	0f 5b       	add	r11,	r15	
    9336:	6f 4f       	mov.b	@r15,	r15	
    9338:	4f 93       	tst.b	r15		
    933a:	07 24       	jz	$+16     	;abs 0x934a
    933c:	07 93       	tst	r7		
    933e:	f5 23       	jnz	$-20     	;abs 0x932a
    9340:	04 3c       	jmp	$+10     	;abs 0x934a
    9342:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9346:	88 12       	call	r8		
    9348:	1b 53       	inc	r11		
    934a:	0b 99       	cmp	r9,	r11	
    934c:	fa 2b       	jnc	$-10     	;abs 0x9342
    934e:	0f 4b       	mov	r11,	r15	
    9350:	31 52       	add	#8,	r1	;r2 As==11
    9352:	34 41       	pop	r4		
    9354:	35 41       	pop	r5		
    9356:	36 41       	pop	r6		
    9358:	37 41       	pop	r7		
    935a:	38 41       	pop	r8		
    935c:	39 41       	pop	r9		
    935e:	3a 41       	pop	r10		
    9360:	3b 41       	pop	r11		
    9362:	30 41       	ret			

00009364 <vuprintf>:
    9364:	0b 12       	push	r11		
    9366:	0a 12       	push	r10		
    9368:	09 12       	push	r9		
    936a:	08 12       	push	r8		
    936c:	07 12       	push	r7		
    936e:	06 12       	push	r6		
    9370:	05 12       	push	r5		
    9372:	04 12       	push	r4		
    9374:	31 50 b6 ff 	add	#-74,	r1	;#0xffb6
    9378:	81 4f 3a 00 	mov	r15,	58(r1)	;0x003a(r1)
    937c:	06 4e       	mov	r14,	r6	
    937e:	05 4d       	mov	r13,	r5	
    9380:	81 4e 3e 00 	mov	r14,	62(r1)	;0x003e(r1)
    9384:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    9388:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    938c:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    9390:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9394:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    9398:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    939c:	07 43       	clr	r7		
    939e:	81 43 2c 00 	mov	#0,	44(r1)	;r3 As==00, 0x002c(r1)
    93a2:	0e 41       	mov	r1,	r14	
    93a4:	3e 50 1c 00 	add	#28,	r14	;#0x001c
    93a8:	81 4e 1c 00 	mov	r14,	28(r1)	;0x001c(r1)
    93ac:	30 40 de 99 	br	#0x99de	
    93b0:	0f 46       	mov	r6,	r15	
    93b2:	1f 53       	inc	r15		
    93b4:	81 4f 40 00 	mov	r15,	64(r1)	;0x0040(r1)
    93b8:	07 93       	tst	r7		
    93ba:	1e 20       	jnz	$+62     	;abs 0x93f8
    93bc:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    93c0:	13 20       	jnz	$+40     	;abs 0x93e8
    93c2:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00, 0x0000(r1)
    93c6:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    93ca:	81 46 3e 00 	mov	r6,	62(r1)	;0x003e(r1)
    93ce:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    93d2:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    93d6:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    93da:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    93de:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    93e2:	30 40 d4 99 	br	#0x99d4	
    93e6:	05 47       	mov	r7,	r5	
    93e8:	8e 11       	sxt	r14		
    93ea:	0f 4e       	mov	r14,	r15	
    93ec:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    93f0:	91 53 2c 00 	inc	44(r1)		;0x002c(r1)
    93f4:	30 40 ba 99 	br	#0x99ba	
    93f8:	7e 90 63 00 	cmp.b	#99,	r14	;#0x0063
    93fc:	c5 24       	jz	$+396    	;abs 0x9588
    93fe:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9402:	27 34       	jge	$+80     	;abs 0x9452
    9404:	7e 90 30 00 	cmp.b	#48,	r14	;#0x0030
    9408:	94 24       	jz	$+298    	;abs 0x9532
    940a:	7e 90 31 00 	cmp.b	#49,	r14	;#0x0031
    940e:	1a 34       	jge	$+54     	;abs 0x9444
    9410:	7e 90 2a 00 	cmp.b	#42,	r14	;#0x002a
    9414:	77 24       	jz	$+240    	;abs 0x9504
    9416:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    941a:	0a 34       	jge	$+22     	;abs 0x9430
    941c:	7e 90 23 00 	cmp.b	#35,	r14	;#0x0023
    9420:	42 24       	jz	$+134    	;abs 0x94a6
    9422:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    9426:	e0 27       	jz	$-62     	;abs 0x93e8
    9428:	7e 90 20 00 	cmp.b	#32,	r14	;#0x0020
    942c:	32 20       	jnz	$+102    	;abs 0x9492
    942e:	56 3c       	jmp	$+174    	;abs 0x94dc
    9430:	7e 90 2d 00 	cmp.b	#45,	r14	;#0x002d
    9434:	49 24       	jz	$+148    	;abs 0x94c8
    9436:	7e 90 2e 00 	cmp.b	#46,	r14	;#0x002e
    943a:	5b 24       	jz	$+184    	;abs 0x94f2
    943c:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9440:	28 20       	jnz	$+82     	;abs 0x9492
    9442:	47 3c       	jmp	$+144    	;abs 0x94d2
    9444:	7e 90 3a 00 	cmp.b	#58,	r14	;#0x003a
    9448:	8c 38       	jl	$+282    	;abs 0x9562
    944a:	7e 90 58 00 	cmp.b	#88,	r14	;#0x0058
    944e:	21 20       	jnz	$+68     	;abs 0x9492
    9450:	e9 3c       	jmp	$+468    	;abs 0x9624
    9452:	7e 90 6f 00 	cmp.b	#111,	r14	;#0x006f
    9456:	24 24       	jz	$+74     	;abs 0x94a0
    9458:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    945c:	0a 34       	jge	$+22     	;abs 0x9472
    945e:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    9462:	e3 24       	jz	$+456    	;abs 0x962a
    9464:	7e 90 6c 00 	cmp.b	#108,	r14	;#0x006c
    9468:	22 24       	jz	$+70     	;abs 0x94ae
    946a:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    946e:	11 20       	jnz	$+36     	;abs 0x9492
    9470:	dc 3c       	jmp	$+442    	;abs 0x962a
    9472:	7e 90 73 00 	cmp.b	#115,	r14	;#0x0073
    9476:	98 24       	jz	$+306    	;abs 0x95a8
    9478:	7e 90 74 00 	cmp.b	#116,	r14	;#0x0074
    947c:	04 34       	jge	$+10     	;abs 0x9486
    947e:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9482:	07 20       	jnz	$+16     	;abs 0x9492
    9484:	b8 3c       	jmp	$+370    	;abs 0x95f6
    9486:	7e 90 75 00 	cmp.b	#117,	r14	;#0x0075
    948a:	d1 24       	jz	$+420    	;abs 0x962e
    948c:	7e 90 78 00 	cmp.b	#120,	r14	;#0x0078
    9490:	d2 24       	jz	$+422    	;abs 0x9636
    9492:	19 41 3e 00 	mov	62(r1),	r9	;0x003e(r1)
    9496:	18 41 2c 00 	mov	44(r1),	r8	;0x002c(r1)
    949a:	08 89       	sub	r9,	r8	
    949c:	30 40 a8 99 	br	#0x99a8	
    94a0:	b1 42 28 00 	mov	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    94a4:	cb 3c       	jmp	$+408    	;abs 0x963c
    94a6:	f1 d2 00 00 	bis.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    94aa:	30 40 d8 99 	br	#0x99d8	
    94ae:	69 41       	mov.b	@r1,	r9	
    94b0:	59 f3       	and.b	#1,	r9	;r3 As==01
    94b2:	6e 41       	mov.b	@r1,	r14	
    94b4:	04 24       	jz	$+10     	;abs 0x94be
    94b6:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    94ba:	6e d3       	bis.b	#2,	r14	;r3 As==10
    94bc:	01 3c       	jmp	$+4      	;abs 0x94c0
    94be:	5e d3       	bis.b	#1,	r14	;r3 As==01
    94c0:	c1 4e 00 00 	mov.b	r14,	0(r1)	;0x0000(r1)
    94c4:	30 40 d8 99 	br	#0x99d8	
    94c8:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    94cc:	00 00 
    94ce:	30 40 d8 99 	br	#0x99d8	
    94d2:	f1 40 2b 00 	mov.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    94d6:	02 00 
    94d8:	30 40 d8 99 	br	#0x99d8	
    94dc:	f1 90 2b 00 	cmp.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    94e0:	02 00 
    94e2:	02 20       	jnz	$+6      	;abs 0x94e8
    94e4:	30 40 d8 99 	br	#0x99d8	
    94e8:	f1 40 20 00 	mov.b	#32,	2(r1)	;#0x0020, 0x0002(r1)
    94ec:	02 00 
    94ee:	30 40 d8 99 	br	#0x99d8	
    94f2:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    94f6:	02 24       	jz	$+6      	;abs 0x94fc
    94f8:	30 40 be 99 	br	#0x99be	
    94fc:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9500:	30 40 d8 99 	br	#0x99d8	
    9504:	0e 45       	mov	r5,	r14	
    9506:	2e 53       	incd	r14		
    9508:	2a 45       	mov	@r5,	r10	
    950a:	0a 93       	tst	r10		
    950c:	03 38       	jl	$+8      	;abs 0x9514
    950e:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9512:	0d 3c       	jmp	$+28     	;abs 0x952e
    9514:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9518:	02 24       	jz	$+6      	;abs 0x951e
    951a:	30 40 ce 99 	br	#0x99ce	
    951e:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9522:	00 00 
    9524:	3a e3       	inv	r10		
    9526:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    952a:	91 53 26 00 	inc	38(r1)		;0x0026(r1)
    952e:	05 4e       	mov	r14,	r5	
    9530:	27 3c       	jmp	$+80     	;abs 0x9580
    9532:	81 93 26 00 	tst	38(r1)		;0x0026(r1)
    9536:	15 20       	jnz	$+44     	;abs 0x9562
    9538:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    953c:	12 20       	jnz	$+38     	;abs 0x9562
    953e:	69 41       	mov.b	@r1,	r9	
    9540:	79 f0 10 00 	and.b	#16,	r9	;#0x0010
    9544:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9546:	01 24       	jz	$+4      	;abs 0x954a
    9548:	4e 43       	clr.b	r14		
    954a:	4e 4e       	mov.b	r14,	r14	
    954c:	0e 11       	rra	r14		
    954e:	0e 43       	clr	r14		
    9550:	4e 10       	rrc.b	r14		
    9552:	6a 41       	mov.b	@r1,	r10	
    9554:	7a f0 7f 00 	and.b	#127,	r10	;#0x007f
    9558:	4a de       	bis.b	r14,	r10	
    955a:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    955e:	30 40 d8 99 	br	#0x99d8	
    9562:	1a 41 26 00 	mov	38(r1),	r10	;0x0026(r1)
    9566:	0a 5a       	rla	r10		
    9568:	0c 4a       	mov	r10,	r12	
    956a:	0c 5c       	rla	r12		
    956c:	0c 5c       	rla	r12		
    956e:	0a 5c       	add	r12,	r10	
    9570:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9574:	b1 50 d0 ff 	add	#-48,	38(r1)	;#0xffd0, 0x0026(r1)
    9578:	26 00 
    957a:	8e 11       	sxt	r14		
    957c:	81 5e 26 00 	add	r14,	38(r1)	;0x0026(r1)
    9580:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9584:	30 40 d8 99 	br	#0x99d8	
    9588:	07 45       	mov	r5,	r7	
    958a:	27 53       	incd	r7		
    958c:	6e 45       	mov.b	@r5,	r14	
    958e:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9592:	03 20       	jnz	$+8      	;abs 0x959a
    9594:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9598:	26 27       	jz	$-434    	;abs 0x93e6
    959a:	c1 4e 04 00 	mov.b	r14,	4(r1)	;0x0004(r1)
    959e:	c1 43 05 00 	mov.b	#0,	5(r1)	;r3 As==00, 0x0005(r1)
    95a2:	0e 41       	mov	r1,	r14	
    95a4:	2e 52       	add	#4,	r14	;r2 As==10
    95a6:	03 3c       	jmp	$+8      	;abs 0x95ae
    95a8:	07 45       	mov	r5,	r7	
    95aa:	27 53       	incd	r7		
    95ac:	2e 45       	mov	@r5,	r14	
    95ae:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    95b2:	07 24       	jz	$+16     	;abs 0x95c2
    95b4:	e1 d2 01 00 	bis.b	#4,	1(r1)	;r2 As==10, 0x0001(r1)
    95b8:	1f 41 26 00 	mov	38(r1),	r15	;0x0026(r1)
    95bc:	c1 4f 03 00 	mov.b	r15,	3(r1)	;0x0003(r1)
    95c0:	06 3c       	jmp	$+14     	;abs 0x95ce
    95c2:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    95c6:	03 24       	jz	$+8      	;abs 0x95ce
    95c8:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    95cc:	30 00 
    95ce:	0e 93       	tst	r14		
    95d0:	02 20       	jnz	$+6      	;abs 0x95d6
    95d2:	3e 40 08 9c 	mov	#-25592,r14	;#0x9c08
    95d6:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    95da:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    95de:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    95e2:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    95e6:	b0 12 cc 91 	call	#0x91cc	
    95ea:	21 52       	add	#4,	r1	;r2 As==10
    95ec:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    95f0:	05 47       	mov	r7,	r5	
    95f2:	30 40 ba 99 	br	#0x99ba	
    95f6:	07 45       	mov	r5,	r7	
    95f8:	27 53       	incd	r7		
    95fa:	29 45       	mov	@r5,	r9	
    95fc:	81 49 1e 00 	mov	r9,	30(r1)	;0x001e(r1)
    9600:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9602:	09 93       	tst	r9		
    9604:	01 20       	jnz	$+4      	;abs 0x9608
    9606:	4e 43       	clr.b	r14		
    9608:	4e 5e       	rla.b	r14		
    960a:	4e 5e       	rla.b	r14		
    960c:	4e 5e       	rla.b	r14		
    960e:	6a 41       	mov.b	@r1,	r10	
    9610:	7a f0 f7 ff 	and.b	#-9,	r10	;#0xfff7
    9614:	4a de       	bis.b	r14,	r10	
    9616:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    961a:	05 47       	mov	r7,	r5	
    961c:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9620:	28 00 
    9622:	53 3c       	jmp	$+168    	;abs 0x96ca
    9624:	d1 d3 01 00 	bis.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9628:	06 3c       	jmp	$+14     	;abs 0x9636
    962a:	e1 d2 00 00 	bis.b	#4,	0(r1)	;r2 As==10, 0x0000(r1)
    962e:	b1 40 0a 00 	mov	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9632:	28 00 
    9634:	03 3c       	jmp	$+8      	;abs 0x963c
    9636:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    963a:	28 00 
    963c:	6b 41       	mov.b	@r1,	r11	
    963e:	6b b3       	bit.b	#2,	r11	;r3 As==10
    9640:	24 24       	jz	$+74     	;abs 0x968a
    9642:	0c 45       	mov	r5,	r12	
    9644:	3c 52       	add	#8,	r12	;r2 As==11
    9646:	28 45       	mov	@r5,	r8	
    9648:	17 45 02 00 	mov	2(r5),	r7	;0x0002(r5)
    964c:	16 45 04 00 	mov	4(r5),	r6	;0x0004(r5)
    9650:	1b 45 06 00 	mov	6(r5),	r11	;0x0006(r5)
    9654:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    9658:	81 47 20 00 	mov	r7,	32(r1)	;0x0020(r1)
    965c:	81 46 22 00 	mov	r6,	34(r1)	;0x0022(r1)
    9660:	81 4b 24 00 	mov	r11,	36(r1)	;0x0024(r1)
    9664:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9668:	08 93       	tst	r8		
    966a:	06 20       	jnz	$+14     	;abs 0x9678
    966c:	07 93       	tst	r7		
    966e:	04 20       	jnz	$+10     	;abs 0x9678
    9670:	06 93       	tst	r6		
    9672:	02 20       	jnz	$+6      	;abs 0x9678
    9674:	0b 93       	tst	r11		
    9676:	02 24       	jz	$+6      	;abs 0x967c
    9678:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    967c:	0b 5b       	rla	r11		
    967e:	0b 43       	clr	r11		
    9680:	0b 6b       	rlc	r11		
    9682:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    9686:	05 4c       	mov	r12,	r5	
    9688:	20 3c       	jmp	$+66     	;abs 0x96ca
    968a:	5b f3       	and.b	#1,	r11	;r3 As==01
    968c:	07 45       	mov	r5,	r7	
    968e:	0d 24       	jz	$+28     	;abs 0x96aa
    9690:	27 52       	add	#4,	r7	;r2 As==10
    9692:	28 45       	mov	@r5,	r8	
    9694:	1b 45 02 00 	mov	2(r5),	r11	;0x0002(r5)
    9698:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    969c:	81 4b 20 00 	mov	r11,	32(r1)	;0x0020(r1)
    96a0:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    96a4:	08 93       	tst	r8		
    96a6:	09 20       	jnz	$+20     	;abs 0x96ba
    96a8:	06 3c       	jmp	$+14     	;abs 0x96b6
    96aa:	27 53       	incd	r7		
    96ac:	2b 45       	mov	@r5,	r11	
    96ae:	81 4b 1e 00 	mov	r11,	30(r1)	;0x001e(r1)
    96b2:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    96b6:	0b 93       	tst	r11		
    96b8:	02 24       	jz	$+6      	;abs 0x96be
    96ba:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    96be:	0b 5b       	rla	r11		
    96c0:	0b 43       	clr	r11		
    96c2:	0b 6b       	rlc	r11		
    96c4:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    96c8:	05 47       	mov	r7,	r5	
    96ca:	f1 b2 00 00 	bit.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    96ce:	12 24       	jz	$+38     	;abs 0x96f4
    96d0:	c1 93 2b 00 	tst.b	43(r1)		;0x002b(r1)
    96d4:	0f 20       	jnz	$+32     	;abs 0x96f4
    96d6:	68 41       	mov.b	@r1,	r8	
    96d8:	b1 90 10 00 	cmp	#16,	40(r1)	;#0x0010, 0x0028(r1)
    96dc:	28 00 
    96de:	03 20       	jnz	$+8      	;abs 0x96e6
    96e0:	78 d0 40 00 	bis.b	#64,	r8	;#0x0040
    96e4:	05 3c       	jmp	$+12     	;abs 0x96f0
    96e6:	b1 92 28 00 	cmp	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    96ea:	04 20       	jnz	$+10     	;abs 0x96f4
    96ec:	78 d0 20 00 	bis.b	#32,	r8	;#0x0020
    96f0:	c1 48 00 00 	mov.b	r8,	0(r1)	;0x0000(r1)
    96f4:	68 41       	mov.b	@r1,	r8	
    96f6:	68 b2       	bit.b	#4,	r8	;r2 As==10
    96f8:	30 24       	jz	$+98     	;abs 0x975a
    96fa:	c1 93 2f 00 	tst.b	47(r1)		;0x002f(r1)
    96fe:	2d 24       	jz	$+92     	;abs 0x975a
    9700:	f1 40 2d 00 	mov.b	#45,	2(r1)	;#0x002d, 0x0002(r1)
    9704:	02 00 
    9706:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9708:	11 24       	jz	$+36     	;abs 0x972c
    970a:	b1 e3 1e 00 	xor	#-1,	30(r1)	;r3 As==11, 0x001e(r1)
    970e:	b1 e3 20 00 	xor	#-1,	32(r1)	;r3 As==11, 0x0020(r1)
    9712:	b1 e3 22 00 	xor	#-1,	34(r1)	;r3 As==11, 0x0022(r1)
    9716:	b1 e3 24 00 	xor	#-1,	36(r1)	;r3 As==11, 0x0024(r1)
    971a:	91 53 1e 00 	inc	30(r1)		;0x001e(r1)
    971e:	81 63 20 00 	adc	32(r1)		;0x0020(r1)
    9722:	81 63 22 00 	adc	34(r1)		;0x0022(r1)
    9726:	81 63 24 00 	adc	36(r1)		;0x0024(r1)
    972a:	17 3c       	jmp	$+48     	;abs 0x975a
    972c:	58 b3       	bit.b	#1,	r8	;r3 As==01
    972e:	0f 24       	jz	$+32     	;abs 0x974e
    9730:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9734:	1b 41 20 00 	mov	32(r1),	r11	;0x0020(r1)
    9738:	3a e3       	inv	r10		
    973a:	3b e3       	inv	r11		
    973c:	0e 4a       	mov	r10,	r14	
    973e:	0f 4b       	mov	r11,	r15	
    9740:	1e 53       	inc	r14		
    9742:	0f 63       	adc	r15		
    9744:	81 4e 1e 00 	mov	r14,	30(r1)	;0x001e(r1)
    9748:	81 4f 20 00 	mov	r15,	32(r1)	;0x0020(r1)
    974c:	06 3c       	jmp	$+14     	;abs 0x975a
    974e:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9752:	3a e3       	inv	r10		
    9754:	1a 53       	inc	r10		
    9756:	81 4a 1e 00 	mov	r10,	30(r1)	;0x001e(r1)
    975a:	c1 43 1b 00 	mov.b	#0,	27(r1)	;r3 As==00, 0x001b(r1)
    975e:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9760:	6a 24       	jz	$+214    	;abs 0x9836
    9762:	16 41 1e 00 	mov	30(r1),	r6	;0x001e(r1)
    9766:	91 41 20 00 	mov	32(r1),	60(r1)	;0x0020(r1), 0x003c(r1)
    976a:	3c 00 
    976c:	18 41 22 00 	mov	34(r1),	r8	;0x0022(r1)
    9770:	14 41 24 00 	mov	36(r1),	r4	;0x0024(r1)
    9774:	07 41       	mov	r1,	r7	
    9776:	37 50 1a 00 	add	#26,	r7	;#0x001a
    977a:	09 46       	mov	r6,	r9	
    977c:	91 41 28 00 	mov	40(r1),	50(r1)	;0x0028(r1), 0x0032(r1)
    9780:	32 00 
    9782:	1b 41 28 00 	mov	40(r1),	r11	;0x0028(r1)
    9786:	8b 10       	swpb	r11		
    9788:	8b 11       	sxt	r11		
    978a:	8b 10       	swpb	r11		
    978c:	8b 11       	sxt	r11		
    978e:	81 4b 34 00 	mov	r11,	52(r1)	;0x0034(r1)
    9792:	81 4b 36 00 	mov	r11,	54(r1)	;0x0036(r1)
    9796:	81 4b 38 00 	mov	r11,	56(r1)	;0x0038(r1)
    979a:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    979e:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97a2:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97a6:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97aa:	0c 49       	mov	r9,	r12	
    97ac:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    97b0:	0e 48       	mov	r8,	r14	
    97b2:	0f 44       	mov	r4,	r15	
    97b4:	b0 12 e8 9a 	call	#0x9ae8	
    97b8:	31 52       	add	#8,	r1	;r2 As==11
    97ba:	0b 4c       	mov	r12,	r11	
    97bc:	3c 90 0a 00 	cmp	#10,	r12	;#0x000a
    97c0:	05 34       	jge	$+12     	;abs 0x97cc
    97c2:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    97c6:	c7 4b 00 00 	mov.b	r11,	0(r7)	;0x0000(r7)
    97ca:	0c 3c       	jmp	$+26     	;abs 0x97e4
    97cc:	4b 4c       	mov.b	r12,	r11	
    97ce:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    97d2:	03 24       	jz	$+8      	;abs 0x97da
    97d4:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    97d8:	02 3c       	jmp	$+6      	;abs 0x97de
    97da:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    97de:	4a 5b       	add.b	r11,	r10	
    97e0:	c7 4a 00 00 	mov.b	r10,	0(r7)	;0x0000(r7)
    97e4:	06 47       	mov	r7,	r6	
    97e6:	36 53       	add	#-1,	r6	;r3 As==11
    97e8:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97ec:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97f0:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97f4:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    97f8:	0c 49       	mov	r9,	r12	
    97fa:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    97fe:	0e 48       	mov	r8,	r14	
    9800:	0f 44       	mov	r4,	r15	
    9802:	b0 12 c2 9a 	call	#0x9ac2	
    9806:	31 52       	add	#8,	r1	;r2 As==11
    9808:	09 4c       	mov	r12,	r9	
    980a:	81 4d 3c 00 	mov	r13,	60(r1)	;0x003c(r1)
    980e:	08 4e       	mov	r14,	r8	
    9810:	04 4f       	mov	r15,	r4	
    9812:	37 53       	add	#-1,	r7	;r3 As==11
    9814:	0c 93       	tst	r12		
    9816:	b2 23       	jnz	$-154    	;abs 0x977c
    9818:	0d 93       	tst	r13		
    981a:	b0 23       	jnz	$-158    	;abs 0x977c
    981c:	0e 93       	tst	r14		
    981e:	ae 23       	jnz	$-162    	;abs 0x977c
    9820:	0f 93       	tst	r15		
    9822:	ac 23       	jnz	$-166    	;abs 0x977c
    9824:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9828:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    982c:	81 43 22 00 	mov	#0,	34(r1)	;r3 As==00, 0x0022(r1)
    9830:	81 43 24 00 	mov	#0,	36(r1)	;r3 As==00, 0x0024(r1)
    9834:	6c 3c       	jmp	$+218    	;abs 0x990e
    9836:	58 b3       	bit.b	#1,	r8	;r3 As==01
    9838:	3e 24       	jz	$+126    	;abs 0x98b6
    983a:	14 41 1e 00 	mov	30(r1),	r4	;0x001e(r1)
    983e:	17 41 20 00 	mov	32(r1),	r7	;0x0020(r1)
    9842:	08 41       	mov	r1,	r8	
    9844:	38 50 1a 00 	add	#26,	r8	;#0x001a
    9848:	19 41 28 00 	mov	40(r1),	r9	;0x0028(r1)
    984c:	89 10       	swpb	r9		
    984e:	89 11       	sxt	r9		
    9850:	89 10       	swpb	r9		
    9852:	89 11       	sxt	r9		
    9854:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9858:	0d 49       	mov	r9,	r13	
    985a:	0e 44       	mov	r4,	r14	
    985c:	0f 47       	mov	r7,	r15	
    985e:	b0 12 5a 9a 	call	#0x9a5a	
    9862:	0b 4e       	mov	r14,	r11	
    9864:	3e 90 0a 00 	cmp	#10,	r14	;#0x000a
    9868:	05 34       	jge	$+12     	;abs 0x9874
    986a:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    986e:	c8 4b 00 00 	mov.b	r11,	0(r8)	;0x0000(r8)
    9872:	0c 3c       	jmp	$+26     	;abs 0x988c
    9874:	4b 4e       	mov.b	r14,	r11	
    9876:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    987a:	03 24       	jz	$+8      	;abs 0x9882
    987c:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    9880:	02 3c       	jmp	$+6      	;abs 0x9886
    9882:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    9886:	4a 5b       	add.b	r11,	r10	
    9888:	c8 4a 00 00 	mov.b	r10,	0(r8)	;0x0000(r8)
    988c:	06 48       	mov	r8,	r6	
    988e:	36 53       	add	#-1,	r6	;r3 As==11
    9890:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9894:	0d 49       	mov	r9,	r13	
    9896:	0e 44       	mov	r4,	r14	
    9898:	0f 47       	mov	r7,	r15	
    989a:	b0 12 24 9a 	call	#0x9a24	
    989e:	04 4e       	mov	r14,	r4	
    98a0:	07 4f       	mov	r15,	r7	
    98a2:	38 53       	add	#-1,	r8	;r3 As==11
    98a4:	0e 93       	tst	r14		
    98a6:	d0 23       	jnz	$-94     	;abs 0x9848
    98a8:	0f 93       	tst	r15		
    98aa:	ce 23       	jnz	$-98     	;abs 0x9848
    98ac:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    98b0:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    98b4:	2c 3c       	jmp	$+90     	;abs 0x990e
    98b6:	17 41 1e 00 	mov	30(r1),	r7	;0x001e(r1)
    98ba:	08 41       	mov	r1,	r8	
    98bc:	38 50 1a 00 	add	#26,	r8	;#0x001a
    98c0:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    98c4:	0f 47       	mov	r7,	r15	
    98c6:	b0 12 1c 9a 	call	#0x9a1c	
    98ca:	0d 4f       	mov	r15,	r13	
    98cc:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    98d0:	05 34       	jge	$+12     	;abs 0x98dc
    98d2:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    98d6:	c8 4d 00 00 	mov.b	r13,	0(r8)	;0x0000(r8)
    98da:	0c 3c       	jmp	$+26     	;abs 0x98f4
    98dc:	4d 4f       	mov.b	r15,	r13	
    98de:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    98e2:	03 24       	jz	$+8      	;abs 0x98ea
    98e4:	7c 40 37 00 	mov.b	#55,	r12	;#0x0037
    98e8:	02 3c       	jmp	$+6      	;abs 0x98ee
    98ea:	7c 40 57 00 	mov.b	#87,	r12	;#0x0057
    98ee:	4c 5d       	add.b	r13,	r12	
    98f0:	c8 4c 00 00 	mov.b	r12,	0(r8)	;0x0000(r8)
    98f4:	06 48       	mov	r8,	r6	
    98f6:	36 53       	add	#-1,	r6	;r3 As==11
    98f8:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    98fc:	0f 47       	mov	r7,	r15	
    98fe:	b0 12 02 9a 	call	#0x9a02	
    9902:	07 4f       	mov	r15,	r7	
    9904:	38 53       	add	#-1,	r8	;r3 As==11
    9906:	0f 93       	tst	r15		
    9908:	db 23       	jnz	$-72     	;abs 0x98c0
    990a:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    990e:	b1 90 0a 00 	cmp	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9912:	28 00 
    9914:	02 24       	jz	$+6      	;abs 0x991a
    9916:	c1 43 02 00 	mov.b	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    991a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    991e:	2a 24       	jz	$+86     	;abs 0x9974
    9920:	0f 41       	mov	r1,	r15	
    9922:	3f 50 1c 00 	add	#28,	r15	;#0x001c
    9926:	81 4f 42 00 	mov	r15,	66(r1)	;0x0042(r1)
    992a:	1a 41 1c 00 	mov	28(r1),	r10	;0x001c(r1)
    992e:	8a 10       	swpb	r10		
    9930:	8a 11       	sxt	r10		
    9932:	8a 10       	swpb	r10		
    9934:	8a 11       	sxt	r10		
    9936:	81 4a 44 00 	mov	r10,	68(r1)	;0x0044(r1)
    993a:	81 46 46 00 	mov	r6,	70(r1)	;0x0046(r1)
    993e:	0a 46       	mov	r6,	r10	
    9940:	8a 10       	swpb	r10		
    9942:	8a 11       	sxt	r10		
    9944:	8a 10       	swpb	r10		
    9946:	8a 11       	sxt	r10		
    9948:	81 4a 48 00 	mov	r10,	72(r1)	;0x0048(r1)
    994c:	1c 41 42 00 	mov	66(r1),	r12	;0x0042(r1)
    9950:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9954:	1c 81 46 00 	sub	70(r1),	r12	;0x0046(r1)
    9958:	1d 71 48 00 	subc	72(r1),	r13	;0x0048(r1)
    995c:	2c 83       	decd	r12		
    995e:	1c 91 26 00 	cmp	38(r1),	r12	;0x0026(r1)
    9962:	0e 2c       	jc	$+30     	;abs 0x9980
    9964:	e1 d3 01 00 	bis.b	#2,	1(r1)	;r3 As==10, 0x0001(r1)
    9968:	5e 41 26 00 	mov.b	38(r1),	r14	;0x0026(r1)
    996c:	4e 8c       	sub.b	r12,	r14	
    996e:	c1 4e 03 00 	mov.b	r14,	3(r1)	;0x0003(r1)
    9972:	06 3c       	jmp	$+14     	;abs 0x9980
    9974:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9978:	03 24       	jz	$+8      	;abs 0x9980
    997a:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    997e:	30 00 
    9980:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9984:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9988:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    998c:	0e 46       	mov	r6,	r14	
    998e:	1e 53       	inc	r14		
    9990:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9994:	b0 12 cc 91 	call	#0x91cc	
    9998:	21 52       	add	#4,	r1	;r2 As==10
    999a:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    999e:	0d 3c       	jmp	$+28     	;abs 0x99ba
    99a0:	7f 49       	mov.b	@r9+,	r15	
    99a2:	8f 11       	sxt	r15		
    99a4:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    99a8:	0e 49       	mov	r9,	r14	
    99aa:	0e 58       	add	r8,	r14	
    99ac:	19 91 40 00 	cmp	64(r1),	r9	;0x0040(r1)
    99b0:	f7 2b       	jnc	$-16     	;abs 0x99a0
    99b2:	81 49 3e 00 	mov	r9,	62(r1)	;0x003e(r1)
    99b6:	81 4e 2c 00 	mov	r14,	44(r1)	;0x002c(r1)
    99ba:	07 43       	clr	r7		
    99bc:	0e 3c       	jmp	$+30     	;abs 0x99da
    99be:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    99c2:	30 00 
    99c4:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    99c8:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    99cc:	03 3c       	jmp	$+8      	;abs 0x99d4
    99ce:	05 4e       	mov	r14,	r5	
    99d0:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    99d4:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    99d8:	17 43       	mov	#1,	r7	;r3 As==01
    99da:	16 41 40 00 	mov	64(r1),	r6	;0x0040(r1)
    99de:	6e 46       	mov.b	@r6,	r14	
    99e0:	4e 93       	tst.b	r14		
    99e2:	02 24       	jz	$+6      	;abs 0x99e8
    99e4:	30 40 b0 93 	br	#0x93b0	
    99e8:	1f 41 2c 00 	mov	44(r1),	r15	;0x002c(r1)
    99ec:	31 50 4a 00 	add	#74,	r1	;#0x004a
    99f0:	34 41       	pop	r4		
    99f2:	35 41       	pop	r5		
    99f4:	36 41       	pop	r6		
    99f6:	37 41       	pop	r7		
    99f8:	38 41       	pop	r8		
    99fa:	39 41       	pop	r9		
    99fc:	3a 41       	pop	r10		
    99fe:	3b 41       	pop	r11		
    9a00:	30 41       	ret			

00009a02 <__udivhi3>:
    9a02:	7c 40 10 00 	mov.b	#16,	r12	;#0x0010
    9a06:	0d 4e       	mov	r14,	r13	
    9a08:	0e 43       	clr	r14		
    9a0a:	0f 5f       	rla	r15		
    9a0c:	0e 6e       	rlc	r14		
    9a0e:	0e 9d       	cmp	r13,	r14	
    9a10:	02 28       	jnc	$+6      	;abs 0x9a16
    9a12:	0e 8d       	sub	r13,	r14	
    9a14:	1f d3       	bis	#1,	r15	;r3 As==01
    9a16:	1c 83       	dec	r12		
    9a18:	f8 23       	jnz	$-14     	;abs 0x9a0a
    9a1a:	30 41       	ret			

00009a1c <__umodhi3>:
    9a1c:	b0 12 02 9a 	call	#0x9a02	
    9a20:	0f 4e       	mov	r14,	r15	
    9a22:	30 41       	ret			

00009a24 <__udivsi3>:
    9a24:	0b 12       	push	r11		
    9a26:	0a 12       	push	r10		
    9a28:	09 12       	push	r9		
    9a2a:	79 40 20 00 	mov.b	#32,	r9	;#0x0020
    9a2e:	0a 4c       	mov	r12,	r10	
    9a30:	0b 4d       	mov	r13,	r11	
    9a32:	0c 43       	clr	r12		
    9a34:	0d 43       	clr	r13		
    9a36:	0e 5e       	rla	r14		
    9a38:	0f 6f       	rlc	r15		
    9a3a:	0c 6c       	rlc	r12		
    9a3c:	0d 6d       	rlc	r13		
    9a3e:	0d 9b       	cmp	r11,	r13	
    9a40:	06 28       	jnc	$+14     	;abs 0x9a4e
    9a42:	02 20       	jnz	$+6      	;abs 0x9a48
    9a44:	0c 9a       	cmp	r10,	r12	
    9a46:	03 28       	jnc	$+8      	;abs 0x9a4e
    9a48:	0c 8a       	sub	r10,	r12	
    9a4a:	0d 7b       	subc	r11,	r13	
    9a4c:	1e d3       	bis	#1,	r14	;r3 As==01
    9a4e:	19 83       	dec	r9		
    9a50:	f2 23       	jnz	$-26     	;abs 0x9a36
    9a52:	39 41       	pop	r9		
    9a54:	3a 41       	pop	r10		
    9a56:	3b 41       	pop	r11		
    9a58:	30 41       	ret			

00009a5a <__umodsi3>:
    9a5a:	b0 12 24 9a 	call	#0x9a24	
    9a5e:	0e 4c       	mov	r12,	r14	
    9a60:	0f 4d       	mov	r13,	r15	
    9a62:	30 41       	ret			

00009a64 <__xabi_udivmod64>:
    9a64:	07 12       	push	r7		
    9a66:	06 12       	push	r6		
    9a68:	05 12       	push	r5		
    9a6a:	04 12       	push	r4		
    9a6c:	30 12 40 00 	push	#64		;#0x0040
    9a70:	04 48       	mov	r8,	r4	
    9a72:	05 49       	mov	r9,	r5	
    9a74:	06 4a       	mov	r10,	r6	
    9a76:	07 4b       	mov	r11,	r7	
    9a78:	08 43       	clr	r8		
    9a7a:	09 43       	clr	r9		
    9a7c:	0a 43       	clr	r10		
    9a7e:	0b 43       	clr	r11		
    9a80:	0c 5c       	rla	r12		
    9a82:	0d 6d       	rlc	r13		
    9a84:	0e 6e       	rlc	r14		
    9a86:	0f 6f       	rlc	r15		
    9a88:	08 68       	rlc	r8		
    9a8a:	09 69       	rlc	r9		
    9a8c:	0a 6a       	rlc	r10		
    9a8e:	0b 6b       	rlc	r11		
    9a90:	0b 97       	cmp	r7,	r11	
    9a92:	0e 28       	jnc	$+30     	;abs 0x9ab0
    9a94:	08 20       	jnz	$+18     	;abs 0x9aa6
    9a96:	0a 96       	cmp	r6,	r10	
    9a98:	0b 28       	jnc	$+24     	;abs 0x9ab0
    9a9a:	05 20       	jnz	$+12     	;abs 0x9aa6
    9a9c:	09 95       	cmp	r5,	r9	
    9a9e:	08 28       	jnc	$+18     	;abs 0x9ab0
    9aa0:	02 20       	jnz	$+6      	;abs 0x9aa6
    9aa2:	08 94       	cmp	r4,	r8	
    9aa4:	05 28       	jnc	$+12     	;abs 0x9ab0
    9aa6:	08 84       	sub	r4,	r8	
    9aa8:	09 75       	subc	r5,	r9	
    9aaa:	0a 76       	subc	r6,	r10	
    9aac:	0b 77       	subc	r7,	r11	
    9aae:	1c d3       	bis	#1,	r12	;r3 As==01
    9ab0:	91 83 00 00 	dec	0(r1)		;0x0000(r1)
    9ab4:	e5 23       	jnz	$-52     	;abs 0x9a80
    9ab6:	21 53       	incd	r1		
    9ab8:	34 41       	pop	r4		
    9aba:	35 41       	pop	r5		
    9abc:	36 41       	pop	r6		
    9abe:	37 41       	pop	r7		
    9ac0:	30 41       	ret			

00009ac2 <__udivdi3>:
    9ac2:	0b 12       	push	r11		
    9ac4:	0a 12       	push	r10		
    9ac6:	09 12       	push	r9		
    9ac8:	08 12       	push	r8		
    9aca:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    9ace:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    9ad2:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    9ad6:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    9ada:	b0 12 64 9a 	call	#0x9a64	
    9ade:	38 41       	pop	r8		
    9ae0:	39 41       	pop	r9		
    9ae2:	3a 41       	pop	r10		
    9ae4:	3b 41       	pop	r11		
    9ae6:	30 41       	ret			

00009ae8 <__umoddi3>:
    9ae8:	0b 12       	push	r11		
    9aea:	0a 12       	push	r10		
    9aec:	09 12       	push	r9		
    9aee:	08 12       	push	r8		
    9af0:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    9af4:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    9af8:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    9afc:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    9b00:	b0 12 64 9a 	call	#0x9a64	
    9b04:	0c 48       	mov	r8,	r12	
    9b06:	0d 49       	mov	r9,	r13	
    9b08:	0e 4a       	mov	r10,	r14	
    9b0a:	0f 4b       	mov	r11,	r15	
    9b0c:	38 41       	pop	r8		
    9b0e:	39 41       	pop	r9		
    9b10:	3a 41       	pop	r10		
    9b12:	3b 41       	pop	r11		
    9b14:	30 41       	ret			

00009b16 <__udivmoddi4>:
    9b16:	0b 12       	push	r11		
    9b18:	0a 12       	push	r10		
    9b1a:	09 12       	push	r9		
    9b1c:	08 12       	push	r8		
    9b1e:	07 12       	push	r7		
    9b20:	18 41 0c 00 	mov	12(r1),	r8	;0x000c(r1)
    9b24:	19 41 0e 00 	mov	14(r1),	r9	;0x000e(r1)
    9b28:	1a 41 10 00 	mov	16(r1),	r10	;0x0010(r1)
    9b2c:	1b 41 12 00 	mov	18(r1),	r11	;0x0012(r1)
    9b30:	b0 12 64 9a 	call	#0x9a64	
    9b34:	17 41 14 00 	mov	20(r1),	r7	;0x0014(r1)
    9b38:	87 48 00 00 	mov	r8,	0(r7)	;0x0000(r7)
    9b3c:	87 49 02 00 	mov	r9,	2(r7)	;0x0002(r7)
    9b40:	87 4a 04 00 	mov	r10,	4(r7)	;0x0004(r7)
    9b44:	87 4b 06 00 	mov	r11,	6(r7)	;0x0006(r7)
    9b48:	37 41       	pop	r7		
    9b4a:	38 41       	pop	r8		
    9b4c:	39 41       	pop	r9		
    9b4e:	3a 41       	pop	r10		
    9b50:	3b 41       	pop	r11		
    9b52:	30 41       	ret			

00009b54 <_unexpected_>:
    9b54:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	1c 81 1c 81 9a 8f 1c 81 1c 81 bc 85 1c 81 46 8e     ..............F.
    fff0:	1c 81 42 8b 1c 81 1c 81 1c 81 26 8c 1c 81 00 80     ..B.......&.....
