
bin/application.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
0000a194 l    d  .rodata	00000000 .rodata
00000200 l    d  .bss	00000000 .bss
00000240 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main_client.c
00000200 l     O .bss	00000020 buffer_rx_msg
00000220 l     O .bss	00000002 buffer_rx_rssi
00000222 l     O .bss	00000001 buffer_rx_flag
00008058 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 cc2500.c
00008220 l     F .text	00000016 CC2500_HW_GDO0_IRQ_ON_ASSERT
00008236 l     F .text	00000016 CC2500_HW_GDO2_IRQ_ON_ASSERT
0000824c l     F .text	00000016 CC2500_HW_GDO0_DINT
00008262 l     F .text	00000016 CC2500_HW_GDO2_DINT
00008278 l     F .text	00000016 CC2500_HW_GDO0_EINT
0000828e l     F .text	00000016 CC2500_HW_GDO0_CLEAR_FLAG
000082a4 l     F .text	00000016 CC2500_HW_GDO2_CLEAR_FLAG
000082ba l     F .text	00000016 CONFIG_GDO0_PIN_AS_INPUT
000082d0 l     F .text	00000052 CC2500_HW_INIT
00008608 l     F .text	00000048 cc2500_check_tx_underflow
00008650 l     F .text	0000004a cc2500_check_rx_overflow
00000000 l    df *ABS*	00000000 clock.c
00000228 l     O .bss	00000002 mclk_freq_mhz
00008ec2 l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 timer.c
0000022a l     O .bss	00000002 timerA_cb
0000022c l     O .bss	00000002 timerA_wakeup
0000022e l     O .bss	00000002 timerB_cb
00000230 l     O .bss	00000002 timerB_wakeup
00000000 l    df *ABS*	00000000 uart.c
00000232 l     O .bss	00000002 uart_cb
00000000 l    df *ABS*	00000000 watchdog.c
00000234 l     O .bss	00000002 watchdog_backup
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vuprintf.c
000097de l     F .text	00000198 print_field
00000000 l    df *ABS*	00000000 puts.c
0000967a g     F .text	00000032 putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000902c g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000236 g     O .bss	00000001 cc2500_gdo2_cfg
00000174 g       *ABS*	00000000 __TACCR1
00008c7c g     F .text	00000024 cc2500_idle
00000000 g       *ABS*	00000000 __data_size
00008058  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00008cf0 g     F .text	0000001a cc2500_variables_bootstrap
00009004 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
0000004b g       *ABS*	00000000 __ADC10AE1
00008e1a g     F .text	0000009a port2_irq_handler
000097c0 g     F .text	00000010 printf
00000069 g       *ABS*	00000000 __UCB0CTL1
00008058  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
000093ee g     F .text	00000016 spi_select_radio
00000060 g       *ABS*	00000000 __UCA0CTL0
000089f8 g     F .text	0000006a cc2500_utx
00008fa6 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
0000954a g     F .text	00000018 timerB_register_cb
0000012e g       *ABS*	00000000 __TAIV
00009344 g     F .text	00000012 spi_check_miso_high
00009670 g     F .text	0000000a uart_stop
00008364 g     F .text	0000002e CC2500_SPI_WREG
00000226 g     O .bss	00000001 cc2500_rx_length
0000819a g     F .text	00000086 execcmd
00000000 g       .vectors	00000000 _efartext
0000930a g     F .text	0000003a spi_tx_rx
0000a040 g     F .text	00000000 __udivhi3
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
0000851a g     F .text	0000001e CC2500_SPI_RX_FIFO_BYTE
0000a2f0 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
00009418 g     F .text	00000038 Timer_A
00008d1c g     F .text	000000dc cc2500_init
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
00008bf8 g     F .text	00000018 cc2500_rx_register_cb
0000001d g       *ABS*	00000000 __P4OUT
00000040 g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
0000907c g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
000085ac g     F .text	00000030 cc2500_gdo2_set_signal
00008052  w      .text	00000000 __stop_progExec__
0000002d g       *ABS*	00000000 __P2IE
0000a014 g     F .text	0000002c puts
000096ca g     F .text	00000014 uart_eint
000084b8 g     F .text	00000062 CC2500_SPI_RX_BURST
00000192 g       *ABS*	00000000 __TBCCR0
00008058  w      .text	00000000 __isr_11
00009404 g     F .text	00000014 spi_deselect_radio
00000186 g       *ABS*	00000000 __TBCCTL2
00008ff0 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
0000a062 g     F .text	00000000 __udivsi3
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
0000929a g     F .text	00000062 spi_init
000095d2 g     F .text	0000000e timerB_stop
00000049 g       *ABS*	00000000 __ADC10DTC1
00008462 g     F .text	00000056 CC2500_SPI_TX_BURST
00000224 g     O .bss	00000001 cc2500_rx_offset
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
00008fca g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
0000a154 g       .text	00000000 __udivmoddi4
000089dc g     F .text	0000001c cc2500_calibrate
00009054 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
000085dc g     F .text	0000002c cc2500_set_fifo_threshold
00008322 g     F .text	00000020 CC2500_SPI_TX
00000182 g       *ABS*	00000000 __TBCCTL0
00008538 g     F .text	00000044 cc2500_wait_status
00008ac0 g     F .text	00000138 cc2500_rx_pkt_eop
0000006d g       *ABS*	00000000 __UCB0STAT
00008058  w      .text	00000000 __isr_5
00008392 g     F .text	00000036 CC2500_SPI_RREG
00000063 g       *ABS*	00000000 __UCA0BR1
0000a126 g     F .text	00000000 __umoddi3
0000a2f0 g       *ABS*	00000000 __data_load_start
00009252 g     F .text	00000016 leds_on
00008058 g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
00008c10 g     F .text	0000001e cc2500_packet_status
000091ea g     F .text	00000014 led_green_switch
000001bc g       *ABS*	00000000 __ADC10SA
00000166 g       *ABS*	00000000 __TACCTL2
0000a100 g     F .text	00000000 __udivdi3
00000065 g       *ABS*	00000000 __UCA0STAT
000080b4 g     F .text	000000e6 rx
000091c0 g     F .text	00000016 led_green_off
00008ca0 g     F .text	00000012 cc2500_sleep
00008c2e g     F .text	00000030 cc2500_cca
00008058  w      .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
0000012c g       *ABS*	00000000 __FCTL3
00009466 g     F .text	00000018 timerA_register_cb
00008058  w      .text	00000000 __isr_10
00000238 g     O .bss	00000002 radio_rx_cb
00008eb4 g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
000094ca g     F .text	00000024 timerA_start_milliseconds
00008fb8 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
0000842c g     F .text	00000036 CC2500_SPI_RX_BYTE
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
00009356 g     F .text	0000004a spi_tx_burst
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
00009214 g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
0000923c g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
00000240 g     O .noinit	00000002 __wdt_clear_value
0000805c g     F .text	00000058 radio_cb
000096ac g     F .text	0000001e uart_getchar
0000001b g       *ABS*	00000000 __P3SEL
000094ee g     F .text	0000000e timerA_stop
00008cca g     F .text	00000026 cc2500_wakeup
0000971c g       .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
0000a098 g     F .text	00000000 __umodsi3
00008d0a g     F .text	00000012 CC_ASSERT
000097d0 g     F .text	0000000e vprintf
00000028 g       *ABS*	00000000 __P2IN
0000947e g     F .text	00000018 timerA_set_wakeup
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
0000023a g     O .bss	00000001 cc2500_gdo0_cfg
000091fe g     F .text	00000016 led_red_off
0000a05a g     F .text	00000000 __umodhi3
00008058  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
000093a0 g     F .text	0000004e spi_rx_burst
000095e0 g     F .text	00000090 uart_init
00008028  w      .text	00000000 __do_clear_bss
000096de g     F .text	00000016 uart_dint
0000a194 g     O .rodata	00000024 config0
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
00009040 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
00009770 g     F .text	0000001c watchdog_stop
00008f82 g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
00009018 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
0000a062 g       .text	00000000 __ext_udivmod32
00009534 g     F .text	00000016 timerB_init
0000857c g     F .text	00000030 cc2500_gdo0_set_signal
00000027 g       *ABS*	00000000 __P1REN
000096f4 g     F .text	00000028 uart_register_cb
000000c0 g       *ABS*	00000000 __OA0CTL0
00008a90 g     F .text	00000030 cc2500_rx_enter
00009068 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
0000a192  w      .text	00000000 _unexpected_
00008058  w      .text	00000000 __isr_8
00008e1a g       .text	00000000 __isr_3
00009976 g     F .text	0000069e vuprintf
00009228 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
0000a040 g       .text	00000000 __ext_udivmod16
00008000  w      .text	00000000 _reset_vector__
00008058 g       .text	00000000 __ctors_start
0000a0a2 g       .text	00000000 __xabi_udivmod64
00008058  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	00000014 main
00000176 g       *ABS*	00000000 __TACCR2
00009132 g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
000094fc g       .text	00000000 __isr_13
0000908c g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
00009450 g     F .text	00000016 timerA_init
0000971c g     F .text	00000054 usart0irq
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00009562 g     F .text	00000018 timerB_set_wakeup
000097a2 g     F .text	0000001e strcmp
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
000094fc g     F .text	00000038 Timer_B
00008c5e g     F .text	0000001e cc2500_get_rssi
00008cb2 g     F .text	00000018 cc2500_reset
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
000083c8 g     F .text	00000036 CC2500_SPI_ROREG
0000a2c4 g     O .rodata	00000024 rfSettings_default_config
00009418 g       .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00009496 g     F .text	00000034 timerA_start_ticks
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
00008fdc g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
00008342 g     F .text	00000022 CC2500_SPI_STROBE
00008058 g       .text	00000000 __dtors_start
00008058  w      .text	00000000 __isr_6
00008058 g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
00008f94 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
00008058  w      .text	00000000 __isr_1
00000200 g       .rodata	00000000 _edata
00000242 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000023c g     O .bss	00000002 cc2500_rx_packet
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
0000023e g     O .bss	00000001 cc2500_status_register
000091d6 g     F .text	00000014 led_green_on
000086c4 g     F .text	000002f8 cc2500_configure
0000978c g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
00008052  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
000089bc g     F .text	00000020 cc2500_set_channel
00008a62 g     F .text	0000002e cc2500_rx_register_buffer
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
0000957a g     F .text	00000034 timerB_start_ticks
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
00000200 g       .rodata	00000000 __data_start
000095ae g     F .text	00000024 timerB_start_milliseconds
00008df8 g     F .text	00000022 cc2500_gdox_signal_handler
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
000083fe g     F .text	0000002e CC2500_SPI_TX_BYTE
0000869a g     F .text	0000002a cc2500_check_fifo_xflow_flush
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
000092fc g     F .text	0000000e spi_clear_rx_IFG
00009268 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 40 02 	mov	r5,	&0x0240	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 40 02 	mov	&0x0240,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f f0 a2 	mov	-23824(r15),512(r15);0xa2f0(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 40 02 	mov	&0x0240,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:
  }
  printf("\n");
}

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
    watchdog_stop();
    8042:	b0 12 70 97 	call	#0x9770	
    set_mcu_speed_dco_mclk_16MHz_smclk_8MHz();
    8046:	b0 12 40 90 	call	#0x9040	
    leds_init();
    804a:	b0 12 68 92 	call	#0x9268	
    rx();
    804e:	b0 12 b4 80 	call	#0x80b4	

00008052 <__stop_progExec__>:
    8052:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    8056:	fd 3f       	jmp	$-4      	;abs 0x8052

00008058 <__ctors_end>:
    8058:	30 40 92 a1 	br	#0xa192	

0000805c <radio_cb>:
#else
#define DBG_PRINTF(x...) do { } while (0)
#endif

void radio_cb(uint8_t* buffer, int size, int8_t rssi)
{
    805c:	04 12       	push	r4		
    805e:	04 41       	mov	r1,	r4	
    8060:	24 53       	incd	r4		
    8062:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8066:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    806a:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    806e:	c4 4d fc ff 	mov.b	r13,	-4(r4)	;0xfffc(r4)
  switch (size)
    8072:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8076:	2f 52       	add	#4,	r15	;r2 As==10
    8078:	3f 90 05 00 	cmp	#5,	r15	;#0x0005
    807c:	05 2c       	jc	$+12     	;abs 0x8088
    807e:	0f 5f       	rla	r15		
    8080:	3f 50 b8 a1 	add	#-24136,r15	;#0xa1b8
    8084:	2f 4f       	mov	@r15,	r15	
    8086:	00 4f       	br	r15		
      break;
    case -ETXFLOW:
      DBG_PRINTF("msg tx overflow\n");
      break;
    default:
      if (size > 0)
    8088:	94 93 fa ff 	cmp	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    808c:	0a 38       	jl	$+22     	;abs 0x80a2
	{
	  // memcpy(buffer_rx_msg, buffer, MSG_SIZE);
	  buffer_rx_rssi = rssi;
    808e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8092:	8f 11       	sxt	r15		
    8094:	82 4f 20 02 	mov	r15,	&0x0220	
	  buffer_rx_flag = 1;
    8098:	d2 43 22 02 	mov.b	#1,	&0x0222	;r3 As==01
      else
	{
	  /* packet error, drop */
	  DBG_PRINTF("msg packet error size=%d\n",size);
	}
      break;
    809c:	02 3c       	jmp	$+6      	;abs 0x80a2
{
  switch (size)
    {
    case 0:
      DBG_PRINTF("msg size 0\n");
      break;
    809e:	03 43       	nop			
    80a0:	01 3c       	jmp	$+4      	;abs 0x80a4
      else
	{
	  /* packet error, drop */
	  DBG_PRINTF("msg packet error size=%d\n",size);
	}
      break;
    80a2:	03 43       	nop			
    }
  cc2500_idle();
    80a4:	b0 12 7c 8c 	call	#0x8c7c	
  cc2500_rx_enter();
    80a8:	b0 12 90 8a 	call	#0x8a90	
}
    80ac:	31 50 06 00 	add	#6,	r1	;#0x0006
    80b0:	34 41       	pop	r4		
    80b2:	30 41       	ret			

000080b4 <rx>:

void rx(void)
{
    80b4:	04 12       	push	r4		
    80b6:	04 41       	mov	r1,	r4	
    80b8:	24 53       	incd	r4		
    80ba:	21 82       	sub	#4,	r1	;r2 As==10
  int i = 0;
    80bc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
  int tstart = 0;
    80c0:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)

  uart_init(UART_9600_SMCLK_8MHZ);
    80c4:	3f 42       	mov	#8,	r15	;r2 As==11
    80c6:	b0 12 e0 95 	call	#0x95e0	
  printf("rx node\n");
    80ca:	3f 40 c2 a1 	mov	#-24126,r15	;#0xa1c2
    80ce:	b0 12 14 a0 	call	#0xa014	

  timerA_init();
    80d2:	b0 12 50 94 	call	#0x9450	
  timerA_set_wakeup(1);
    80d6:	1f 43       	mov	#1,	r15	;r3 As==01
    80d8:	b0 12 7e 94 	call	#0x947e	
  timerA_start_milliseconds(1100);
    80dc:	3f 40 4c 04 	mov	#1100,	r15	;#0x044c
    80e0:	b0 12 ca 94 	call	#0x94ca	

  buffer_rx_flag = 0;
    80e4:	c2 43 22 02 	mov.b	#0,	&0x0222	;r3 As==00

  spi_init();
    80e8:	b0 12 9a 92 	call	#0x929a	
  cc2500_init();
    80ec:	b0 12 1c 8d 	call	#0x8d1c	

#if defined(USER_RFCONFIG)
  printf(" -- user config\n");
    80f0:	3f 40 ca a1 	mov	#-24118,r15	;#0xa1ca
    80f4:	b0 12 14 a0 	call	#0xa014	
  cc2500_configure(& USER_RFCONFIG );
    80f8:	3f 40 94 a1 	mov	#-24172,r15	;#0xa194
    80fc:	b0 12 c4 86 	call	#0x86c4	
#endif
  cc2500_rx_register_buffer(buffer_rx_msg, MSG_SIZE);
    8100:	7e 40 20 00 	mov.b	#32,	r14	;#0x0020
    8104:	3f 40 00 02 	mov	#512,	r15	;#0x0200
    8108:	b0 12 62 8a 	call	#0x8a62	
  cc2500_rx_register_cb(radio_cb);
    810c:	3f 40 5c 80 	mov	#-32676,r15	;#0x805c
    8110:	b0 12 f8 8b 	call	#0x8bf8	

  cc2500_rx_enter();
    8114:	b0 12 90 8a 	call	#0x8a90	
  printf(" -- start\n");
    8118:	3f 40 da a1 	mov	#-24102,r15	;#0xa1da
    811c:	b0 12 14 a0 	call	#0xa014	

  printf("start\n");
    8120:	3f 40 e4 a1 	mov	#-24092,r15	;#0xa1e4
    8124:	b0 12 14 a0 	call	#0xa014	
  __enable_interrupt();
    8128:	32 d2       	eint			
    812a:	01 3c       	jmp	$+4      	;abs 0x812e
	{
	  cc2500_idle();
	  cc2500_rx_enter();
	  timerA_start_milliseconds(1100);
	}
    }
    812c:	03 43       	nop			
  printf("start\n");
  __enable_interrupt();
  
  for(;;)
    {
      LPM(1);
    812e:	32 d0 50 00 	bis	#80,	r2	;#0x0050
      if (buffer_rx_flag == 1)
    8132:	5f 42 22 02 	mov.b	&0x0222,r15	
    8136:	5f 93       	cmp.b	#1,	r15	;r3 As==01
    8138:	27 20       	jnz	$+80     	;abs 0x8188
	{
	  execcmd(&buffer_rx_msg);
    813a:	3e 40 9a 81 	mov	#-32358,r14	;#0x819a
    813e:	3f 40 00 02 	mov	#512,	r15	;#0x0200
    8142:	8e 12       	call	r14		
	  printf(" -- paquet %d, emetteur %d, %d dBm\n\r",i++, buffer_rx_msg[0], buffer_rx_rssi);
    8144:	1d 42 20 02 	mov	&0x0220,r13	
    8148:	5f 42 00 02 	mov.b	&0x0200,r15	
    814c:	4f 4f       	mov.b	r15,	r15	
    814e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    8152:	94 53 fa ff 	inc	-6(r4)		;0xfffa(r4)
    8156:	0d 12       	push	r13		
    8158:	0f 12       	push	r15		
    815a:	0e 12       	push	r14		
    815c:	30 12 ea a1 	push	#-24086	;#0xa1ea
    8160:	b0 12 c0 97 	call	#0x97c0	
    8164:	31 52       	add	#8,	r1	;r2 As==11
	  printf("%s \n", buffer_rx_msg);
    8166:	30 12 00 02 	push	#512		;#0x0200
    816a:	30 12 0f a2 	push	#-24049	;#0xa20f
    816e:	b0 12 c0 97 	call	#0x97c0	
    8172:	21 52       	add	#4,	r1	;r2 As==10
	  buffer_rx_flag = 0;
    8174:	c2 43 22 02 	mov.b	#0,	&0x0222	;r3 As==00
	  if (tstart == 0)
    8178:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    817c:	d7 23       	jnz	$-80     	;abs 0x812c
	    {
	      // set next IRQ
	      timerA_start_milliseconds(1100);
    817e:	3f 40 4c 04 	mov	#1100,	r15	;#0x044c
    8182:	b0 12 ca 94 	call	#0x94ca	
	{
	  cc2500_idle();
	  cc2500_rx_enter();
	  timerA_start_milliseconds(1100);
	}
    }
    8186:	d2 3f       	jmp	$-90     	;abs 0x812c
	      timerA_start_milliseconds(1100);
	    }
	}
      else
	{
	  cc2500_idle();
    8188:	b0 12 7c 8c 	call	#0x8c7c	
	  cc2500_rx_enter();
    818c:	b0 12 90 8a 	call	#0x8a90	
	  timerA_start_milliseconds(1100);
    8190:	3f 40 4c 04 	mov	#1100,	r15	;#0x044c
    8194:	b0 12 ca 94 	call	#0x94ca	
	}
    }
    8198:	c9 3f       	jmp	$-108    	;abs 0x812c

0000819a <execcmd>:
}



void execcmd(char cmd[]){
    819a:	04 12       	push	r4		
    819c:	04 41       	mov	r1,	r4	
    819e:	24 53       	incd	r4		
    81a0:	21 83       	decd	r1		
    81a2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)

  if(strcmp(cmd, "test") == 0){
    81a6:	3e 40 14 a2 	mov	#-24044,r14	;#0xa214
    81aa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81ae:	b0 12 a2 97 	call	#0x97a2	
    81b2:	0f 93       	tst	r15		
    81b4:	06 20       	jnz	$+14     	;abs 0x81c2
    printf("\nHello World");
    81b6:	30 12 19 a2 	push	#-24039	;#0xa219
    81ba:	b0 12 c0 97 	call	#0x97c0	
    81be:	21 53       	incd	r1		
    81c0:	28 3c       	jmp	$+82     	;abs 0x8212
  }
  else if(strcmp(cmd, "help") == 0){
    81c2:	3e 40 26 a2 	mov	#-24026,r14	;#0xa226
    81c6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81ca:	b0 12 a2 97 	call	#0x97a2	
    81ce:	0f 93       	tst	r15		
    81d0:	05 20       	jnz	$+12     	;abs 0x81dc
    printf("\ntest   : Hello World\ngreen led on : Turn green led on\ngreen led off : Turn green led off\n");
    81d2:	3f 40 2b a2 	mov	#-24021,r15	;#0xa22b
    81d6:	b0 12 14 a0 	call	#0xa014	
    81da:	1b 3c       	jmp	$+56     	;abs 0x8212
  }
  else if(strcmp(cmd, "green led on") == 0){
    81dc:	3e 40 85 a2 	mov	#-23931,r14	;#0xa285
    81e0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81e4:	b0 12 a2 97 	call	#0x97a2	
    81e8:	0f 93       	tst	r15		
    81ea:	03 20       	jnz	$+8      	;abs 0x81f2
    led_green_on();
    81ec:	b0 12 d6 91 	call	#0x91d6	
    81f0:	10 3c       	jmp	$+34     	;abs 0x8212
  }
  else if(strcmp(cmd, "green led off") == 0){
    81f2:	3e 40 92 a2 	mov	#-23918,r14	;#0xa292
    81f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81fa:	b0 12 a2 97 	call	#0x97a2	
    81fe:	0f 93       	tst	r15		
    8200:	03 20       	jnz	$+8      	;abs 0x8208
    led_green_off();
    8202:	b0 12 c0 91 	call	#0x91c0	
    8206:	05 3c       	jmp	$+12     	;abs 0x8212
  }
  else{
    printf("\nCommande inconnue : help for help");
    8208:	30 12 a0 a2 	push	#-23904	;#0xa2a0
    820c:	b0 12 c0 97 	call	#0x97c0	
    8210:	21 53       	incd	r1		
  }
  printf("\n");
    8212:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8216:	b0 12 7a 96 	call	#0x967a	
}
    821a:	21 53       	incd	r1		
    821c:	34 41       	pop	r4		
    821e:	30 41       	ret			

00008220 <CC2500_HW_GDO0_IRQ_ON_ASSERT>:
    8220:	04 12       	push	r4		
    8222:	04 41       	mov	r1,	r4	
    8224:	24 53       	incd	r4		
    8226:	5f 42 2c 00 	mov.b	&0x002c,r15	
    822a:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    822e:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    8232:	34 41       	pop	r4		
    8234:	30 41       	ret			

00008236 <CC2500_HW_GDO2_IRQ_ON_ASSERT>:
    8236:	04 12       	push	r4		
    8238:	04 41       	mov	r1,	r4	
    823a:	24 53       	incd	r4		
    823c:	5f 42 2c 00 	mov.b	&0x002c,r15	
    8240:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    8244:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    8248:	34 41       	pop	r4		
    824a:	30 41       	ret			

0000824c <CC2500_HW_GDO0_DINT>:
    824c:	04 12       	push	r4		
    824e:	04 41       	mov	r1,	r4	
    8250:	24 53       	incd	r4		
    8252:	5f 42 2d 00 	mov.b	&0x002d,r15	
    8256:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    825a:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    825e:	34 41       	pop	r4		
    8260:	30 41       	ret			

00008262 <CC2500_HW_GDO2_DINT>:
    8262:	04 12       	push	r4		
    8264:	04 41       	mov	r1,	r4	
    8266:	24 53       	incd	r4		
    8268:	5f 42 2d 00 	mov.b	&0x002d,r15	
    826c:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    8270:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    8274:	34 41       	pop	r4		
    8276:	30 41       	ret			

00008278 <CC2500_HW_GDO0_EINT>:
    8278:	04 12       	push	r4		
    827a:	04 41       	mov	r1,	r4	
    827c:	24 53       	incd	r4		
    827e:	5f 42 2d 00 	mov.b	&0x002d,r15	
    8282:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    8286:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    828a:	34 41       	pop	r4		
    828c:	30 41       	ret			

0000828e <CC2500_HW_GDO0_CLEAR_FLAG>:
    828e:	04 12       	push	r4		
    8290:	04 41       	mov	r1,	r4	
    8292:	24 53       	incd	r4		
    8294:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8298:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    829c:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    82a0:	34 41       	pop	r4		
    82a2:	30 41       	ret			

000082a4 <CC2500_HW_GDO2_CLEAR_FLAG>:
    82a4:	04 12       	push	r4		
    82a6:	04 41       	mov	r1,	r4	
    82a8:	24 53       	incd	r4		
    82aa:	5f 42 2b 00 	mov.b	&0x002b,r15	
    82ae:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    82b2:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    82b6:	34 41       	pop	r4		
    82b8:	30 41       	ret			

000082ba <CONFIG_GDO0_PIN_AS_INPUT>:
    82ba:	04 12       	push	r4		
    82bc:	04 41       	mov	r1,	r4	
    82be:	24 53       	incd	r4		
    82c0:	5f 42 2e 00 	mov.b	&0x002e,r15	
    82c4:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    82c8:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    82cc:	34 41       	pop	r4		
    82ce:	30 41       	ret			

000082d0 <CC2500_HW_INIT>:
    82d0:	04 12       	push	r4		
    82d2:	04 41       	mov	r1,	r4	
    82d4:	24 53       	incd	r4		
    82d6:	5f 42 2e 00 	mov.b	&0x002e,r15	
    82da:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    82de:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    82e2:	5f 42 2a 00 	mov.b	&0x002a,r15	
    82e6:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    82ea:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    82ee:	5f 42 2d 00 	mov.b	&0x002d,r15	
    82f2:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    82f6:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    82fa:	5f 42 2c 00 	mov.b	&0x002c,r15	
    82fe:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8302:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    8306:	5f 42 2b 00 	mov.b	&0x002b,r15	
    830a:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    830e:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8312:	5f 42 2f 00 	mov.b	&0x002f,r15	
    8316:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    831a:	c2 4f 2f 00 	mov.b	r15,	&0x002f	
    831e:	34 41       	pop	r4		
    8320:	30 41       	ret			

00008322 <CC2500_SPI_TX>:
    8322:	04 12       	push	r4		
    8324:	04 41       	mov	r1,	r4	
    8326:	24 53       	incd	r4		
    8328:	21 83       	decd	r1		
    832a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    832e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8332:	b0 12 0a 93 	call	#0x930a	
    8336:	4f 4f       	mov.b	r15,	r15	
    8338:	c2 4f 3e 02 	mov.b	r15,	&0x023e	
    833c:	21 53       	incd	r1		
    833e:	34 41       	pop	r4		
    8340:	30 41       	ret			

00008342 <CC2500_SPI_STROBE>:
    8342:	04 12       	push	r4		
    8344:	04 41       	mov	r1,	r4	
    8346:	24 53       	incd	r4		
    8348:	21 83       	decd	r1		
    834a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    834e:	b0 12 ee 93 	call	#0x93ee	
    8352:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8356:	b0 12 22 83 	call	#0x8322	
    835a:	b0 12 04 94 	call	#0x9404	
    835e:	21 53       	incd	r1		
    8360:	34 41       	pop	r4		
    8362:	30 41       	ret			

00008364 <CC2500_SPI_WREG>:
    8364:	04 12       	push	r4		
    8366:	04 41       	mov	r1,	r4	
    8368:	24 53       	incd	r4		
    836a:	21 82       	sub	#4,	r1	;r2 As==10
    836c:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8370:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    8374:	b0 12 ee 93 	call	#0x93ee	
    8378:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    837c:	b0 12 22 83 	call	#0x8322	
    8380:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8384:	b0 12 22 83 	call	#0x8322	
    8388:	b0 12 04 94 	call	#0x9404	
    838c:	21 52       	add	#4,	r1	;r2 As==10
    838e:	34 41       	pop	r4		
    8390:	30 41       	ret			

00008392 <CC2500_SPI_RREG>:
    8392:	04 12       	push	r4		
    8394:	04 41       	mov	r1,	r4	
    8396:	24 53       	incd	r4		
    8398:	21 82       	sub	#4,	r1	;r2 As==10
    839a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    839e:	b0 12 ee 93 	call	#0x93ee	
    83a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83a6:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    83aa:	b0 12 22 83 	call	#0x8322	
    83ae:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    83b2:	b0 12 0a 93 	call	#0x930a	
    83b6:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    83ba:	b0 12 04 94 	call	#0x9404	
    83be:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    83c2:	21 52       	add	#4,	r1	;r2 As==10
    83c4:	34 41       	pop	r4		
    83c6:	30 41       	ret			

000083c8 <CC2500_SPI_ROREG>:
    83c8:	04 12       	push	r4		
    83ca:	04 41       	mov	r1,	r4	
    83cc:	24 53       	incd	r4		
    83ce:	21 82       	sub	#4,	r1	;r2 As==10
    83d0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    83d4:	b0 12 ee 93 	call	#0x93ee	
    83d8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83dc:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    83e0:	b0 12 22 83 	call	#0x8322	
    83e4:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    83e8:	b0 12 0a 93 	call	#0x930a	
    83ec:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    83f0:	b0 12 04 94 	call	#0x9404	
    83f4:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    83f8:	21 52       	add	#4,	r1	;r2 As==10
    83fa:	34 41       	pop	r4		
    83fc:	30 41       	ret			

000083fe <CC2500_SPI_TX_BYTE>:
    83fe:	04 12       	push	r4		
    8400:	04 41       	mov	r1,	r4	
    8402:	24 53       	incd	r4		
    8404:	21 82       	sub	#4,	r1	;r2 As==10
    8406:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    840a:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    840e:	b0 12 ee 93 	call	#0x93ee	
    8412:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8416:	b0 12 22 83 	call	#0x8322	
    841a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    841e:	b0 12 22 83 	call	#0x8322	
    8422:	b0 12 04 94 	call	#0x9404	
    8426:	21 52       	add	#4,	r1	;r2 As==10
    8428:	34 41       	pop	r4		
    842a:	30 41       	ret			

0000842c <CC2500_SPI_RX_BYTE>:
    842c:	04 12       	push	r4		
    842e:	04 41       	mov	r1,	r4	
    8430:	24 53       	incd	r4		
    8432:	21 82       	sub	#4,	r1	;r2 As==10
    8434:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8438:	b0 12 ee 93 	call	#0x93ee	
    843c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8440:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    8444:	b0 12 22 83 	call	#0x8322	
    8448:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    844c:	b0 12 0a 93 	call	#0x930a	
    8450:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8454:	b0 12 04 94 	call	#0x9404	
    8458:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    845c:	21 52       	add	#4,	r1	;r2 As==10
    845e:	34 41       	pop	r4		
    8460:	30 41       	ret			

00008462 <CC2500_SPI_TX_BURST>:
    8462:	04 12       	push	r4		
    8464:	04 41       	mov	r1,	r4	
    8466:	24 53       	incd	r4		
    8468:	31 82       	sub	#8,	r1	;r2 As==11
    846a:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    846e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    8472:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    8476:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    847a:	b0 12 ee 93 	call	#0x93ee	
    847e:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    8482:	3f d0 40 00 	bis	#64,	r15	;#0x0040
    8486:	b0 12 22 83 	call	#0x8322	
    848a:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    848e:	0a 3c       	jmp	$+22     	;abs 0x84a4
    8490:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    8494:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    8498:	6f 4f       	mov.b	@r15,	r15	
    849a:	8f 11       	sxt	r15		
    849c:	b0 12 22 83 	call	#0x8322	
    84a0:	d4 53 f6 ff 	inc.b	-10(r4)	;0xfff6(r4)
    84a4:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    84a8:	1f 94 fc ff 	cmp	-4(r4),	r15	;0xfffc(r4)
    84ac:	f1 3b       	jl	$-28     	;abs 0x8490
    84ae:	b0 12 04 94 	call	#0x9404	
    84b2:	31 52       	add	#8,	r1	;r2 As==11
    84b4:	34 41       	pop	r4		
    84b6:	30 41       	ret			

000084b8 <CC2500_SPI_RX_BURST>:
    84b8:	0b 12       	push	r11		
    84ba:	04 12       	push	r4		
    84bc:	04 41       	mov	r1,	r4	
    84be:	24 52       	add	#4,	r4	;r2 As==10
    84c0:	31 82       	sub	#8,	r1	;r2 As==11
    84c2:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
    84c6:	84 4e f8 ff 	mov	r14,	-8(r4)	;0xfff8(r4)
    84ca:	84 4d fa ff 	mov	r13,	-6(r4)	;0xfffa(r4)
    84ce:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    84d2:	b0 12 ee 93 	call	#0x93ee	
    84d6:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    84da:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    84de:	b0 12 22 83 	call	#0x8322	
    84e2:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    84e6:	0e 3c       	jmp	$+30     	;abs 0x8504
    84e8:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    84ec:	1b 44 f8 ff 	mov	-8(r4),	r11	;0xfff8(r4)
    84f0:	0b 5f       	add	r15,	r11	
    84f2:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    84f6:	b0 12 0a 93 	call	#0x930a	
    84fa:	4f 4f       	mov.b	r15,	r15	
    84fc:	cb 4f 00 00 	mov.b	r15,	0(r11)	;0x0000(r11)
    8500:	d4 53 f4 ff 	inc.b	-12(r4)	;0xfff4(r4)
    8504:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    8508:	1f 94 fa ff 	cmp	-6(r4),	r15	;0xfffa(r4)
    850c:	ed 3b       	jl	$-36     	;abs 0x84e8
    850e:	b0 12 04 94 	call	#0x9404	
    8512:	31 52       	add	#8,	r1	;r2 As==11
    8514:	34 41       	pop	r4		
    8516:	3b 41       	pop	r11		
    8518:	30 41       	ret			

0000851a <CC2500_SPI_RX_FIFO_BYTE>:
    851a:	04 12       	push	r4		
    851c:	04 41       	mov	r1,	r4	
    851e:	24 53       	incd	r4		
    8520:	21 83       	decd	r1		
    8522:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8526:	b0 12 2c 84 	call	#0x842c	
    852a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    852e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8532:	21 53       	incd	r1		
    8534:	34 41       	pop	r4		
    8536:	30 41       	ret			

00008538 <cc2500_wait_status>:
    8538:	04 12       	push	r4		
    853a:	04 41       	mov	r1,	r4	
    853c:	24 53       	incd	r4		
    853e:	21 82       	sub	#4,	r1	;r2 As==10
    8540:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8544:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    8548:	b0 12 42 83 	call	#0x8342	
    854c:	5f 42 3e 02 	mov.b	&0x023e,r15	
    8550:	4f 4f       	mov.b	r15,	r15	
    8552:	4f 4f       	mov.b	r15,	r15	
    8554:	12 c3       	clrc			
    8556:	4f 10       	rrc.b	r15		
    8558:	12 c3       	clrc			
    855a:	4f 10       	rrc.b	r15		
    855c:	12 c3       	clrc			
    855e:	4f 10       	rrc.b	r15		
    8560:	12 c3       	clrc			
    8562:	4f 10       	rrc.b	r15		
    8564:	4e 4f       	mov.b	r15,	r14	
    8566:	7e f0 07 00 	and.b	#7,	r14	;#0x0007
    856a:	c4 4e fa ff 	mov.b	r14,	-6(r4)	;0xfffa(r4)
    856e:	d4 94 fa ff 	cmp.b	-6(r4),	-4(r4)	;0xfffa(r4), 0xfffc(r4)
    8572:	fc ff 
    8574:	e7 23       	jnz	$-48     	;abs 0x8544
    8576:	21 52       	add	#4,	r1	;r2 As==10
    8578:	34 41       	pop	r4		
    857a:	30 41       	ret			

0000857c <cc2500_gdo0_set_signal>:
    857c:	04 12       	push	r4		
    857e:	04 41       	mov	r1,	r4	
    8580:	24 53       	incd	r4		
    8582:	21 82       	sub	#4,	r1	;r2 As==10
    8584:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8588:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    858c:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8590:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8594:	d2 44 fa ff 	mov.b	-6(r4),	&0x023a	;0xfffa(r4)
    8598:	3a 02 
    859a:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    859e:	0e 4f       	mov	r15,	r14	
    85a0:	2f 43       	mov	#2,	r15	;r3 As==10
    85a2:	b0 12 64 83 	call	#0x8364	
    85a6:	21 52       	add	#4,	r1	;r2 As==10
    85a8:	34 41       	pop	r4		
    85aa:	30 41       	ret			

000085ac <cc2500_gdo2_set_signal>:
    85ac:	04 12       	push	r4		
    85ae:	04 41       	mov	r1,	r4	
    85b0:	24 53       	incd	r4		
    85b2:	21 82       	sub	#4,	r1	;r2 As==10
    85b4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    85b8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    85bc:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    85c0:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    85c4:	d2 44 fa ff 	mov.b	-6(r4),	&0x0236	;0xfffa(r4)
    85c8:	36 02 
    85ca:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    85ce:	0e 4f       	mov	r15,	r14	
    85d0:	0f 43       	clr	r15		
    85d2:	b0 12 64 83 	call	#0x8364	
    85d6:	21 52       	add	#4,	r1	;r2 As==10
    85d8:	34 41       	pop	r4		
    85da:	30 41       	ret			

000085dc <cc2500_set_fifo_threshold>:
    85dc:	04 12       	push	r4		
    85de:	04 41       	mov	r1,	r4	
    85e0:	24 53       	incd	r4		
    85e2:	21 82       	sub	#4,	r1	;r2 As==10
    85e4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    85e8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    85ec:	7f f0 0f 00 	and.b	#15,	r15	;#0x000f
    85f0:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    85f4:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    85f8:	0e 4f       	mov	r15,	r14	
    85fa:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    85fe:	b0 12 64 83 	call	#0x8364	
    8602:	21 52       	add	#4,	r1	;r2 As==10
    8604:	34 41       	pop	r4		
    8606:	30 41       	ret			

00008608 <cc2500_check_tx_underflow>:
    8608:	04 12       	push	r4		
    860a:	04 41       	mov	r1,	r4	
    860c:	24 53       	incd	r4		
    860e:	21 83       	decd	r1		
    8610:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    8614:	b0 12 42 83 	call	#0x8342	
    8618:	5f 42 3e 02 	mov.b	&0x023e,r15	
    861c:	4f 4f       	mov.b	r15,	r15	
    861e:	4f 4f       	mov.b	r15,	r15	
    8620:	12 c3       	clrc			
    8622:	4f 10       	rrc.b	r15		
    8624:	12 c3       	clrc			
    8626:	4f 10       	rrc.b	r15		
    8628:	12 c3       	clrc			
    862a:	4f 10       	rrc.b	r15		
    862c:	12 c3       	clrc			
    862e:	4f 10       	rrc.b	r15		
    8630:	4f 4f       	mov.b	r15,	r15	
    8632:	0e 4f       	mov	r15,	r14	
    8634:	3e f0 07 00 	and	#7,	r14	;#0x0007
    8638:	1f 43       	mov	#1,	r15	;r3 As==01
    863a:	3e 90 07 00 	cmp	#7,	r14	;#0x0007
    863e:	01 24       	jz	$+4      	;abs 0x8642
    8640:	0f 43       	clr	r15		
    8642:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8646:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    864a:	21 53       	incd	r1		
    864c:	34 41       	pop	r4		
    864e:	30 41       	ret			

00008650 <cc2500_check_rx_overflow>:
    8650:	04 12       	push	r4		
    8652:	04 41       	mov	r1,	r4	
    8654:	24 53       	incd	r4		
    8656:	21 83       	decd	r1		
    8658:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    865c:	b0 12 42 83 	call	#0x8342	
    8660:	5f 42 3e 02 	mov.b	&0x023e,r15	
    8664:	4f 4f       	mov.b	r15,	r15	
    8666:	4f 4f       	mov.b	r15,	r15	
    8668:	12 c3       	clrc			
    866a:	4f 10       	rrc.b	r15		
    866c:	12 c3       	clrc			
    866e:	4f 10       	rrc.b	r15		
    8670:	12 c3       	clrc			
    8672:	4f 10       	rrc.b	r15		
    8674:	12 c3       	clrc			
    8676:	4f 10       	rrc.b	r15		
    8678:	4f 4f       	mov.b	r15,	r15	
    867a:	0e 4f       	mov	r15,	r14	
    867c:	3e f0 07 00 	and	#7,	r14	;#0x0007
    8680:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8682:	3e 90 06 00 	cmp	#6,	r14	;#0x0006
    8686:	01 24       	jz	$+4      	;abs 0x868a
    8688:	4f 43       	clr.b	r15		
    868a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    868e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8692:	8f 11       	sxt	r15		
    8694:	21 53       	incd	r1		
    8696:	34 41       	pop	r4		
    8698:	30 41       	ret			

0000869a <cc2500_check_fifo_xflow_flush>:
    869a:	04 12       	push	r4		
    869c:	04 41       	mov	r1,	r4	
    869e:	24 53       	incd	r4		
    86a0:	b0 12 08 86 	call	#0x8608	
    86a4:	0f 93       	tst	r15		
    86a6:	04 24       	jz	$+10     	;abs 0x86b0
    86a8:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    86ac:	b0 12 42 83 	call	#0x8342	
    86b0:	b0 12 50 86 	call	#0x8650	
    86b4:	0f 93       	tst	r15		
    86b6:	04 24       	jz	$+10     	;abs 0x86c0
    86b8:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    86bc:	b0 12 42 83 	call	#0x8342	
    86c0:	34 41       	pop	r4		
    86c2:	30 41       	ret			

000086c4 <cc2500_configure>:
    86c4:	04 12       	push	r4		
    86c6:	04 41       	mov	r1,	r4	
    86c8:	24 53       	incd	r4		
    86ca:	21 83       	decd	r1		
    86cc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    86d0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86d4:	6f 4f       	mov.b	@r15,	r15	
    86d6:	4f 4f       	mov.b	r15,	r15	
    86d8:	0e 4f       	mov	r15,	r14	
    86da:	3f 40 0b 00 	mov	#11,	r15	;#0x000b
    86de:	b0 12 64 83 	call	#0x8364	
    86e2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86e6:	5f 4f 01 00 	mov.b	1(r15),	r15	;0x0001(r15)
    86ea:	4f 4f       	mov.b	r15,	r15	
    86ec:	0e 4f       	mov	r15,	r14	
    86ee:	3f 40 0c 00 	mov	#12,	r15	;#0x000c
    86f2:	b0 12 64 83 	call	#0x8364	
    86f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86fa:	5f 4f 02 00 	mov.b	2(r15),	r15	;0x0002(r15)
    86fe:	4f 4f       	mov.b	r15,	r15	
    8700:	0e 4f       	mov	r15,	r14	
    8702:	3f 40 0d 00 	mov	#13,	r15	;#0x000d
    8706:	b0 12 64 83 	call	#0x8364	
    870a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    870e:	5f 4f 03 00 	mov.b	3(r15),	r15	;0x0003(r15)
    8712:	4f 4f       	mov.b	r15,	r15	
    8714:	0e 4f       	mov	r15,	r14	
    8716:	3f 40 0e 00 	mov	#14,	r15	;#0x000e
    871a:	b0 12 64 83 	call	#0x8364	
    871e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8722:	5f 4f 04 00 	mov.b	4(r15),	r15	;0x0004(r15)
    8726:	4f 4f       	mov.b	r15,	r15	
    8728:	0e 4f       	mov	r15,	r14	
    872a:	3f 40 0f 00 	mov	#15,	r15	;#0x000f
    872e:	b0 12 64 83 	call	#0x8364	
    8732:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8736:	5f 4f 05 00 	mov.b	5(r15),	r15	;0x0005(r15)
    873a:	4f 4f       	mov.b	r15,	r15	
    873c:	0e 4f       	mov	r15,	r14	
    873e:	3f 40 10 00 	mov	#16,	r15	;#0x0010
    8742:	b0 12 64 83 	call	#0x8364	
    8746:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    874a:	5f 4f 06 00 	mov.b	6(r15),	r15	;0x0006(r15)
    874e:	4f 4f       	mov.b	r15,	r15	
    8750:	0e 4f       	mov	r15,	r14	
    8752:	3f 40 11 00 	mov	#17,	r15	;#0x0011
    8756:	b0 12 64 83 	call	#0x8364	
    875a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    875e:	5f 4f 07 00 	mov.b	7(r15),	r15	;0x0007(r15)
    8762:	4f 4f       	mov.b	r15,	r15	
    8764:	0e 4f       	mov	r15,	r14	
    8766:	3f 40 12 00 	mov	#18,	r15	;#0x0012
    876a:	b0 12 64 83 	call	#0x8364	
    876e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8772:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    8776:	4f 4f       	mov.b	r15,	r15	
    8778:	0e 4f       	mov	r15,	r14	
    877a:	3f 40 13 00 	mov	#19,	r15	;#0x0013
    877e:	b0 12 64 83 	call	#0x8364	
    8782:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8786:	5f 4f 09 00 	mov.b	9(r15),	r15	;0x0009(r15)
    878a:	4f 4f       	mov.b	r15,	r15	
    878c:	0e 4f       	mov	r15,	r14	
    878e:	3f 40 14 00 	mov	#20,	r15	;#0x0014
    8792:	b0 12 64 83 	call	#0x8364	
    8796:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    879a:	5f 4f 0a 00 	mov.b	10(r15),r15	;0x000a(r15)
    879e:	4f 4f       	mov.b	r15,	r15	
    87a0:	0e 4f       	mov	r15,	r14	
    87a2:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    87a6:	b0 12 64 83 	call	#0x8364	
    87aa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87ae:	5f 4f 0b 00 	mov.b	11(r15),r15	;0x000b(r15)
    87b2:	4f 4f       	mov.b	r15,	r15	
    87b4:	0e 4f       	mov	r15,	r14	
    87b6:	3f 40 15 00 	mov	#21,	r15	;#0x0015
    87ba:	b0 12 64 83 	call	#0x8364	
    87be:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87c2:	5f 4f 0c 00 	mov.b	12(r15),r15	;0x000c(r15)
    87c6:	4f 4f       	mov.b	r15,	r15	
    87c8:	0e 4f       	mov	r15,	r14	
    87ca:	3f 40 21 00 	mov	#33,	r15	;#0x0021
    87ce:	b0 12 64 83 	call	#0x8364	
    87d2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87d6:	5f 4f 0d 00 	mov.b	13(r15),r15	;0x000d(r15)
    87da:	4f 4f       	mov.b	r15,	r15	
    87dc:	0e 4f       	mov	r15,	r14	
    87de:	3f 40 22 00 	mov	#34,	r15	;#0x0022
    87e2:	b0 12 64 83 	call	#0x8364	
    87e6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87ea:	5f 4f 0e 00 	mov.b	14(r15),r15	;0x000e(r15)
    87ee:	4f 4f       	mov.b	r15,	r15	
    87f0:	0e 4f       	mov	r15,	r14	
    87f2:	3f 40 18 00 	mov	#24,	r15	;#0x0018
    87f6:	b0 12 64 83 	call	#0x8364	
    87fa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87fe:	5f 4f 0f 00 	mov.b	15(r15),r15	;0x000f(r15)
    8802:	4f 4f       	mov.b	r15,	r15	
    8804:	0e 4f       	mov	r15,	r14	
    8806:	3f 40 19 00 	mov	#25,	r15	;#0x0019
    880a:	b0 12 64 83 	call	#0x8364	
    880e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8812:	5f 4f 10 00 	mov.b	16(r15),r15	;0x0010(r15)
    8816:	4f 4f       	mov.b	r15,	r15	
    8818:	0e 4f       	mov	r15,	r14	
    881a:	3f 40 1a 00 	mov	#26,	r15	;#0x001a
    881e:	b0 12 64 83 	call	#0x8364	
    8822:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8826:	5f 4f 11 00 	mov.b	17(r15),r15	;0x0011(r15)
    882a:	4f 4f       	mov.b	r15,	r15	
    882c:	0e 4f       	mov	r15,	r14	
    882e:	3f 40 1b 00 	mov	#27,	r15	;#0x001b
    8832:	b0 12 64 83 	call	#0x8364	
    8836:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    883a:	5f 4f 12 00 	mov.b	18(r15),r15	;0x0012(r15)
    883e:	4f 4f       	mov.b	r15,	r15	
    8840:	0e 4f       	mov	r15,	r14	
    8842:	3f 40 1c 00 	mov	#28,	r15	;#0x001c
    8846:	b0 12 64 83 	call	#0x8364	
    884a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    884e:	5f 4f 13 00 	mov.b	19(r15),r15	;0x0013(r15)
    8852:	4f 4f       	mov.b	r15,	r15	
    8854:	0e 4f       	mov	r15,	r14	
    8856:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    885a:	b0 12 64 83 	call	#0x8364	
    885e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8862:	5f 4f 14 00 	mov.b	20(r15),r15	;0x0014(r15)
    8866:	4f 4f       	mov.b	r15,	r15	
    8868:	0e 4f       	mov	r15,	r14	
    886a:	3f 40 23 00 	mov	#35,	r15	;#0x0023
    886e:	b0 12 64 83 	call	#0x8364	
    8872:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8876:	5f 4f 15 00 	mov.b	21(r15),r15	;0x0015(r15)
    887a:	4f 4f       	mov.b	r15,	r15	
    887c:	0e 4f       	mov	r15,	r14	
    887e:	3f 40 24 00 	mov	#36,	r15	;#0x0024
    8882:	b0 12 64 83 	call	#0x8364	
    8886:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    888a:	5f 4f 16 00 	mov.b	22(r15),r15	;0x0016(r15)
    888e:	4f 4f       	mov.b	r15,	r15	
    8890:	0e 4f       	mov	r15,	r14	
    8892:	3f 40 25 00 	mov	#37,	r15	;#0x0025
    8896:	b0 12 64 83 	call	#0x8364	
    889a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    889e:	5f 4f 17 00 	mov.b	23(r15),r15	;0x0017(r15)
    88a2:	4f 4f       	mov.b	r15,	r15	
    88a4:	0e 4f       	mov	r15,	r14	
    88a6:	3f 40 26 00 	mov	#38,	r15	;#0x0026
    88aa:	b0 12 64 83 	call	#0x8364	
    88ae:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88b2:	5f 4f 18 00 	mov.b	24(r15),r15	;0x0018(r15)
    88b6:	4f 4f       	mov.b	r15,	r15	
    88b8:	0e 4f       	mov	r15,	r14	
    88ba:	3f 40 29 00 	mov	#41,	r15	;#0x0029
    88be:	b0 12 64 83 	call	#0x8364	
    88c2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88c6:	5f 4f 19 00 	mov.b	25(r15),r15	;0x0019(r15)
    88ca:	4f 4f       	mov.b	r15,	r15	
    88cc:	0e 4f       	mov	r15,	r14	
    88ce:	3f 40 2c 00 	mov	#44,	r15	;#0x002c
    88d2:	b0 12 64 83 	call	#0x8364	
    88d6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88da:	5f 4f 1a 00 	mov.b	26(r15),r15	;0x001a(r15)
    88de:	4f 4f       	mov.b	r15,	r15	
    88e0:	0e 4f       	mov	r15,	r14	
    88e2:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    88e6:	b0 12 64 83 	call	#0x8364	
    88ea:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88ee:	5f 4f 1b 00 	mov.b	27(r15),r15	;0x001b(r15)
    88f2:	4f 4f       	mov.b	r15,	r15	
    88f4:	0e 4f       	mov	r15,	r14	
    88f6:	3f 40 2e 00 	mov	#46,	r15	;#0x002e
    88fa:	b0 12 64 83 	call	#0x8364	
    88fe:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8902:	5f 4f 1c 00 	mov.b	28(r15),r15	;0x001c(r15)
    8906:	4f 4f       	mov.b	r15,	r15	
    8908:	0e 4f       	mov	r15,	r14	
    890a:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    890e:	b0 12 64 83 	call	#0x8364	
    8912:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8916:	5f 4f 1d 00 	mov.b	29(r15),r15	;0x001d(r15)
    891a:	4f 4f       	mov.b	r15,	r15	
    891c:	0e 4f       	mov	r15,	r14	
    891e:	0f 43       	clr	r15		
    8920:	b0 12 64 83 	call	#0x8364	
    8924:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8928:	5f 4f 1e 00 	mov.b	30(r15),r15	;0x001e(r15)
    892c:	4f 4f       	mov.b	r15,	r15	
    892e:	0e 4f       	mov	r15,	r14	
    8930:	2f 43       	mov	#2,	r15	;r3 As==10
    8932:	b0 12 64 83 	call	#0x8364	
    8936:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    893a:	5f 4f 1f 00 	mov.b	31(r15),r15	;0x001f(r15)
    893e:	4f 4f       	mov.b	r15,	r15	
    8940:	0e 4f       	mov	r15,	r14	
    8942:	3f 40 07 00 	mov	#7,	r15	;#0x0007
    8946:	b0 12 64 83 	call	#0x8364	
    894a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    894e:	5f 4f 20 00 	mov.b	32(r15),r15	;0x0020(r15)
    8952:	4f 4f       	mov.b	r15,	r15	
    8954:	0e 4f       	mov	r15,	r14	
    8956:	3f 42       	mov	#8,	r15	;r2 As==11
    8958:	b0 12 64 83 	call	#0x8364	
    895c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8960:	5f 4f 21 00 	mov.b	33(r15),r15	;0x0021(r15)
    8964:	4f 4f       	mov.b	r15,	r15	
    8966:	0e 4f       	mov	r15,	r14	
    8968:	3f 40 09 00 	mov	#9,	r15	;#0x0009
    896c:	b0 12 64 83 	call	#0x8364	
    8970:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8974:	5f 4f 22 00 	mov.b	34(r15),r15	;0x0022(r15)
    8978:	4f 4f       	mov.b	r15,	r15	
    897a:	0e 4f       	mov	r15,	r14	
    897c:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8980:	b0 12 64 83 	call	#0x8364	
    8984:	3e 40 fe 00 	mov	#254,	r14	;#0x00fe
    8988:	3f 40 3e 00 	mov	#62,	r15	;#0x003e
    898c:	b0 12 64 83 	call	#0x8364	
    8990:	7f 40 0f 00 	mov.b	#15,	r15	;#0x000f
    8994:	b0 12 dc 85 	call	#0x85dc	
    8998:	5f 43       	mov.b	#1,	r15	;r3 As==01
    899a:	b0 12 7c 85 	call	#0x857c	
    899e:	b0 12 20 82 	call	#0x8220	
    89a2:	b0 12 4c 82 	call	#0x824c	
    89a6:	7f 40 06 00 	mov.b	#6,	r15	;#0x0006
    89aa:	b0 12 ac 85 	call	#0x85ac	
    89ae:	b0 12 36 82 	call	#0x8236	
    89b2:	b0 12 62 82 	call	#0x8262	
    89b6:	21 53       	incd	r1		
    89b8:	34 41       	pop	r4		
    89ba:	30 41       	ret			

000089bc <cc2500_set_channel>:
    89bc:	04 12       	push	r4		
    89be:	04 41       	mov	r1,	r4	
    89c0:	24 53       	incd	r4		
    89c2:	21 83       	decd	r1		
    89c4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    89c8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    89cc:	0e 4f       	mov	r15,	r14	
    89ce:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    89d2:	b0 12 64 83 	call	#0x8364	
    89d6:	21 53       	incd	r1		
    89d8:	34 41       	pop	r4		
    89da:	30 41       	ret			

000089dc <cc2500_calibrate>:
    89dc:	04 12       	push	r4		
    89de:	04 41       	mov	r1,	r4	
    89e0:	24 53       	incd	r4		
    89e2:	b0 12 7c 8c 	call	#0x8c7c	
    89e6:	3f 40 33 00 	mov	#51,	r15	;#0x0033
    89ea:	b0 12 42 83 	call	#0x8342	
    89ee:	4f 43       	clr.b	r15		
    89f0:	b0 12 38 85 	call	#0x8538	
    89f4:	34 41       	pop	r4		
    89f6:	30 41       	ret			

000089f8 <cc2500_utx>:
    89f8:	04 12       	push	r4		
    89fa:	04 41       	mov	r1,	r4	
    89fc:	24 53       	incd	r4		
    89fe:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8a02:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8a06:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8a0a:	b0 12 7c 8c 	call	#0x8c7c	
    8a0e:	b0 12 62 82 	call	#0x8262	
    8a12:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8a16:	0e 4f       	mov	r15,	r14	
    8a18:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8a1c:	b0 12 fe 83 	call	#0x83fe	
    8a20:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8a24:	0d 4f       	mov	r15,	r13	
    8a26:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    8a2a:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8a2e:	b0 12 62 84 	call	#0x8462	
    8a32:	3f 40 35 00 	mov	#53,	r15	;#0x0035
    8a36:	b0 12 42 83 	call	#0x8342	
    8a3a:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    8a3e:	b0 12 c8 83 	call	#0x83c8	
    8a42:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8a46:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8a4a:	3f f0 7f 00 	and	#127,	r15	;#0x007f
    8a4e:	1f 93       	cmp	#1,	r15	;r3 As==01
    8a50:	f4 37       	jge	$-22     	;abs 0x8a3a
    8a52:	b0 12 8e 82 	call	#0x828e	
    8a56:	b0 12 a4 82 	call	#0x82a4	
    8a5a:	31 50 06 00 	add	#6,	r1	;#0x0006
    8a5e:	34 41       	pop	r4		
    8a60:	30 41       	ret			

00008a62 <cc2500_rx_register_buffer>:
    8a62:	04 12       	push	r4		
    8a64:	04 41       	mov	r1,	r4	
    8a66:	24 53       	incd	r4		
    8a68:	21 82       	sub	#4,	r1	;r2 As==10
    8a6a:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8a6e:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8a72:	92 44 fa ff 	mov	-6(r4),	&0x023c	;0xfffa(r4)
    8a76:	3c 02 
    8a78:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    8a7c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8a80:	0e 4f       	mov	r15,	r14	
    8a82:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8a86:	b0 12 64 83 	call	#0x8364	
    8a8a:	21 52       	add	#4,	r1	;r2 As==10
    8a8c:	34 41       	pop	r4		
    8a8e:	30 41       	ret			

00008a90 <cc2500_rx_enter>:
    8a90:	04 12       	push	r4		
    8a92:	04 41       	mov	r1,	r4	
    8a94:	24 53       	incd	r4		
    8a96:	b0 12 7c 8c 	call	#0x8c7c	
    8a9a:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    8a9e:	b0 12 8e 82 	call	#0x828e	
    8aa2:	b0 12 a4 82 	call	#0x82a4	
    8aa6:	b0 12 78 82 	call	#0x8278	
    8aaa:	b0 12 62 82 	call	#0x8262	
    8aae:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8ab2:	b0 12 42 83 	call	#0x8342	
    8ab6:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8ab8:	b0 12 38 85 	call	#0x8538	
    8abc:	34 41       	pop	r4		
    8abe:	30 41       	ret			

00008ac0 <cc2500_rx_pkt_eop>:
    8ac0:	0b 12       	push	r11		
    8ac2:	04 12       	push	r4		
    8ac4:	04 41       	mov	r1,	r4	
    8ac6:	24 52       	add	#4,	r4	;r2 As==10
    8ac8:	31 50 f6 ff 	add	#-10,	r1	;#0xfff6
    8acc:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8ad0:	b0 12 c8 83 	call	#0x83c8	
    8ad4:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8ad8:	d4 44 f2 ff 	mov.b	-14(r4),-10(r4)	;0xfff2(r4), 0xfff6(r4)
    8adc:	f6 ff 
    8ade:	c4 43 f7 ff 	mov.b	#0,	-9(r4)	;r3 As==00, 0xfff7(r4)
    8ae2:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8ae6:	b0 12 c8 83 	call	#0x83c8	
    8aea:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8aee:	e4 93 f2 ff 	cmp.b	#2,	-14(r4)	;r3 As==10, 0xfff2(r4)
    8af2:	05 2c       	jc	$+12     	;abs 0x8afe
    8af4:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8af8:	1f 94 f6 ff 	cmp	-10(r4),r15	;0xfff6(r4)
    8afc:	ed 23       	jnz	$-36     	;abs 0x8ad8
    8afe:	c4 93 f2 ff 	tst.b	-14(r4)	;0xfff2(r4)
    8b02:	68 24       	jz	$+210    	;abs 0x8bd4
    8b04:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8b08:	4f 93       	tst.b	r15		
    8b0a:	59 38       	jl	$+180    	;abs 0x8bbe
    8b0c:	b0 12 1a 85 	call	#0x851a	
    8b10:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8b14:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8b18:	0e 4f       	mov	r15,	r14	
    8b1a:	3e 53       	add	#-1,	r14	;r3 As==11
    8b1c:	1f 42 3c 02 	mov	&0x023c,r15	
    8b20:	0d 4e       	mov	r14,	r13	
    8b22:	0e 4f       	mov	r15,	r14	
    8b24:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8b28:	b0 12 b8 84 	call	#0x84b8	
    8b2c:	1e 42 3c 02 	mov	&0x023c,r14	
    8b30:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8b34:	0f 5e       	add	r14,	r15	
    8b36:	6f 4f       	mov.b	@r15,	r15	
    8b38:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8b3c:	c4 43 fb ff 	mov.b	#0,	-5(r4)	;r3 As==00, 0xfffb(r4)
    8b40:	b4 90 80 00 	cmp	#128,	-6(r4)	;#0x0080, 0xfffa(r4)
    8b44:	fa ff 
    8b46:	0e 38       	jl	$+30     	;abs 0x8b64
    8b48:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8b4c:	3f 50 00 ff 	add	#-256,	r15	;#0xff00
    8b50:	0f 93       	tst	r15		
    8b52:	01 34       	jge	$+4      	;abs 0x8b56
    8b54:	1f 53       	inc	r15		
    8b56:	0f 11       	rra	r15		
    8b58:	0e 4f       	mov	r15,	r14	
    8b5a:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8b5e:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8b62:	0b 3c       	jmp	$+24     	;abs 0x8b7a
    8b64:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8b68:	0f 93       	tst	r15		
    8b6a:	01 34       	jge	$+4      	;abs 0x8b6e
    8b6c:	1f 53       	inc	r15		
    8b6e:	0f 11       	rra	r15		
    8b70:	0e 4f       	mov	r15,	r14	
    8b72:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8b76:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8b7a:	1e 42 3c 02 	mov	&0x023c,r14	
    8b7e:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8b82:	1f 53       	inc	r15		
    8b84:	0f 5e       	add	r14,	r15	
    8b86:	6f 4f       	mov.b	@r15,	r15	
    8b88:	4f 93       	tst.b	r15		
    8b8a:	0e 34       	jge	$+30     	;abs 0x8ba8
    8b8c:	1c 42 38 02 	mov	&0x0238,r12	
    8b90:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8b94:	4e 4f       	mov.b	r15,	r14	
    8b96:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8b9a:	1b 42 3c 02 	mov	&0x023c,r11	
    8b9e:	4d 4e       	mov.b	r14,	r13	
    8ba0:	0e 4f       	mov	r15,	r14	
    8ba2:	0f 4b       	mov	r11,	r15	
    8ba4:	8c 12       	call	r12		
    8ba6:	1f 3c       	jmp	$+64     	;abs 0x8be6
    8ba8:	b0 12 9a 86 	call	#0x869a	
    8bac:	1c 42 38 02 	mov	&0x0238,r12	
    8bb0:	1f 42 3c 02 	mov	&0x023c,r15	
    8bb4:	4d 43       	clr.b	r13		
    8bb6:	3e 40 fd ff 	mov	#-3,	r14	;#0xfffd
    8bba:	8c 12       	call	r12		
    8bbc:	14 3c       	jmp	$+42     	;abs 0x8be6
    8bbe:	b0 12 9a 86 	call	#0x869a	
    8bc2:	1c 42 38 02 	mov	&0x0238,r12	
    8bc6:	1f 42 3c 02 	mov	&0x023c,r15	
    8bca:	4d 43       	clr.b	r13		
    8bcc:	3e 40 fe ff 	mov	#-2,	r14	;#0xfffe
    8bd0:	8c 12       	call	r12		
    8bd2:	09 3c       	jmp	$+20     	;abs 0x8be6
    8bd4:	b0 12 9a 86 	call	#0x869a	
    8bd8:	1c 42 38 02 	mov	&0x0238,r12	
    8bdc:	1f 42 3c 02 	mov	&0x023c,r15	
    8be0:	4d 43       	clr.b	r13		
    8be2:	3e 43       	mov	#-1,	r14	;r3 As==11
    8be4:	8c 12       	call	r12		
    8be6:	b0 12 8e 82 	call	#0x828e	
    8bea:	b0 12 a4 82 	call	#0x82a4	
    8bee:	31 50 0a 00 	add	#10,	r1	;#0x000a
    8bf2:	34 41       	pop	r4		
    8bf4:	3b 41       	pop	r11		
    8bf6:	30 41       	ret			

00008bf8 <cc2500_rx_register_cb>:
    8bf8:	04 12       	push	r4		
    8bfa:	04 41       	mov	r1,	r4	
    8bfc:	24 53       	incd	r4		
    8bfe:	21 83       	decd	r1		
    8c00:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8c04:	92 44 fc ff 	mov	-4(r4),	&0x0238	;0xfffc(r4)
    8c08:	38 02 
    8c0a:	21 53       	incd	r1		
    8c0c:	34 41       	pop	r4		
    8c0e:	30 41       	ret			

00008c10 <cc2500_packet_status>:
    8c10:	04 12       	push	r4		
    8c12:	04 41       	mov	r1,	r4	
    8c14:	24 53       	incd	r4		
    8c16:	21 83       	decd	r1		
    8c18:	3f 40 38 00 	mov	#56,	r15	;#0x0038
    8c1c:	b0 12 c8 83 	call	#0x83c8	
    8c20:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8c24:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8c28:	21 53       	incd	r1		
    8c2a:	34 41       	pop	r4		
    8c2c:	30 41       	ret			

00008c2e <cc2500_cca>:
    8c2e:	04 12       	push	r4		
    8c30:	04 41       	mov	r1,	r4	
    8c32:	24 53       	incd	r4		
    8c34:	21 83       	decd	r1		
    8c36:	b0 12 10 8c 	call	#0x8c10	
    8c3a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8c3e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8c42:	4f 4f       	mov.b	r15,	r15	
    8c44:	12 c3       	clrc			
    8c46:	4f 10       	rrc.b	r15		
    8c48:	12 c3       	clrc			
    8c4a:	4f 10       	rrc.b	r15		
    8c4c:	12 c3       	clrc			
    8c4e:	4f 10       	rrc.b	r15		
    8c50:	12 c3       	clrc			
    8c52:	4f 10       	rrc.b	r15		
    8c54:	4f 4f       	mov.b	r15,	r15	
    8c56:	1f f3       	and	#1,	r15	;r3 As==01
    8c58:	21 53       	incd	r1		
    8c5a:	34 41       	pop	r4		
    8c5c:	30 41       	ret			

00008c5e <cc2500_get_rssi>:
    8c5e:	04 12       	push	r4		
    8c60:	04 41       	mov	r1,	r4	
    8c62:	24 53       	incd	r4		
    8c64:	21 83       	decd	r1		
    8c66:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8c6a:	b0 12 c8 83 	call	#0x83c8	
    8c6e:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8c72:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8c76:	21 53       	incd	r1		
    8c78:	34 41       	pop	r4		
    8c7a:	30 41       	ret			

00008c7c <cc2500_idle>:
    8c7c:	04 12       	push	r4		
    8c7e:	04 41       	mov	r1,	r4	
    8c80:	24 53       	incd	r4		
    8c82:	b0 12 4c 82 	call	#0x824c	
    8c86:	b0 12 62 82 	call	#0x8262	
    8c8a:	b0 12 9a 86 	call	#0x869a	
    8c8e:	3f 40 36 00 	mov	#54,	r15	;#0x0036
    8c92:	b0 12 42 83 	call	#0x8342	
    8c96:	4f 43       	clr.b	r15		
    8c98:	b0 12 38 85 	call	#0x8538	
    8c9c:	34 41       	pop	r4		
    8c9e:	30 41       	ret			

00008ca0 <cc2500_sleep>:
    8ca0:	04 12       	push	r4		
    8ca2:	04 41       	mov	r1,	r4	
    8ca4:	24 53       	incd	r4		
    8ca6:	3f 40 39 00 	mov	#57,	r15	;#0x0039
    8caa:	b0 12 42 83 	call	#0x8342	
    8cae:	34 41       	pop	r4		
    8cb0:	30 41       	ret			

00008cb2 <cc2500_reset>:
    8cb2:	04 12       	push	r4		
    8cb4:	04 41       	mov	r1,	r4	
    8cb6:	24 53       	incd	r4		
    8cb8:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8cbc:	b0 12 42 83 	call	#0x8342	
    8cc0:	4f 43       	clr.b	r15		
    8cc2:	b0 12 38 85 	call	#0x8538	
    8cc6:	34 41       	pop	r4		
    8cc8:	30 41       	ret			

00008cca <cc2500_wakeup>:
    8cca:	04 12       	push	r4		
    8ccc:	04 41       	mov	r1,	r4	
    8cce:	24 53       	incd	r4		
    8cd0:	b0 12 ee 93 	call	#0x93ee	
    8cd4:	03 43       	nop			
    8cd6:	b0 12 44 93 	call	#0x9344	
    8cda:	0f 93       	tst	r15		
    8cdc:	fc 23       	jnz	$-6      	;abs 0x8cd6
    8cde:	b0 12 04 94 	call	#0x9404	
    8ce2:	b0 12 7c 8c 	call	#0x8c7c	
    8ce6:	4f 43       	clr.b	r15		
    8ce8:	b0 12 38 85 	call	#0x8538	
    8cec:	34 41       	pop	r4		
    8cee:	30 41       	ret			

00008cf0 <cc2500_variables_bootstrap>:
    8cf0:	04 12       	push	r4		
    8cf2:	04 41       	mov	r1,	r4	
    8cf4:	24 53       	incd	r4		
    8cf6:	c2 43 3e 02 	mov.b	#0,	&0x023e	;r3 As==00
    8cfa:	82 43 3c 02 	mov	#0,	&0x023c	;r3 As==00
    8cfe:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    8d02:	c2 43 26 02 	mov.b	#0,	&0x0226	;r3 As==00
    8d06:	34 41       	pop	r4		
    8d08:	30 41       	ret			

00008d0a <CC_ASSERT>:
    8d0a:	04 12       	push	r4		
    8d0c:	04 41       	mov	r1,	r4	
    8d0e:	24 53       	incd	r4		
    8d10:	21 83       	decd	r1		
    8d12:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8d16:	21 53       	incd	r1		
    8d18:	34 41       	pop	r4		
    8d1a:	30 41       	ret			

00008d1c <cc2500_init>:
    8d1c:	04 12       	push	r4		
    8d1e:	04 41       	mov	r1,	r4	
    8d20:	24 53       	incd	r4		
    8d22:	21 83       	decd	r1		
    8d24:	b0 12 f0 8c 	call	#0x8cf0	
    8d28:	b0 12 d0 82 	call	#0x82d0	
    8d2c:	b0 12 ba 82 	call	#0x82ba	
    8d30:	b0 12 ee 93 	call	#0x93ee	
    8d34:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8d38:	b0 12 8c 90 	call	#0x908c	
    8d3c:	b0 12 04 94 	call	#0x9404	
    8d40:	3f 40 28 00 	mov	#40,	r15	;#0x0028
    8d44:	b0 12 8c 90 	call	#0x908c	
    8d48:	b0 12 ee 93 	call	#0x93ee	
    8d4c:	03 43       	nop			
    8d4e:	b0 12 44 93 	call	#0x9344	
    8d52:	0f 93       	tst	r15		
    8d54:	fc 23       	jnz	$-6      	;abs 0x8d4e
    8d56:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8d5a:	b0 12 0a 93 	call	#0x930a	
    8d5e:	03 43       	nop			
    8d60:	b0 12 44 93 	call	#0x9344	
    8d64:	0f 93       	tst	r15		
    8d66:	fc 23       	jnz	$-6      	;abs 0x8d60
    8d68:	b0 12 04 94 	call	#0x9404	
    8d6c:	3e 40 a5 00 	mov	#165,	r14	;#0x00a5
    8d70:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8d74:	b0 12 64 83 	call	#0x8364	
    8d78:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8d7c:	b0 12 92 83 	call	#0x8392	
    8d80:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8d84:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8d88:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8d8c:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8d90:	1f 43       	mov	#1,	r15	;r3 As==01
    8d92:	3e 90 a5 00 	cmp	#165,	r14	;#0x00a5
    8d96:	01 24       	jz	$+4      	;abs 0x8d9a
    8d98:	0f 43       	clr	r15		
    8d9a:	b0 12 0a 8d 	call	#0x8d0a	
    8d9e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8da2:	b0 12 c8 83 	call	#0x83c8	
    8da6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8daa:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8dae:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8db2:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8db6:	1f 43       	mov	#1,	r15	;r3 As==01
    8db8:	3e 90 80 00 	cmp	#128,	r14	;#0x0080
    8dbc:	01 24       	jz	$+4      	;abs 0x8dc0
    8dbe:	0f 43       	clr	r15		
    8dc0:	b0 12 0a 8d 	call	#0x8d0a	
    8dc4:	3f 40 31 00 	mov	#49,	r15	;#0x0031
    8dc8:	b0 12 c8 83 	call	#0x83c8	
    8dcc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8dd0:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8dd4:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8dd8:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8ddc:	1f 43       	mov	#1,	r15	;r3 As==01
    8dde:	3e 90 03 00 	cmp	#3,	r14	;#0x0003
    8de2:	01 2c       	jc	$+4      	;abs 0x8de6
    8de4:	0f 43       	clr	r15		
    8de6:	b0 12 0a 8d 	call	#0x8d0a	
    8dea:	3f 40 c4 a2 	mov	#-23868,r15	;#0xa2c4
    8dee:	b0 12 c4 86 	call	#0x86c4	
    8df2:	21 53       	incd	r1		
    8df4:	34 41       	pop	r4		
    8df6:	30 41       	ret			

00008df8 <cc2500_gdox_signal_handler>:
    8df8:	04 12       	push	r4		
    8dfa:	04 41       	mov	r1,	r4	
    8dfc:	24 53       	incd	r4		
    8dfe:	21 83       	decd	r1		
    8e00:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8e04:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8e08:	1f f3       	and	#1,	r15	;r3 As==01
    8e0a:	4f 4f       	mov.b	r15,	r15	
    8e0c:	4f 93       	tst.b	r15		
    8e0e:	02 24       	jz	$+6      	;abs 0x8e14
    8e10:	b0 12 c0 8a 	call	#0x8ac0	
    8e14:	21 53       	incd	r1		
    8e16:	34 41       	pop	r4		
    8e18:	30 41       	ret			

00008e1a <port2_irq_handler>:
    8e1a:	0f 12       	push	r15		
    8e1c:	0e 12       	push	r14		
    8e1e:	0d 12       	push	r13		
    8e20:	0c 12       	push	r12		
    8e22:	04 12       	push	r4		
    8e24:	04 41       	mov	r1,	r4	
    8e26:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8e2a:	21 83       	decd	r1		
    8e2c:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    8e30:	c4 43 f5 ff 	mov.b	#0,	-11(r4)	;r3 As==00, 0xfff5(r4)
    8e34:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8e38:	4f 4f       	mov.b	r15,	r15	
    8e3a:	5e 42 2d 00 	mov.b	&0x002d,r14	
    8e3e:	4e 4e       	mov.b	r14,	r14	
    8e40:	3e f0 40 00 	and	#64,	r14	;#0x0040
    8e44:	0f fe       	and	r14,	r15	
    8e46:	0f 93       	tst	r15		
    8e48:	0a 24       	jz	$+22     	;abs 0x8e5e
    8e4a:	d4 d3 f4 ff 	bis.b	#1,	-12(r4)	;r3 As==01, 0xfff4(r4)
    8e4e:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    8e52:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8e56:	7f f0 40 00 	and.b	#64,	r15	;#0x0040
    8e5a:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8e5e:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8e62:	4f 4f       	mov.b	r15,	r15	
    8e64:	5e 42 2d 00 	mov.b	&0x002d,r14	
    8e68:	4e 4e       	mov.b	r14,	r14	
    8e6a:	3e f0 80 00 	and	#128,	r14	;#0x0080
    8e6e:	0f fe       	and	r14,	r15	
    8e70:	0f 93       	tst	r15		
    8e72:	0a 24       	jz	$+22     	;abs 0x8e88
    8e74:	e4 d3 f4 ff 	bis.b	#2,	-12(r4)	;r3 As==10, 0xfff4(r4)
    8e78:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    8e7c:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8e80:	7f f0 80 ff 	and.b	#-128,	r15	;#0xff80
    8e84:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8e88:	c4 93 f4 ff 	tst.b	-12(r4)	;0xfff4(r4)
    8e8c:	04 24       	jz	$+10     	;abs 0x8e96
    8e8e:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    8e92:	b0 12 f8 8d 	call	#0x8df8	
    8e96:	c4 93 f5 ff 	tst.b	-11(r4)	;0xfff5(r4)
    8e9a:	03 24       	jz	$+8      	;abs 0x8ea2
    8e9c:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    8ea0:	00 00 
    8ea2:	c2 43 2b 00 	mov.b	#0,	&0x002b	;r3 As==00
    8ea6:	21 53       	incd	r1		
    8ea8:	34 41       	pop	r4		
    8eaa:	3c 41       	pop	r12		
    8eac:	3d 41       	pop	r13		
    8eae:	3e 41       	pop	r14		
    8eb0:	3f 41       	pop	r15		
    8eb2:	00 13       	reti			

00008eb4 <get_mclk_freq_mhz>:
    8eb4:	04 12       	push	r4		
    8eb6:	04 41       	mov	r1,	r4	
    8eb8:	24 53       	incd	r4		
    8eba:	1f 42 28 02 	mov	&0x0228,r15	
    8ebe:	34 41       	pop	r4		
    8ec0:	30 41       	ret			

00008ec2 <set_mcu_speed>:
    8ec2:	04 12       	push	r4		
    8ec4:	04 41       	mov	r1,	r4	
    8ec6:	24 53       	incd	r4		
    8ec8:	21 83       	decd	r1		
    8eca:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8ece:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    8ed2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8ed6:	3f 92       	cmp	#8,	r15	;r2 As==11
    8ed8:	16 24       	jz	$+46     	;abs 0x8f06
    8eda:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    8ede:	03 34       	jge	$+8      	;abs 0x8ee6
    8ee0:	1f 93       	cmp	#1,	r15	;r3 As==01
    8ee2:	08 24       	jz	$+18     	;abs 0x8ef4
    8ee4:	2b 3c       	jmp	$+88     	;abs 0x8f3c
    8ee6:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8eea:	16 24       	jz	$+46     	;abs 0x8f18
    8eec:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8ef0:	1c 24       	jz	$+58     	;abs 0x8f2a
    8ef2:	24 3c       	jmp	$+74     	;abs 0x8f3c
    8ef4:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    8ef8:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8efc:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    8f00:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8f04:	1b 3c       	jmp	$+56     	;abs 0x8f3c
    8f06:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    8f0a:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8f0e:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    8f12:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8f16:	12 3c       	jmp	$+38     	;abs 0x8f3c
    8f18:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    8f1c:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8f20:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    8f24:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8f28:	09 3c       	jmp	$+20     	;abs 0x8f3c
    8f2a:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    8f2e:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8f32:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    8f36:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8f3a:	03 43       	nop			
    8f3c:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    8f40:	2f 93       	cmp	#2,	r15	;r3 As==10
    8f42:	0e 24       	jz	$+30     	;abs 0x8f60
    8f44:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    8f48:	03 34       	jge	$+8      	;abs 0x8f50
    8f4a:	1f 93       	cmp	#1,	r15	;r3 As==01
    8f4c:	06 24       	jz	$+14     	;abs 0x8f5a
    8f4e:	12 3c       	jmp	$+38     	;abs 0x8f74
    8f50:	2f 92       	cmp	#4,	r15	;r2 As==10
    8f52:	09 24       	jz	$+20     	;abs 0x8f66
    8f54:	3f 92       	cmp	#8,	r15	;r2 As==11
    8f56:	0a 24       	jz	$+22     	;abs 0x8f6c
    8f58:	0d 3c       	jmp	$+28     	;abs 0x8f74
    8f5a:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    8f5e:	0a 3c       	jmp	$+22     	;abs 0x8f74
    8f60:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    8f64:	07 3c       	jmp	$+16     	;abs 0x8f74
    8f66:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    8f6a:	04 3c       	jmp	$+10     	;abs 0x8f74
    8f6c:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    8f70:	58 00 
    8f72:	03 43       	nop			
    8f74:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8f78:	82 4f 28 02 	mov	r15,	&0x0228	
    8f7c:	21 53       	incd	r1		
    8f7e:	34 41       	pop	r4		
    8f80:	30 41       	ret			

00008f82 <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    8f82:	04 12       	push	r4		
    8f84:	04 41       	mov	r1,	r4	
    8f86:	24 53       	incd	r4		
    8f88:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8f8a:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8f8c:	b0 12 c2 8e 	call	#0x8ec2	
    8f90:	34 41       	pop	r4		
    8f92:	30 41       	ret			

00008f94 <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    8f94:	04 12       	push	r4		
    8f96:	04 41       	mov	r1,	r4	
    8f98:	24 53       	incd	r4		
    8f9a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8f9c:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8f9e:	b0 12 c2 8e 	call	#0x8ec2	
    8fa2:	34 41       	pop	r4		
    8fa4:	30 41       	ret			

00008fa6 <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    8fa6:	04 12       	push	r4		
    8fa8:	04 41       	mov	r1,	r4	
    8faa:	24 53       	incd	r4		
    8fac:	6e 43       	mov.b	#2,	r14	;r3 As==10
    8fae:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8fb0:	b0 12 c2 8e 	call	#0x8ec2	
    8fb4:	34 41       	pop	r4		
    8fb6:	30 41       	ret			

00008fb8 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    8fb8:	04 12       	push	r4		
    8fba:	04 41       	mov	r1,	r4	
    8fbc:	24 53       	incd	r4		
    8fbe:	6e 42       	mov.b	#4,	r14	;r2 As==10
    8fc0:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8fc2:	b0 12 c2 8e 	call	#0x8ec2	
    8fc6:	34 41       	pop	r4		
    8fc8:	30 41       	ret			

00008fca <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    8fca:	04 12       	push	r4		
    8fcc:	04 41       	mov	r1,	r4	
    8fce:	24 53       	incd	r4		
    8fd0:	7e 42       	mov.b	#8,	r14	;r2 As==11
    8fd2:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8fd4:	b0 12 c2 8e 	call	#0x8ec2	
    8fd8:	34 41       	pop	r4		
    8fda:	30 41       	ret			

00008fdc <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    8fdc:	04 12       	push	r4		
    8fde:	04 41       	mov	r1,	r4	
    8fe0:	24 53       	incd	r4		
    8fe2:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8fe4:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    8fe8:	b0 12 c2 8e 	call	#0x8ec2	
    8fec:	34 41       	pop	r4		
    8fee:	30 41       	ret			

00008ff0 <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    8ff0:	04 12       	push	r4		
    8ff2:	04 41       	mov	r1,	r4	
    8ff4:	24 53       	incd	r4		
    8ff6:	6e 43       	mov.b	#2,	r14	;r3 As==10
    8ff8:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    8ffc:	b0 12 c2 8e 	call	#0x8ec2	
    9000:	34 41       	pop	r4		
    9002:	30 41       	ret			

00009004 <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    9004:	04 12       	push	r4		
    9006:	04 41       	mov	r1,	r4	
    9008:	24 53       	incd	r4		
    900a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    900c:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    9010:	b0 12 c2 8e 	call	#0x8ec2	
    9014:	34 41       	pop	r4		
    9016:	30 41       	ret			

00009018 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    9018:	04 12       	push	r4		
    901a:	04 41       	mov	r1,	r4	
    901c:	24 53       	incd	r4		
    901e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    9020:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    9024:	b0 12 c2 8e 	call	#0x8ec2	
    9028:	34 41       	pop	r4		
    902a:	30 41       	ret			

0000902c <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    902c:	04 12       	push	r4		
    902e:	04 41       	mov	r1,	r4	
    9030:	24 53       	incd	r4		
    9032:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9034:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    9038:	b0 12 c2 8e 	call	#0x8ec2	
    903c:	34 41       	pop	r4		
    903e:	30 41       	ret			

00009040 <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    9040:	04 12       	push	r4		
    9042:	04 41       	mov	r1,	r4	
    9044:	24 53       	incd	r4		
    9046:	6e 43       	mov.b	#2,	r14	;r3 As==10
    9048:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    904c:	b0 12 c2 8e 	call	#0x8ec2	
    9050:	34 41       	pop	r4		
    9052:	30 41       	ret			

00009054 <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    9054:	04 12       	push	r4		
    9056:	04 41       	mov	r1,	r4	
    9058:	24 53       	incd	r4		
    905a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    905c:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    9060:	b0 12 c2 8e 	call	#0x8ec2	
    9064:	34 41       	pop	r4		
    9066:	30 41       	ret			

00009068 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    9068:	04 12       	push	r4		
    906a:	04 41       	mov	r1,	r4	
    906c:	24 53       	incd	r4		
    906e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    9070:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    9074:	b0 12 c2 8e 	call	#0x8ec2	
    9078:	34 41       	pop	r4		
    907a:	30 41       	ret			

0000907c <loop_4_cycles>:
    907c:	04 12       	push	r4		
    907e:	04 41       	mov	r1,	r4	
    9080:	24 53       	incd	r4		
    9082:	3e 53       	add	#-1,	r14	;r3 As==11
    9084:	3f 63       	addc	#-1,	r15	;r3 As==11
    9086:	fd 2f       	jc	$-4      	;abs 0x9082
    9088:	34 41       	pop	r4		
    908a:	30 41       	ret			

0000908c <delay_usec>:
    908c:	04 12       	push	r4		
    908e:	04 41       	mov	r1,	r4	
    9090:	24 53       	incd	r4		
    9092:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    9096:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    909a:	1f 42 28 02 	mov	&0x0228,r15	
    909e:	3f 92       	cmp	#8,	r15	;r2 As==11
    90a0:	18 24       	jz	$+50     	;abs 0x90d2
    90a2:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    90a6:	03 2c       	jc	$+8      	;abs 0x90ae
    90a8:	1f 93       	cmp	#1,	r15	;r3 As==01
    90aa:	08 24       	jz	$+18     	;abs 0x90bc
    90ac:	2d 3c       	jmp	$+92     	;abs 0x9108
    90ae:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    90b2:	17 24       	jz	$+48     	;abs 0x90e2
    90b4:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    90b8:	1e 24       	jz	$+62     	;abs 0x90f6
    90ba:	26 3c       	jmp	$+78     	;abs 0x9108
    90bc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    90c0:	12 c3       	clrc			
    90c2:	0f 10       	rrc	r15		
    90c4:	12 c3       	clrc			
    90c6:	0f 10       	rrc	r15		
    90c8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    90cc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    90d0:	26 3c       	jmp	$+78     	;abs 0x911e
    90d2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    90d6:	0f 5f       	rla	r15		
    90d8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    90dc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    90e0:	1e 3c       	jmp	$+62     	;abs 0x911e
    90e2:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    90e6:	0f 4e       	mov	r14,	r15	
    90e8:	0f 5f       	rla	r15		
    90ea:	0f 5e       	add	r14,	r15	
    90ec:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    90f0:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    90f4:	14 3c       	jmp	$+42     	;abs 0x911e
    90f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    90fa:	0f 5f       	rla	r15		
    90fc:	0f 5f       	rla	r15		
    90fe:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9102:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9106:	0b 3c       	jmp	$+24     	;abs 0x911e
    9108:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    910c:	12 c3       	clrc			
    910e:	0f 10       	rrc	r15		
    9110:	12 c3       	clrc			
    9112:	0f 10       	rrc	r15		
    9114:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9118:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    911c:	03 43       	nop			
    911e:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    9122:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    9126:	b0 12 7c 90 	call	#0x907c	
    912a:	31 50 06 00 	add	#6,	r1	;#0x0006
    912e:	34 41       	pop	r4		
    9130:	30 41       	ret			

00009132 <delay_ms>:
    9132:	04 12       	push	r4		
    9134:	04 41       	mov	r1,	r4	
    9136:	24 53       	incd	r4		
    9138:	31 82       	sub	#8,	r1	;r2 As==11
    913a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    913e:	1f 42 28 02 	mov	&0x0228,r15	
    9142:	3f 92       	cmp	#8,	r15	;r2 As==11
    9144:	13 24       	jz	$+40     	;abs 0x916c
    9146:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    914a:	03 2c       	jc	$+8      	;abs 0x9152
    914c:	1f 93       	cmp	#1,	r15	;r3 As==01
    914e:	08 24       	jz	$+18     	;abs 0x9160
    9150:	1f 3c       	jmp	$+64     	;abs 0x9190
    9152:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    9156:	10 24       	jz	$+34     	;abs 0x9178
    9158:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    915c:	13 24       	jz	$+40     	;abs 0x9184
    915e:	18 3c       	jmp	$+50     	;abs 0x9190
    9160:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    9164:	f8 ff 
    9166:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    916a:	18 3c       	jmp	$+50     	;abs 0x919c
    916c:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    9170:	f8 ff 
    9172:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9176:	12 3c       	jmp	$+38     	;abs 0x919c
    9178:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    917c:	f8 ff 
    917e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9182:	0c 3c       	jmp	$+26     	;abs 0x919c
    9184:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    9188:	f8 ff 
    918a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    918e:	06 3c       	jmp	$+14     	;abs 0x919c
    9190:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    9194:	f8 ff 
    9196:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    919a:	03 43       	nop			
    919c:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    91a0:	08 3c       	jmp	$+18     	;abs 0x91b2
    91a2:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    91a6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    91aa:	b0 12 7c 90 	call	#0x907c	
    91ae:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    91b2:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    91b6:	f6 ff 
    91b8:	f4 2b       	jnc	$-22     	;abs 0x91a2
    91ba:	31 52       	add	#8,	r1	;r2 As==11
    91bc:	34 41       	pop	r4		
    91be:	30 41       	ret			

000091c0 <led_green_off>:
    91c0:	04 12       	push	r4		
    91c2:	04 41       	mov	r1,	r4	
    91c4:	24 53       	incd	r4		
    91c6:	5f 42 21 00 	mov.b	&0x0021,r15	
    91ca:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    91ce:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    91d2:	34 41       	pop	r4		
    91d4:	30 41       	ret			

000091d6 <led_green_on>:
    91d6:	04 12       	push	r4		
    91d8:	04 41       	mov	r1,	r4	
    91da:	24 53       	incd	r4		
    91dc:	5f 42 21 00 	mov.b	&0x0021,r15	
    91e0:	6f d3       	bis.b	#2,	r15	;r3 As==10
    91e2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    91e6:	34 41       	pop	r4		
    91e8:	30 41       	ret			

000091ea <led_green_switch>:
    91ea:	04 12       	push	r4		
    91ec:	04 41       	mov	r1,	r4	
    91ee:	24 53       	incd	r4		
    91f0:	5f 42 21 00 	mov.b	&0x0021,r15	
    91f4:	6f e3       	xor.b	#2,	r15	;r3 As==10
    91f6:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    91fa:	34 41       	pop	r4		
    91fc:	30 41       	ret			

000091fe <led_red_off>:
    91fe:	04 12       	push	r4		
    9200:	04 41       	mov	r1,	r4	
    9202:	24 53       	incd	r4		
    9204:	5f 42 21 00 	mov.b	&0x0021,r15	
    9208:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    920c:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9210:	34 41       	pop	r4		
    9212:	30 41       	ret			

00009214 <led_red_on>:
    9214:	04 12       	push	r4		
    9216:	04 41       	mov	r1,	r4	
    9218:	24 53       	incd	r4		
    921a:	5f 42 21 00 	mov.b	&0x0021,r15	
    921e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9220:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9224:	34 41       	pop	r4		
    9226:	30 41       	ret			

00009228 <led_red_switch>:
    9228:	04 12       	push	r4		
    922a:	04 41       	mov	r1,	r4	
    922c:	24 53       	incd	r4		
    922e:	5f 42 21 00 	mov.b	&0x0021,r15	
    9232:	5f e3       	xor.b	#1,	r15	;r3 As==01
    9234:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9238:	34 41       	pop	r4		
    923a:	30 41       	ret			

0000923c <leds_off>:
    923c:	04 12       	push	r4		
    923e:	04 41       	mov	r1,	r4	
    9240:	24 53       	incd	r4		
    9242:	5f 42 21 00 	mov.b	&0x0021,r15	
    9246:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    924a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    924e:	34 41       	pop	r4		
    9250:	30 41       	ret			

00009252 <leds_on>:
    9252:	04 12       	push	r4		
    9254:	04 41       	mov	r1,	r4	
    9256:	24 53       	incd	r4		
    9258:	5f 42 21 00 	mov.b	&0x0021,r15	
    925c:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    9260:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9264:	34 41       	pop	r4		
    9266:	30 41       	ret			

00009268 <leds_init>:
    9268:	04 12       	push	r4		
    926a:	04 41       	mov	r1,	r4	
    926c:	24 53       	incd	r4		
    926e:	5f 42 21 00 	mov.b	&0x0021,r15	
    9272:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    9276:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    927a:	5f 42 22 00 	mov.b	&0x0022,r15	
    927e:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    9282:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    9286:	5f 42 26 00 	mov.b	&0x0026,r15	
    928a:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    928e:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    9292:	b0 12 3c 92 	call	#0x923c	
    9296:	34 41       	pop	r4		
    9298:	30 41       	ret			

0000929a <spi_init>:
    929a:	04 12       	push	r4		
    929c:	04 41       	mov	r1,	r4	
    929e:	24 53       	incd	r4		
    92a0:	5f 42 1a 00 	mov.b	&0x001a,r15	
    92a4:	5f d3       	bis.b	#1,	r15	;r3 As==01
    92a6:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    92aa:	5f 42 1a 00 	mov.b	&0x001a,r15	
    92ae:	7f d2       	bis.b	#8,	r15	;r2 As==11
    92b0:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    92b4:	5f 42 1a 00 	mov.b	&0x001a,r15	
    92b8:	6f d3       	bis.b	#2,	r15	;r3 As==10
    92ba:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    92be:	5f 42 19 00 	mov.b	&0x0019,r15	
    92c2:	5f d3       	bis.b	#1,	r15	;r3 As==01
    92c4:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    92c8:	d2 43 69 00 	mov.b	#1,	&0x0069	;r3 As==01
    92cc:	f2 40 81 ff 	mov.b	#-127,	&0x0069	;#0xff81
    92d0:	69 00 
    92d2:	f2 40 a9 ff 	mov.b	#-87,	&0x0068	;#0xffa9
    92d6:	68 00 
    92d8:	e2 43 6a 00 	mov.b	#2,	&0x006a	;r3 As==10
    92dc:	c2 43 6b 00 	mov.b	#0,	&0x006b	;r3 As==00
    92e0:	5f 42 1b 00 	mov.b	&0x001b,r15	
    92e4:	7f d0 0e 00 	bis.b	#14,	r15	;#0x000e
    92e8:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    92ec:	5f 42 69 00 	mov.b	&0x0069,r15	
    92f0:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    92f4:	c2 4f 69 00 	mov.b	r15,	&0x0069	
    92f8:	34 41       	pop	r4		
    92fa:	30 41       	ret			

000092fc <spi_clear_rx_IFG>:
    92fc:	04 12       	push	r4		
    92fe:	04 41       	mov	r1,	r4	
    9300:	24 53       	incd	r4		
    9302:	e2 c2 03 00 	bic.b	#4,	&0x0003	;r2 As==10
    9306:	34 41       	pop	r4		
    9308:	30 41       	ret			

0000930a <spi_tx_rx>:
    930a:	04 12       	push	r4		
    930c:	04 41       	mov	r1,	r4	
    930e:	24 53       	incd	r4		
    9310:	21 82       	sub	#4,	r1	;r2 As==10
    9312:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9316:	b0 12 fc 92 	call	#0x92fc	
    931a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    931e:	4f 4f       	mov.b	r15,	r15	
    9320:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    9324:	5f 42 03 00 	mov.b	&0x0003,r15	
    9328:	4f 4f       	mov.b	r15,	r15	
    932a:	2f f2       	and	#4,	r15	;r2 As==10
    932c:	0f 93       	tst	r15		
    932e:	fa 27       	jz	$-10     	;abs 0x9324
    9330:	5f 42 6e 00 	mov.b	&0x006e,r15	
    9334:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    9338:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    933c:	8f 11       	sxt	r15		
    933e:	21 52       	add	#4,	r1	;r2 As==10
    9340:	34 41       	pop	r4		
    9342:	30 41       	ret			

00009344 <spi_check_miso_high>:
    9344:	04 12       	push	r4		
    9346:	04 41       	mov	r1,	r4	
    9348:	24 53       	incd	r4		
    934a:	5f 42 18 00 	mov.b	&0x0018,r15	
    934e:	4f 4f       	mov.b	r15,	r15	
    9350:	2f f2       	and	#4,	r15	;r2 As==10
    9352:	34 41       	pop	r4		
    9354:	30 41       	ret			

00009356 <spi_tx_burst>:
    9356:	04 12       	push	r4		
    9358:	04 41       	mov	r1,	r4	
    935a:	24 53       	incd	r4		
    935c:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    9360:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    9364:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    9368:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    936c:	11 3c       	jmp	$+36     	;abs 0x9390
    936e:	b0 12 fc 92 	call	#0x92fc	
    9372:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    9376:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    937a:	6f 4f       	mov.b	@r15,	r15	
    937c:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    9380:	5f 42 03 00 	mov.b	&0x0003,r15	
    9384:	4f 4f       	mov.b	r15,	r15	
    9386:	2f f2       	and	#4,	r15	;r2 As==10
    9388:	0f 93       	tst	r15		
    938a:	fa 27       	jz	$-10     	;abs 0x9380
    938c:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    9390:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    9394:	f8 ff 
    9396:	eb 3b       	jl	$-40     	;abs 0x936e
    9398:	31 50 06 00 	add	#6,	r1	;#0x0006
    939c:	34 41       	pop	r4		
    939e:	30 41       	ret			

000093a0 <spi_rx_burst>:
    93a0:	04 12       	push	r4		
    93a2:	04 41       	mov	r1,	r4	
    93a4:	24 53       	incd	r4		
    93a6:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    93aa:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    93ae:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    93b2:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    93b6:	13 3c       	jmp	$+40     	;abs 0x93de
    93b8:	f2 40 55 00 	mov.b	#85,	&0x006f	;#0x0055
    93bc:	6f 00 
    93be:	5f 42 03 00 	mov.b	&0x0003,r15	
    93c2:	4f 4f       	mov.b	r15,	r15	
    93c4:	2f f2       	and	#4,	r15	;r2 As==10
    93c6:	0f 93       	tst	r15		
    93c8:	fa 27       	jz	$-10     	;abs 0x93be
    93ca:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    93ce:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    93d2:	5e 42 6e 00 	mov.b	&0x006e,r14	
    93d6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    93da:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    93de:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    93e2:	f8 ff 
    93e4:	e9 3b       	jl	$-44     	;abs 0x93b8
    93e6:	31 50 06 00 	add	#6,	r1	;#0x0006
    93ea:	34 41       	pop	r4		
    93ec:	30 41       	ret			

000093ee <spi_select_radio>:
    93ee:	04 12       	push	r4		
    93f0:	04 41       	mov	r1,	r4	
    93f2:	24 53       	incd	r4		
    93f4:	5f 42 19 00 	mov.b	&0x0019,r15	
    93f8:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    93fc:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9400:	34 41       	pop	r4		
    9402:	30 41       	ret			

00009404 <spi_deselect_radio>:
    9404:	04 12       	push	r4		
    9406:	04 41       	mov	r1,	r4	
    9408:	24 53       	incd	r4		
    940a:	5f 42 19 00 	mov.b	&0x0019,r15	
    940e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9410:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9414:	34 41       	pop	r4		
    9416:	30 41       	ret			

00009418 <Timer_A>:
    9418:	0f 12       	push	r15		
    941a:	0e 12       	push	r14		
    941c:	0d 12       	push	r13		
    941e:	0c 12       	push	r12		
    9420:	04 12       	push	r4		
    9422:	04 41       	mov	r1,	r4	
    9424:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9428:	1f 42 2a 02 	mov	&0x022a,r15	
    942c:	0f 93       	tst	r15		
    942e:	03 24       	jz	$+8      	;abs 0x9436
    9430:	1f 42 2a 02 	mov	&0x022a,r15	
    9434:	8f 12       	call	r15		
    9436:	1f 42 2c 02 	mov	&0x022c,r15	
    943a:	1f 93       	cmp	#1,	r15	;r3 As==01
    943c:	03 20       	jnz	$+8      	;abs 0x9444
    943e:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9442:	00 00 
    9444:	34 41       	pop	r4		
    9446:	3c 41       	pop	r12		
    9448:	3d 41       	pop	r13		
    944a:	3e 41       	pop	r14		
    944c:	3f 41       	pop	r15		
    944e:	00 13       	reti			

00009450 <timerA_init>:
    9450:	04 12       	push	r4		
    9452:	04 41       	mov	r1,	r4	
    9454:	24 53       	incd	r4		
    9456:	82 43 2a 02 	mov	#0,	&0x022a	;r3 As==00
    945a:	82 43 2c 02 	mov	#0,	&0x022c	;r3 As==00
    945e:	b0 12 ee 94 	call	#0x94ee	
    9462:	34 41       	pop	r4		
    9464:	30 41       	ret			

00009466 <timerA_register_cb>:
    9466:	04 12       	push	r4		
    9468:	04 41       	mov	r1,	r4	
    946a:	24 53       	incd	r4		
    946c:	21 83       	decd	r1		
    946e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9472:	92 44 fc ff 	mov	-4(r4),	&0x022a	;0xfffc(r4)
    9476:	2a 02 
    9478:	21 53       	incd	r1		
    947a:	34 41       	pop	r4		
    947c:	30 41       	ret			

0000947e <timerA_set_wakeup>:
    947e:	04 12       	push	r4		
    9480:	04 41       	mov	r1,	r4	
    9482:	24 53       	incd	r4		
    9484:	21 83       	decd	r1		
    9486:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    948a:	92 44 fc ff 	mov	-4(r4),	&0x022c	;0xfffc(r4)
    948e:	2c 02 
    9490:	21 53       	incd	r1		
    9492:	34 41       	pop	r4		
    9494:	30 41       	ret			

00009496 <timerA_start_ticks>:
    9496:	04 12       	push	r4		
    9498:	04 41       	mov	r1,	r4	
    949a:	24 53       	incd	r4		
    949c:	21 83       	decd	r1		
    949e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    94a2:	5f 42 53 00 	mov.b	&0x0053,r15	
    94a6:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    94aa:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    94ae:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    94b2:	62 01 
    94b4:	82 43 70 01 	mov	#0,	&0x0170	;r3 As==00
    94b8:	92 44 fc ff 	mov	-4(r4),	&0x0172	;0xfffc(r4)
    94bc:	72 01 
    94be:	b2 40 10 01 	mov	#272,	&0x0160	;#0x0110
    94c2:	60 01 
    94c4:	21 53       	incd	r1		
    94c6:	34 41       	pop	r4		
    94c8:	30 41       	ret			

000094ca <timerA_start_milliseconds>:
    94ca:	04 12       	push	r4		
    94cc:	04 41       	mov	r1,	r4	
    94ce:	24 53       	incd	r4		
    94d0:	21 83       	decd	r1		
    94d2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    94d6:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    94da:	0f 4e       	mov	r14,	r15	
    94dc:	0f 5f       	rla	r15		
    94de:	0f 5e       	add	r14,	r15	
    94e0:	0f 5f       	rla	r15		
    94e2:	0f 5f       	rla	r15		
    94e4:	b0 12 96 94 	call	#0x9496	
    94e8:	21 53       	incd	r1		
    94ea:	34 41       	pop	r4		
    94ec:	30 41       	ret			

000094ee <timerA_stop>:
    94ee:	04 12       	push	r4		
    94f0:	04 41       	mov	r1,	r4	
    94f2:	24 53       	incd	r4		
    94f4:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
    94f8:	34 41       	pop	r4		
    94fa:	30 41       	ret			

000094fc <Timer_B>:
    94fc:	0f 12       	push	r15		
    94fe:	0e 12       	push	r14		
    9500:	0d 12       	push	r13		
    9502:	0c 12       	push	r12		
    9504:	04 12       	push	r4		
    9506:	04 41       	mov	r1,	r4	
    9508:	34 50 0a 00 	add	#10,	r4	;#0x000a
    950c:	1f 42 2e 02 	mov	&0x022e,r15	
    9510:	0f 93       	tst	r15		
    9512:	03 24       	jz	$+8      	;abs 0x951a
    9514:	1f 42 2e 02 	mov	&0x022e,r15	
    9518:	8f 12       	call	r15		
    951a:	1f 42 30 02 	mov	&0x0230,r15	
    951e:	1f 93       	cmp	#1,	r15	;r3 As==01
    9520:	03 20       	jnz	$+8      	;abs 0x9528
    9522:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9526:	00 00 
    9528:	34 41       	pop	r4		
    952a:	3c 41       	pop	r12		
    952c:	3d 41       	pop	r13		
    952e:	3e 41       	pop	r14		
    9530:	3f 41       	pop	r15		
    9532:	00 13       	reti			

00009534 <timerB_init>:
    9534:	04 12       	push	r4		
    9536:	04 41       	mov	r1,	r4	
    9538:	24 53       	incd	r4		
    953a:	82 43 2e 02 	mov	#0,	&0x022e	;r3 As==00
    953e:	82 43 30 02 	mov	#0,	&0x0230	;r3 As==00
    9542:	b0 12 d2 95 	call	#0x95d2	
    9546:	34 41       	pop	r4		
    9548:	30 41       	ret			

0000954a <timerB_register_cb>:
    954a:	04 12       	push	r4		
    954c:	04 41       	mov	r1,	r4	
    954e:	24 53       	incd	r4		
    9550:	21 83       	decd	r1		
    9552:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9556:	92 44 fc ff 	mov	-4(r4),	&0x022e	;0xfffc(r4)
    955a:	2e 02 
    955c:	21 53       	incd	r1		
    955e:	34 41       	pop	r4		
    9560:	30 41       	ret			

00009562 <timerB_set_wakeup>:
    9562:	04 12       	push	r4		
    9564:	04 41       	mov	r1,	r4	
    9566:	24 53       	incd	r4		
    9568:	21 83       	decd	r1		
    956a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    956e:	92 44 fc ff 	mov	-4(r4),	&0x0230	;0xfffc(r4)
    9572:	30 02 
    9574:	21 53       	incd	r1		
    9576:	34 41       	pop	r4		
    9578:	30 41       	ret			

0000957a <timerB_start_ticks>:
    957a:	04 12       	push	r4		
    957c:	04 41       	mov	r1,	r4	
    957e:	24 53       	incd	r4		
    9580:	21 83       	decd	r1		
    9582:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9586:	5f 42 53 00 	mov.b	&0x0053,r15	
    958a:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    958e:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    9592:	b2 40 10 00 	mov	#16,	&0x0182	;#0x0010
    9596:	82 01 
    9598:	82 43 90 01 	mov	#0,	&0x0190	;r3 As==00
    959c:	92 44 fc ff 	mov	-4(r4),	&0x0192	;0xfffc(r4)
    95a0:	92 01 
    95a2:	b2 40 10 01 	mov	#272,	&0x0180	;#0x0110
    95a6:	80 01 
    95a8:	21 53       	incd	r1		
    95aa:	34 41       	pop	r4		
    95ac:	30 41       	ret			

000095ae <timerB_start_milliseconds>:
    95ae:	04 12       	push	r4		
    95b0:	04 41       	mov	r1,	r4	
    95b2:	24 53       	incd	r4		
    95b4:	21 83       	decd	r1		
    95b6:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    95ba:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    95be:	0f 4e       	mov	r14,	r15	
    95c0:	0f 5f       	rla	r15		
    95c2:	0f 5e       	add	r14,	r15	
    95c4:	0f 5f       	rla	r15		
    95c6:	0f 5f       	rla	r15		
    95c8:	b0 12 7a 95 	call	#0x957a	
    95cc:	21 53       	incd	r1		
    95ce:	34 41       	pop	r4		
    95d0:	30 41       	ret			

000095d2 <timerB_stop>:
    95d2:	04 12       	push	r4		
    95d4:	04 41       	mov	r1,	r4	
    95d6:	24 53       	incd	r4		
    95d8:	82 43 80 01 	mov	#0,	&0x0180	;r3 As==00
    95dc:	34 41       	pop	r4		
    95de:	30 41       	ret			

000095e0 <uart_init>:
    95e0:	04 12       	push	r4		
    95e2:	04 41       	mov	r1,	r4	
    95e4:	24 53       	incd	r4		
    95e6:	21 83       	decd	r1		
    95e8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    95ec:	5f 42 1b 00 	mov.b	&0x001b,r15	
    95f0:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    95f4:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    95f8:	5f 42 1a 00 	mov.b	&0x001a,r15	
    95fc:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    9600:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9604:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9608:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    960c:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9610:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9614:	1f 93       	cmp	#1,	r15	;r3 As==01
    9616:	03 24       	jz	$+8      	;abs 0x961e
    9618:	3f 92       	cmp	#8,	r15	;r2 As==11
    961a:	12 24       	jz	$+38     	;abs 0x9640
    961c:	23 3c       	jmp	$+72     	;abs 0x9664
    961e:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    9622:	61 00 
    9624:	f2 40 68 00 	mov.b	#104,	&0x0062	;#0x0068
    9628:	62 00 
    962a:	c2 43 63 00 	mov.b	#0,	&0x0063	;r3 As==00
    962e:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    9632:	5f 42 61 00 	mov.b	&0x0061,r15	
    9636:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    963a:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    963e:	13 3c       	jmp	$+40     	;abs 0x9666
    9640:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    9644:	61 00 
    9646:	f2 40 41 00 	mov.b	#65,	&0x0062	;#0x0041
    964a:	62 00 
    964c:	f2 40 03 00 	mov.b	#3,	&0x0063	;#0x0003
    9650:	63 00 
    9652:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    9656:	5f 42 61 00 	mov.b	&0x0061,r15	
    965a:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    965e:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    9662:	01 3c       	jmp	$+4      	;abs 0x9666
    9664:	03 43       	nop			
    9666:	82 43 32 02 	mov	#0,	&0x0232	;r3 As==00
    966a:	21 53       	incd	r1		
    966c:	34 41       	pop	r4		
    966e:	30 41       	ret			

00009670 <uart_stop>:
    9670:	04 12       	push	r4		
    9672:	04 41       	mov	r1,	r4	
    9674:	24 53       	incd	r4		
    9676:	34 41       	pop	r4		
    9678:	30 41       	ret			

0000967a <putchar>:
    967a:	04 12       	push	r4		
    967c:	04 41       	mov	r1,	r4	
    967e:	24 53       	incd	r4		
    9680:	21 83       	decd	r1		
    9682:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9686:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    968a:	4f 4f       	mov.b	r15,	r15	
    968c:	c2 4f 67 00 	mov.b	r15,	&0x0067	
    9690:	03 43       	nop			
    9692:	5f 42 03 00 	mov.b	&0x0003,r15	
    9696:	4f 4f       	mov.b	r15,	r15	
    9698:	2f f3       	and	#2,	r15	;r3 As==10
    969a:	0f 93       	tst	r15		
    969c:	fa 27       	jz	$-10     	;abs 0x9692
    969e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    96a2:	4f 4f       	mov.b	r15,	r15	
    96a4:	4f 4f       	mov.b	r15,	r15	
    96a6:	21 53       	incd	r1		
    96a8:	34 41       	pop	r4		
    96aa:	30 41       	ret			

000096ac <uart_getchar>:
    96ac:	04 12       	push	r4		
    96ae:	04 41       	mov	r1,	r4	
    96b0:	24 53       	incd	r4		
    96b2:	21 83       	decd	r1		
    96b4:	5f 42 66 00 	mov.b	&0x0066,r15	
    96b8:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    96bc:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    96c0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    96c4:	21 53       	incd	r1		
    96c6:	34 41       	pop	r4		
    96c8:	30 41       	ret			

000096ca <uart_eint>:
    96ca:	04 12       	push	r4		
    96cc:	04 41       	mov	r1,	r4	
    96ce:	24 53       	incd	r4		
    96d0:	5f 42 01 00 	mov.b	&0x0001,r15	
    96d4:	5f d3       	bis.b	#1,	r15	;r3 As==01
    96d6:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    96da:	34 41       	pop	r4		
    96dc:	30 41       	ret			

000096de <uart_dint>:
    96de:	04 12       	push	r4		
    96e0:	04 41       	mov	r1,	r4	
    96e2:	24 53       	incd	r4		
    96e4:	5f 42 01 00 	mov.b	&0x0001,r15	
    96e8:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    96ec:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    96f0:	34 41       	pop	r4		
    96f2:	30 41       	ret			

000096f4 <uart_register_cb>:
    96f4:	04 12       	push	r4		
    96f6:	04 41       	mov	r1,	r4	
    96f8:	24 53       	incd	r4		
    96fa:	21 83       	decd	r1		
    96fc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9700:	92 44 fc ff 	mov	-4(r4),	&0x0232	;0xfffc(r4)
    9704:	32 02 
    9706:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    970a:	03 20       	jnz	$+8      	;abs 0x9712
    970c:	b0 12 de 96 	call	#0x96de	
    9710:	02 3c       	jmp	$+6      	;abs 0x9716
    9712:	b0 12 ca 96 	call	#0x96ca	
    9716:	21 53       	incd	r1		
    9718:	34 41       	pop	r4		
    971a:	30 41       	ret			

0000971c <usart0irq>:
    971c:	0f 12       	push	r15		
    971e:	0e 12       	push	r14		
    9720:	0d 12       	push	r13		
    9722:	0c 12       	push	r12		
    9724:	04 12       	push	r4		
    9726:	04 41       	mov	r1,	r4	
    9728:	34 50 0a 00 	add	#10,	r4	;#0x000a
    972c:	21 83       	decd	r1		
    972e:	5f 42 65 00 	mov.b	&0x0065,r15	
    9732:	4f 4f       	mov.b	r15,	r15	
    9734:	2f f2       	and	#4,	r15	;r2 As==10
    9736:	0f 93       	tst	r15		
    9738:	0a 24       	jz	$+22     	;abs 0x974e
    973a:	5f 42 66 00 	mov.b	&0x0066,r15	
    973e:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    9742:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    9746:	5f 53       	inc.b	r15		
    9748:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    974c:	0a 3c       	jmp	$+22     	;abs 0x9762
    974e:	1e 42 32 02 	mov	&0x0232,r14	
    9752:	5f 42 66 00 	mov.b	&0x0066,r15	
    9756:	8e 12       	call	r14		
    9758:	0f 93       	tst	r15		
    975a:	03 24       	jz	$+8      	;abs 0x9762
    975c:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9760:	00 00 
    9762:	21 53       	incd	r1		
    9764:	34 41       	pop	r4		
    9766:	3c 41       	pop	r12		
    9768:	3d 41       	pop	r13		
    976a:	3e 41       	pop	r14		
    976c:	3f 41       	pop	r15		
    976e:	00 13       	reti			

00009770 <watchdog_stop>:
    9770:	04 12       	push	r4		
    9772:	04 41       	mov	r1,	r4	
    9774:	24 53       	incd	r4		
    9776:	1f 42 20 01 	mov	&0x0120,r15	
    977a:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    977e:	82 4f 34 02 	mov	r15,	&0x0234	
    9782:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    9786:	20 01 
    9788:	34 41       	pop	r4		
    978a:	30 41       	ret			

0000978c <watchdog_restore>:
    978c:	04 12       	push	r4		
    978e:	04 41       	mov	r1,	r4	
    9790:	24 53       	incd	r4		
    9792:	1f 42 34 02 	mov	&0x0234,r15	
    9796:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    979a:	82 4f 20 01 	mov	r15,	&0x0120	
    979e:	34 41       	pop	r4		
    97a0:	30 41       	ret			

000097a2 <strcmp>:
    97a2:	03 3c       	jmp	$+8      	;abs 0x97aa
    97a4:	1f 53       	inc	r15		
    97a6:	4d 93       	tst.b	r13		
    97a8:	09 24       	jz	$+20     	;abs 0x97bc
    97aa:	6d 4f       	mov.b	@r15,	r13	
    97ac:	7c 4e       	mov.b	@r14+,	r12	
    97ae:	4d 9c       	cmp.b	r12,	r13	
    97b0:	f9 27       	jz	$-12     	;abs 0x97a4
    97b2:	4f 4d       	mov.b	r13,	r15	
    97b4:	5e 4e ff ff 	mov.b	-1(r14),r14	;0xffff(r14)
    97b8:	0f 8e       	sub	r14,	r15	
    97ba:	30 41       	ret			
    97bc:	0f 43       	clr	r15		
    97be:	30 41       	ret			

000097c0 <printf>:
    97c0:	0d 41       	mov	r1,	r13	
    97c2:	2d 53       	incd	r13		
    97c4:	3e 4d       	mov	@r13+,	r14	
    97c6:	3f 40 7a 96 	mov	#-27014,r15	;#0x967a
    97ca:	b0 12 76 99 	call	#0x9976	
    97ce:	30 41       	ret			

000097d0 <vprintf>:
    97d0:	0d 4e       	mov	r14,	r13	
    97d2:	0e 4f       	mov	r15,	r14	
    97d4:	3f 40 7a 96 	mov	#-27014,r15	;#0x967a
    97d8:	b0 12 76 99 	call	#0x9976	
    97dc:	30 41       	ret			

000097de <print_field>:
    97de:	0b 12       	push	r11		
    97e0:	0a 12       	push	r10		
    97e2:	09 12       	push	r9		
    97e4:	08 12       	push	r8		
    97e6:	07 12       	push	r7		
    97e8:	06 12       	push	r6		
    97ea:	05 12       	push	r5		
    97ec:	04 12       	push	r4		
    97ee:	31 82       	sub	#8,	r1	;r2 As==11
    97f0:	08 4f       	mov	r15,	r8	
    97f2:	81 4e 04 00 	mov	r14,	4(r1)	;0x0004(r1)
    97f6:	09 4d       	mov	r13,	r9	
    97f8:	1f 41 1a 00 	mov	26(r1),	r15	;0x001a(r1)
    97fc:	1d 41 1c 00 	mov	28(r1),	r13	;0x001c(r1)
    9800:	4c 4d       	mov.b	r13,	r12	
    9802:	04 4d       	mov	r13,	r4	
    9804:	84 10       	swpb	r4		
    9806:	45 44       	mov.b	r4,	r5	
    9808:	4e 4f       	mov.b	r15,	r14	
    980a:	7e b0 40 00 	bit.b	#64,	r14	;#0x0040
    980e:	11 24       	jz	$+36     	;abs 0x9832
    9810:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9814:	00 00 
    9816:	0e 4f       	mov	r15,	r14	
    9818:	8e 10       	swpb	r14		
    981a:	5e f3       	and.b	#1,	r14	;r3 As==01
    981c:	03 24       	jz	$+8      	;abs 0x9824
    981e:	7e 40 58 00 	mov.b	#88,	r14	;#0x0058
    9822:	02 3c       	jmp	$+6      	;abs 0x9828
    9824:	7e 40 78 00 	mov.b	#120,	r14	;#0x0078
    9828:	c1 4e 01 00 	mov.b	r14,	1(r1)	;0x0001(r1)
    982c:	0c 41       	mov	r1,	r12	
    982e:	2c 53       	incd	r12		
    9830:	0f 3c       	jmp	$+32     	;abs 0x9850
    9832:	7e f0 20 00 	and.b	#32,	r14	;#0x0020
    9836:	04 24       	jz	$+10     	;abs 0x9840
    9838:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    983c:	00 00 
    983e:	04 3c       	jmp	$+10     	;abs 0x9848
    9840:	4c 93       	tst.b	r12		
    9842:	05 24       	jz	$+12     	;abs 0x984e
    9844:	c1 4d 00 00 	mov.b	r13,	0(r1)	;0x0000(r1)
    9848:	0c 41       	mov	r1,	r12	
    984a:	1c 53       	inc	r12		
    984c:	01 3c       	jmp	$+4      	;abs 0x9850
    984e:	0c 41       	mov	r1,	r12	
    9850:	0a 4c       	mov	r12,	r10	
    9852:	8c 10       	swpb	r12		
    9854:	8c 11       	sxt	r12		
    9856:	8c 10       	swpb	r12		
    9858:	8c 11       	sxt	r12		
    985a:	0b 4c       	mov	r12,	r11	
    985c:	06 41       	mov	r1,	r6	
    985e:	0c 41       	mov	r1,	r12	
    9860:	8c 10       	swpb	r12		
    9862:	8c 11       	sxt	r12		
    9864:	8c 10       	swpb	r12		
    9866:	8c 11       	sxt	r12		
    9868:	07 4c       	mov	r12,	r7	
    986a:	0a 86       	sub	r6,	r10	
    986c:	0b 77       	subc	r7,	r11	
    986e:	0e 4f       	mov	r15,	r14	
    9870:	8e 10       	swpb	r14		
    9872:	c1 4e 02 00 	mov.b	r14,	2(r1)	;0x0002(r1)
    9876:	6e f2       	and.b	#4,	r14	;r2 As==10
    9878:	02 24       	jz	$+6      	;abs 0x987e
    987a:	07 45       	mov	r5,	r7	
    987c:	01 3c       	jmp	$+4      	;abs 0x9880
    987e:	37 43       	mov	#-1,	r7	;r3 As==11
    9880:	4f 4f       	mov.b	r15,	r15	
    9882:	7f b0 10 00 	bit.b	#16,	r15	;#0x0010
    9886:	3c 20       	jnz	$+122    	;abs 0x9900
    9888:	1d 41 04 00 	mov	4(r1),	r13	;0x0004(r1)
    988c:	3d 53       	add	#-1,	r13	;r3 As==11
    988e:	1d 53       	inc	r13		
    9890:	cd 93 00 00 	tst.b	0(r13)		;0x0000(r13)
    9894:	fc 23       	jnz	$-6      	;abs 0x988e
    9896:	1d 81 04 00 	sub	4(r1),	r13	;0x0004(r1)
    989a:	09 9a       	cmp	r10,	r9	
    989c:	02 28       	jnc	$+6      	;abs 0x98a2
    989e:	09 8a       	sub	r10,	r9	
    98a0:	01 3c       	jmp	$+4      	;abs 0x98a4
    98a2:	09 43       	clr	r9		
    98a4:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    98a8:	05 24       	jz	$+12     	;abs 0x98b4
    98aa:	09 95       	cmp	r5,	r9	
    98ac:	02 28       	jnc	$+6      	;abs 0x98b2
    98ae:	09 85       	sub	r5,	r9	
    98b0:	01 3c       	jmp	$+4      	;abs 0x98b4
    98b2:	09 43       	clr	r9		
    98b4:	05 4d       	mov	r13,	r5	
    98b6:	07 9d       	cmp	r13,	r7	
    98b8:	01 2c       	jc	$+4      	;abs 0x98bc
    98ba:	05 47       	mov	r7,	r5	
    98bc:	4f 93       	tst.b	r15		
    98be:	0d 38       	jl	$+28     	;abs 0x98da
    98c0:	f1 40 20 00 	mov.b	#32,	6(r1)	;#0x0020, 0x0006(r1)
    98c4:	06 00 
    98c6:	06 43       	clr	r6		
    98c8:	0b 43       	clr	r11		
    98ca:	0e 3c       	jmp	$+30     	;abs 0x98e8
    98cc:	0f 41       	mov	r1,	r15	
    98ce:	0f 56       	add	r6,	r15	
    98d0:	6f 4f       	mov.b	@r15,	r15	
    98d2:	8f 11       	sxt	r15		
    98d4:	16 53       	inc	r6		
    98d6:	88 12       	call	r8		
    98d8:	01 3c       	jmp	$+4      	;abs 0x98dc
    98da:	06 43       	clr	r6		
    98dc:	06 9a       	cmp	r10,	r6	
    98de:	f6 3b       	jl	$-18     	;abs 0x98cc
    98e0:	0b 4a       	mov	r10,	r11	
    98e2:	f1 40 30 00 	mov.b	#48,	6(r1)	;#0x0030, 0x0006(r1)
    98e6:	06 00 
    98e8:	05 8b       	sub	r11,	r5	
    98ea:	05 3c       	jmp	$+12     	;abs 0x98f6
    98ec:	5f 41 06 00 	mov.b	6(r1),	r15	;0x0006(r1)
    98f0:	8f 11       	sxt	r15		
    98f2:	88 12       	call	r8		
    98f4:	1b 53       	inc	r11		
    98f6:	0f 45       	mov	r5,	r15	
    98f8:	0f 5b       	add	r11,	r15	
    98fa:	0f 99       	cmp	r9,	r15	
    98fc:	f7 2b       	jnc	$-16     	;abs 0x98ec
    98fe:	0a 3c       	jmp	$+22     	;abs 0x9914
    9900:	06 43       	clr	r6		
    9902:	0b 43       	clr	r11		
    9904:	07 3c       	jmp	$+16     	;abs 0x9914
    9906:	1b 53       	inc	r11		
    9908:	0f 41       	mov	r1,	r15	
    990a:	0f 56       	add	r6,	r15	
    990c:	6f 4f       	mov.b	@r15,	r15	
    990e:	8f 11       	sxt	r15		
    9910:	16 53       	inc	r6		
    9912:	88 12       	call	r8		
    9914:	06 9a       	cmp	r10,	r6	
    9916:	f7 3b       	jl	$-16     	;abs 0x9906
    9918:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    991c:	02 24       	jz	$+6      	;abs 0x9922
    991e:	4a 44       	mov.b	r4,	r10	
    9920:	08 3c       	jmp	$+18     	;abs 0x9932
    9922:	1a 41 04 00 	mov	4(r1),	r10	;0x0004(r1)
    9926:	0a 8b       	sub	r11,	r10	
    9928:	0d 3c       	jmp	$+28     	;abs 0x9944
    992a:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    992e:	88 12       	call	r8		
    9930:	7a 53       	add.b	#-1,	r10	;r3 As==11
    9932:	4a 93       	tst.b	r10		
    9934:	fa 23       	jnz	$-10     	;abs 0x992a
    9936:	44 44       	mov.b	r4,	r4	
    9938:	0b 54       	add	r4,	r11	
    993a:	f3 3f       	jmp	$-24     	;abs 0x9922
    993c:	37 53       	add	#-1,	r7	;r3 As==11
    993e:	8f 11       	sxt	r15		
    9940:	88 12       	call	r8		
    9942:	1b 53       	inc	r11		
    9944:	0f 4a       	mov	r10,	r15	
    9946:	0f 5b       	add	r11,	r15	
    9948:	6f 4f       	mov.b	@r15,	r15	
    994a:	4f 93       	tst.b	r15		
    994c:	07 24       	jz	$+16     	;abs 0x995c
    994e:	07 93       	tst	r7		
    9950:	f5 23       	jnz	$-20     	;abs 0x993c
    9952:	04 3c       	jmp	$+10     	;abs 0x995c
    9954:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9958:	88 12       	call	r8		
    995a:	1b 53       	inc	r11		
    995c:	0b 99       	cmp	r9,	r11	
    995e:	fa 2b       	jnc	$-10     	;abs 0x9954
    9960:	0f 4b       	mov	r11,	r15	
    9962:	31 52       	add	#8,	r1	;r2 As==11
    9964:	34 41       	pop	r4		
    9966:	35 41       	pop	r5		
    9968:	36 41       	pop	r6		
    996a:	37 41       	pop	r7		
    996c:	38 41       	pop	r8		
    996e:	39 41       	pop	r9		
    9970:	3a 41       	pop	r10		
    9972:	3b 41       	pop	r11		
    9974:	30 41       	ret			

00009976 <vuprintf>:
    9976:	0b 12       	push	r11		
    9978:	0a 12       	push	r10		
    997a:	09 12       	push	r9		
    997c:	08 12       	push	r8		
    997e:	07 12       	push	r7		
    9980:	06 12       	push	r6		
    9982:	05 12       	push	r5		
    9984:	04 12       	push	r4		
    9986:	31 50 b6 ff 	add	#-74,	r1	;#0xffb6
    998a:	81 4f 3a 00 	mov	r15,	58(r1)	;0x003a(r1)
    998e:	06 4e       	mov	r14,	r6	
    9990:	05 4d       	mov	r13,	r5	
    9992:	81 4e 3e 00 	mov	r14,	62(r1)	;0x003e(r1)
    9996:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    999a:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    999e:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    99a2:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    99a6:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    99aa:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    99ae:	07 43       	clr	r7		
    99b0:	81 43 2c 00 	mov	#0,	44(r1)	;r3 As==00, 0x002c(r1)
    99b4:	0e 41       	mov	r1,	r14	
    99b6:	3e 50 1c 00 	add	#28,	r14	;#0x001c
    99ba:	81 4e 1c 00 	mov	r14,	28(r1)	;0x001c(r1)
    99be:	30 40 f0 9f 	br	#0x9ff0	
    99c2:	0f 46       	mov	r6,	r15	
    99c4:	1f 53       	inc	r15		
    99c6:	81 4f 40 00 	mov	r15,	64(r1)	;0x0040(r1)
    99ca:	07 93       	tst	r7		
    99cc:	1e 20       	jnz	$+62     	;abs 0x9a0a
    99ce:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    99d2:	13 20       	jnz	$+40     	;abs 0x99fa
    99d4:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00, 0x0000(r1)
    99d8:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    99dc:	81 46 3e 00 	mov	r6,	62(r1)	;0x003e(r1)
    99e0:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    99e4:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    99e8:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    99ec:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    99f0:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    99f4:	30 40 e6 9f 	br	#0x9fe6	
    99f8:	05 47       	mov	r7,	r5	
    99fa:	8e 11       	sxt	r14		
    99fc:	0f 4e       	mov	r14,	r15	
    99fe:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    9a02:	91 53 2c 00 	inc	44(r1)		;0x002c(r1)
    9a06:	30 40 cc 9f 	br	#0x9fcc	
    9a0a:	7e 90 63 00 	cmp.b	#99,	r14	;#0x0063
    9a0e:	c5 24       	jz	$+396    	;abs 0x9b9a
    9a10:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9a14:	27 34       	jge	$+80     	;abs 0x9a64
    9a16:	7e 90 30 00 	cmp.b	#48,	r14	;#0x0030
    9a1a:	94 24       	jz	$+298    	;abs 0x9b44
    9a1c:	7e 90 31 00 	cmp.b	#49,	r14	;#0x0031
    9a20:	1a 34       	jge	$+54     	;abs 0x9a56
    9a22:	7e 90 2a 00 	cmp.b	#42,	r14	;#0x002a
    9a26:	77 24       	jz	$+240    	;abs 0x9b16
    9a28:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9a2c:	0a 34       	jge	$+22     	;abs 0x9a42
    9a2e:	7e 90 23 00 	cmp.b	#35,	r14	;#0x0023
    9a32:	42 24       	jz	$+134    	;abs 0x9ab8
    9a34:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    9a38:	e0 27       	jz	$-62     	;abs 0x99fa
    9a3a:	7e 90 20 00 	cmp.b	#32,	r14	;#0x0020
    9a3e:	32 20       	jnz	$+102    	;abs 0x9aa4
    9a40:	56 3c       	jmp	$+174    	;abs 0x9aee
    9a42:	7e 90 2d 00 	cmp.b	#45,	r14	;#0x002d
    9a46:	49 24       	jz	$+148    	;abs 0x9ada
    9a48:	7e 90 2e 00 	cmp.b	#46,	r14	;#0x002e
    9a4c:	5b 24       	jz	$+184    	;abs 0x9b04
    9a4e:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9a52:	28 20       	jnz	$+82     	;abs 0x9aa4
    9a54:	47 3c       	jmp	$+144    	;abs 0x9ae4
    9a56:	7e 90 3a 00 	cmp.b	#58,	r14	;#0x003a
    9a5a:	8c 38       	jl	$+282    	;abs 0x9b74
    9a5c:	7e 90 58 00 	cmp.b	#88,	r14	;#0x0058
    9a60:	21 20       	jnz	$+68     	;abs 0x9aa4
    9a62:	e9 3c       	jmp	$+468    	;abs 0x9c36
    9a64:	7e 90 6f 00 	cmp.b	#111,	r14	;#0x006f
    9a68:	24 24       	jz	$+74     	;abs 0x9ab2
    9a6a:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9a6e:	0a 34       	jge	$+22     	;abs 0x9a84
    9a70:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    9a74:	e3 24       	jz	$+456    	;abs 0x9c3c
    9a76:	7e 90 6c 00 	cmp.b	#108,	r14	;#0x006c
    9a7a:	22 24       	jz	$+70     	;abs 0x9ac0
    9a7c:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9a80:	11 20       	jnz	$+36     	;abs 0x9aa4
    9a82:	dc 3c       	jmp	$+442    	;abs 0x9c3c
    9a84:	7e 90 73 00 	cmp.b	#115,	r14	;#0x0073
    9a88:	98 24       	jz	$+306    	;abs 0x9bba
    9a8a:	7e 90 74 00 	cmp.b	#116,	r14	;#0x0074
    9a8e:	04 34       	jge	$+10     	;abs 0x9a98
    9a90:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9a94:	07 20       	jnz	$+16     	;abs 0x9aa4
    9a96:	b8 3c       	jmp	$+370    	;abs 0x9c08
    9a98:	7e 90 75 00 	cmp.b	#117,	r14	;#0x0075
    9a9c:	d1 24       	jz	$+420    	;abs 0x9c40
    9a9e:	7e 90 78 00 	cmp.b	#120,	r14	;#0x0078
    9aa2:	d2 24       	jz	$+422    	;abs 0x9c48
    9aa4:	19 41 3e 00 	mov	62(r1),	r9	;0x003e(r1)
    9aa8:	18 41 2c 00 	mov	44(r1),	r8	;0x002c(r1)
    9aac:	08 89       	sub	r9,	r8	
    9aae:	30 40 ba 9f 	br	#0x9fba	
    9ab2:	b1 42 28 00 	mov	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    9ab6:	cb 3c       	jmp	$+408    	;abs 0x9c4e
    9ab8:	f1 d2 00 00 	bis.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    9abc:	30 40 ea 9f 	br	#0x9fea	
    9ac0:	69 41       	mov.b	@r1,	r9	
    9ac2:	59 f3       	and.b	#1,	r9	;r3 As==01
    9ac4:	6e 41       	mov.b	@r1,	r14	
    9ac6:	04 24       	jz	$+10     	;abs 0x9ad0
    9ac8:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    9acc:	6e d3       	bis.b	#2,	r14	;r3 As==10
    9ace:	01 3c       	jmp	$+4      	;abs 0x9ad2
    9ad0:	5e d3       	bis.b	#1,	r14	;r3 As==01
    9ad2:	c1 4e 00 00 	mov.b	r14,	0(r1)	;0x0000(r1)
    9ad6:	30 40 ea 9f 	br	#0x9fea	
    9ada:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9ade:	00 00 
    9ae0:	30 40 ea 9f 	br	#0x9fea	
    9ae4:	f1 40 2b 00 	mov.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    9ae8:	02 00 
    9aea:	30 40 ea 9f 	br	#0x9fea	
    9aee:	f1 90 2b 00 	cmp.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    9af2:	02 00 
    9af4:	02 20       	jnz	$+6      	;abs 0x9afa
    9af6:	30 40 ea 9f 	br	#0x9fea	
    9afa:	f1 40 20 00 	mov.b	#32,	2(r1)	;#0x0020, 0x0002(r1)
    9afe:	02 00 
    9b00:	30 40 ea 9f 	br	#0x9fea	
    9b04:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9b08:	02 24       	jz	$+6      	;abs 0x9b0e
    9b0a:	30 40 d0 9f 	br	#0x9fd0	
    9b0e:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9b12:	30 40 ea 9f 	br	#0x9fea	
    9b16:	0e 45       	mov	r5,	r14	
    9b18:	2e 53       	incd	r14		
    9b1a:	2a 45       	mov	@r5,	r10	
    9b1c:	0a 93       	tst	r10		
    9b1e:	03 38       	jl	$+8      	;abs 0x9b26
    9b20:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9b24:	0d 3c       	jmp	$+28     	;abs 0x9b40
    9b26:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9b2a:	02 24       	jz	$+6      	;abs 0x9b30
    9b2c:	30 40 e0 9f 	br	#0x9fe0	
    9b30:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9b34:	00 00 
    9b36:	3a e3       	inv	r10		
    9b38:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9b3c:	91 53 26 00 	inc	38(r1)		;0x0026(r1)
    9b40:	05 4e       	mov	r14,	r5	
    9b42:	27 3c       	jmp	$+80     	;abs 0x9b92
    9b44:	81 93 26 00 	tst	38(r1)		;0x0026(r1)
    9b48:	15 20       	jnz	$+44     	;abs 0x9b74
    9b4a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9b4e:	12 20       	jnz	$+38     	;abs 0x9b74
    9b50:	69 41       	mov.b	@r1,	r9	
    9b52:	79 f0 10 00 	and.b	#16,	r9	;#0x0010
    9b56:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9b58:	01 24       	jz	$+4      	;abs 0x9b5c
    9b5a:	4e 43       	clr.b	r14		
    9b5c:	4e 4e       	mov.b	r14,	r14	
    9b5e:	0e 11       	rra	r14		
    9b60:	0e 43       	clr	r14		
    9b62:	4e 10       	rrc.b	r14		
    9b64:	6a 41       	mov.b	@r1,	r10	
    9b66:	7a f0 7f 00 	and.b	#127,	r10	;#0x007f
    9b6a:	4a de       	bis.b	r14,	r10	
    9b6c:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    9b70:	30 40 ea 9f 	br	#0x9fea	
    9b74:	1a 41 26 00 	mov	38(r1),	r10	;0x0026(r1)
    9b78:	0a 5a       	rla	r10		
    9b7a:	0c 4a       	mov	r10,	r12	
    9b7c:	0c 5c       	rla	r12		
    9b7e:	0c 5c       	rla	r12		
    9b80:	0a 5c       	add	r12,	r10	
    9b82:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9b86:	b1 50 d0 ff 	add	#-48,	38(r1)	;#0xffd0, 0x0026(r1)
    9b8a:	26 00 
    9b8c:	8e 11       	sxt	r14		
    9b8e:	81 5e 26 00 	add	r14,	38(r1)	;0x0026(r1)
    9b92:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9b96:	30 40 ea 9f 	br	#0x9fea	
    9b9a:	07 45       	mov	r5,	r7	
    9b9c:	27 53       	incd	r7		
    9b9e:	6e 45       	mov.b	@r5,	r14	
    9ba0:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9ba4:	03 20       	jnz	$+8      	;abs 0x9bac
    9ba6:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9baa:	26 27       	jz	$-434    	;abs 0x99f8
    9bac:	c1 4e 04 00 	mov.b	r14,	4(r1)	;0x0004(r1)
    9bb0:	c1 43 05 00 	mov.b	#0,	5(r1)	;r3 As==00, 0x0005(r1)
    9bb4:	0e 41       	mov	r1,	r14	
    9bb6:	2e 52       	add	#4,	r14	;r2 As==10
    9bb8:	03 3c       	jmp	$+8      	;abs 0x9bc0
    9bba:	07 45       	mov	r5,	r7	
    9bbc:	27 53       	incd	r7		
    9bbe:	2e 45       	mov	@r5,	r14	
    9bc0:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9bc4:	07 24       	jz	$+16     	;abs 0x9bd4
    9bc6:	e1 d2 01 00 	bis.b	#4,	1(r1)	;r2 As==10, 0x0001(r1)
    9bca:	1f 41 26 00 	mov	38(r1),	r15	;0x0026(r1)
    9bce:	c1 4f 03 00 	mov.b	r15,	3(r1)	;0x0003(r1)
    9bd2:	06 3c       	jmp	$+14     	;abs 0x9be0
    9bd4:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9bd8:	03 24       	jz	$+8      	;abs 0x9be0
    9bda:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9bde:	30 00 
    9be0:	0e 93       	tst	r14		
    9be2:	02 20       	jnz	$+6      	;abs 0x9be8
    9be4:	3e 40 e8 a2 	mov	#-23832,r14	;#0xa2e8
    9be8:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9bec:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9bf0:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9bf4:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9bf8:	b0 12 de 97 	call	#0x97de	
    9bfc:	21 52       	add	#4,	r1	;r2 As==10
    9bfe:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    9c02:	05 47       	mov	r7,	r5	
    9c04:	30 40 cc 9f 	br	#0x9fcc	
    9c08:	07 45       	mov	r5,	r7	
    9c0a:	27 53       	incd	r7		
    9c0c:	29 45       	mov	@r5,	r9	
    9c0e:	81 49 1e 00 	mov	r9,	30(r1)	;0x001e(r1)
    9c12:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9c14:	09 93       	tst	r9		
    9c16:	01 20       	jnz	$+4      	;abs 0x9c1a
    9c18:	4e 43       	clr.b	r14		
    9c1a:	4e 5e       	rla.b	r14		
    9c1c:	4e 5e       	rla.b	r14		
    9c1e:	4e 5e       	rla.b	r14		
    9c20:	6a 41       	mov.b	@r1,	r10	
    9c22:	7a f0 f7 ff 	and.b	#-9,	r10	;#0xfff7
    9c26:	4a de       	bis.b	r14,	r10	
    9c28:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    9c2c:	05 47       	mov	r7,	r5	
    9c2e:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9c32:	28 00 
    9c34:	53 3c       	jmp	$+168    	;abs 0x9cdc
    9c36:	d1 d3 01 00 	bis.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9c3a:	06 3c       	jmp	$+14     	;abs 0x9c48
    9c3c:	e1 d2 00 00 	bis.b	#4,	0(r1)	;r2 As==10, 0x0000(r1)
    9c40:	b1 40 0a 00 	mov	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9c44:	28 00 
    9c46:	03 3c       	jmp	$+8      	;abs 0x9c4e
    9c48:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9c4c:	28 00 
    9c4e:	6b 41       	mov.b	@r1,	r11	
    9c50:	6b b3       	bit.b	#2,	r11	;r3 As==10
    9c52:	24 24       	jz	$+74     	;abs 0x9c9c
    9c54:	0c 45       	mov	r5,	r12	
    9c56:	3c 52       	add	#8,	r12	;r2 As==11
    9c58:	28 45       	mov	@r5,	r8	
    9c5a:	17 45 02 00 	mov	2(r5),	r7	;0x0002(r5)
    9c5e:	16 45 04 00 	mov	4(r5),	r6	;0x0004(r5)
    9c62:	1b 45 06 00 	mov	6(r5),	r11	;0x0006(r5)
    9c66:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    9c6a:	81 47 20 00 	mov	r7,	32(r1)	;0x0020(r1)
    9c6e:	81 46 22 00 	mov	r6,	34(r1)	;0x0022(r1)
    9c72:	81 4b 24 00 	mov	r11,	36(r1)	;0x0024(r1)
    9c76:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9c7a:	08 93       	tst	r8		
    9c7c:	06 20       	jnz	$+14     	;abs 0x9c8a
    9c7e:	07 93       	tst	r7		
    9c80:	04 20       	jnz	$+10     	;abs 0x9c8a
    9c82:	06 93       	tst	r6		
    9c84:	02 20       	jnz	$+6      	;abs 0x9c8a
    9c86:	0b 93       	tst	r11		
    9c88:	02 24       	jz	$+6      	;abs 0x9c8e
    9c8a:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9c8e:	0b 5b       	rla	r11		
    9c90:	0b 43       	clr	r11		
    9c92:	0b 6b       	rlc	r11		
    9c94:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    9c98:	05 4c       	mov	r12,	r5	
    9c9a:	20 3c       	jmp	$+66     	;abs 0x9cdc
    9c9c:	5b f3       	and.b	#1,	r11	;r3 As==01
    9c9e:	07 45       	mov	r5,	r7	
    9ca0:	0d 24       	jz	$+28     	;abs 0x9cbc
    9ca2:	27 52       	add	#4,	r7	;r2 As==10
    9ca4:	28 45       	mov	@r5,	r8	
    9ca6:	1b 45 02 00 	mov	2(r5),	r11	;0x0002(r5)
    9caa:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    9cae:	81 4b 20 00 	mov	r11,	32(r1)	;0x0020(r1)
    9cb2:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9cb6:	08 93       	tst	r8		
    9cb8:	09 20       	jnz	$+20     	;abs 0x9ccc
    9cba:	06 3c       	jmp	$+14     	;abs 0x9cc8
    9cbc:	27 53       	incd	r7		
    9cbe:	2b 45       	mov	@r5,	r11	
    9cc0:	81 4b 1e 00 	mov	r11,	30(r1)	;0x001e(r1)
    9cc4:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9cc8:	0b 93       	tst	r11		
    9cca:	02 24       	jz	$+6      	;abs 0x9cd0
    9ccc:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9cd0:	0b 5b       	rla	r11		
    9cd2:	0b 43       	clr	r11		
    9cd4:	0b 6b       	rlc	r11		
    9cd6:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    9cda:	05 47       	mov	r7,	r5	
    9cdc:	f1 b2 00 00 	bit.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    9ce0:	12 24       	jz	$+38     	;abs 0x9d06
    9ce2:	c1 93 2b 00 	tst.b	43(r1)		;0x002b(r1)
    9ce6:	0f 20       	jnz	$+32     	;abs 0x9d06
    9ce8:	68 41       	mov.b	@r1,	r8	
    9cea:	b1 90 10 00 	cmp	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9cee:	28 00 
    9cf0:	03 20       	jnz	$+8      	;abs 0x9cf8
    9cf2:	78 d0 40 00 	bis.b	#64,	r8	;#0x0040
    9cf6:	05 3c       	jmp	$+12     	;abs 0x9d02
    9cf8:	b1 92 28 00 	cmp	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    9cfc:	04 20       	jnz	$+10     	;abs 0x9d06
    9cfe:	78 d0 20 00 	bis.b	#32,	r8	;#0x0020
    9d02:	c1 48 00 00 	mov.b	r8,	0(r1)	;0x0000(r1)
    9d06:	68 41       	mov.b	@r1,	r8	
    9d08:	68 b2       	bit.b	#4,	r8	;r2 As==10
    9d0a:	30 24       	jz	$+98     	;abs 0x9d6c
    9d0c:	c1 93 2f 00 	tst.b	47(r1)		;0x002f(r1)
    9d10:	2d 24       	jz	$+92     	;abs 0x9d6c
    9d12:	f1 40 2d 00 	mov.b	#45,	2(r1)	;#0x002d, 0x0002(r1)
    9d16:	02 00 
    9d18:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9d1a:	11 24       	jz	$+36     	;abs 0x9d3e
    9d1c:	b1 e3 1e 00 	xor	#-1,	30(r1)	;r3 As==11, 0x001e(r1)
    9d20:	b1 e3 20 00 	xor	#-1,	32(r1)	;r3 As==11, 0x0020(r1)
    9d24:	b1 e3 22 00 	xor	#-1,	34(r1)	;r3 As==11, 0x0022(r1)
    9d28:	b1 e3 24 00 	xor	#-1,	36(r1)	;r3 As==11, 0x0024(r1)
    9d2c:	91 53 1e 00 	inc	30(r1)		;0x001e(r1)
    9d30:	81 63 20 00 	adc	32(r1)		;0x0020(r1)
    9d34:	81 63 22 00 	adc	34(r1)		;0x0022(r1)
    9d38:	81 63 24 00 	adc	36(r1)		;0x0024(r1)
    9d3c:	17 3c       	jmp	$+48     	;abs 0x9d6c
    9d3e:	58 b3       	bit.b	#1,	r8	;r3 As==01
    9d40:	0f 24       	jz	$+32     	;abs 0x9d60
    9d42:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9d46:	1b 41 20 00 	mov	32(r1),	r11	;0x0020(r1)
    9d4a:	3a e3       	inv	r10		
    9d4c:	3b e3       	inv	r11		
    9d4e:	0e 4a       	mov	r10,	r14	
    9d50:	0f 4b       	mov	r11,	r15	
    9d52:	1e 53       	inc	r14		
    9d54:	0f 63       	adc	r15		
    9d56:	81 4e 1e 00 	mov	r14,	30(r1)	;0x001e(r1)
    9d5a:	81 4f 20 00 	mov	r15,	32(r1)	;0x0020(r1)
    9d5e:	06 3c       	jmp	$+14     	;abs 0x9d6c
    9d60:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9d64:	3a e3       	inv	r10		
    9d66:	1a 53       	inc	r10		
    9d68:	81 4a 1e 00 	mov	r10,	30(r1)	;0x001e(r1)
    9d6c:	c1 43 1b 00 	mov.b	#0,	27(r1)	;r3 As==00, 0x001b(r1)
    9d70:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9d72:	6a 24       	jz	$+214    	;abs 0x9e48
    9d74:	16 41 1e 00 	mov	30(r1),	r6	;0x001e(r1)
    9d78:	91 41 20 00 	mov	32(r1),	60(r1)	;0x0020(r1), 0x003c(r1)
    9d7c:	3c 00 
    9d7e:	18 41 22 00 	mov	34(r1),	r8	;0x0022(r1)
    9d82:	14 41 24 00 	mov	36(r1),	r4	;0x0024(r1)
    9d86:	07 41       	mov	r1,	r7	
    9d88:	37 50 1a 00 	add	#26,	r7	;#0x001a
    9d8c:	09 46       	mov	r6,	r9	
    9d8e:	91 41 28 00 	mov	40(r1),	50(r1)	;0x0028(r1), 0x0032(r1)
    9d92:	32 00 
    9d94:	1b 41 28 00 	mov	40(r1),	r11	;0x0028(r1)
    9d98:	8b 10       	swpb	r11		
    9d9a:	8b 11       	sxt	r11		
    9d9c:	8b 10       	swpb	r11		
    9d9e:	8b 11       	sxt	r11		
    9da0:	81 4b 34 00 	mov	r11,	52(r1)	;0x0034(r1)
    9da4:	81 4b 36 00 	mov	r11,	54(r1)	;0x0036(r1)
    9da8:	81 4b 38 00 	mov	r11,	56(r1)	;0x0038(r1)
    9dac:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9db0:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9db4:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9db8:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9dbc:	0c 49       	mov	r9,	r12	
    9dbe:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9dc2:	0e 48       	mov	r8,	r14	
    9dc4:	0f 44       	mov	r4,	r15	
    9dc6:	b0 12 26 a1 	call	#0xa126	
    9dca:	31 52       	add	#8,	r1	;r2 As==11
    9dcc:	0b 4c       	mov	r12,	r11	
    9dce:	3c 90 0a 00 	cmp	#10,	r12	;#0x000a
    9dd2:	05 34       	jge	$+12     	;abs 0x9dde
    9dd4:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    9dd8:	c7 4b 00 00 	mov.b	r11,	0(r7)	;0x0000(r7)
    9ddc:	0c 3c       	jmp	$+26     	;abs 0x9df6
    9dde:	4b 4c       	mov.b	r12,	r11	
    9de0:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9de4:	03 24       	jz	$+8      	;abs 0x9dec
    9de6:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    9dea:	02 3c       	jmp	$+6      	;abs 0x9df0
    9dec:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    9df0:	4a 5b       	add.b	r11,	r10	
    9df2:	c7 4a 00 00 	mov.b	r10,	0(r7)	;0x0000(r7)
    9df6:	06 47       	mov	r7,	r6	
    9df8:	36 53       	add	#-1,	r6	;r3 As==11
    9dfa:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9dfe:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9e02:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9e06:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9e0a:	0c 49       	mov	r9,	r12	
    9e0c:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9e10:	0e 48       	mov	r8,	r14	
    9e12:	0f 44       	mov	r4,	r15	
    9e14:	b0 12 00 a1 	call	#0xa100	
    9e18:	31 52       	add	#8,	r1	;r2 As==11
    9e1a:	09 4c       	mov	r12,	r9	
    9e1c:	81 4d 3c 00 	mov	r13,	60(r1)	;0x003c(r1)
    9e20:	08 4e       	mov	r14,	r8	
    9e22:	04 4f       	mov	r15,	r4	
    9e24:	37 53       	add	#-1,	r7	;r3 As==11
    9e26:	0c 93       	tst	r12		
    9e28:	b2 23       	jnz	$-154    	;abs 0x9d8e
    9e2a:	0d 93       	tst	r13		
    9e2c:	b0 23       	jnz	$-158    	;abs 0x9d8e
    9e2e:	0e 93       	tst	r14		
    9e30:	ae 23       	jnz	$-162    	;abs 0x9d8e
    9e32:	0f 93       	tst	r15		
    9e34:	ac 23       	jnz	$-166    	;abs 0x9d8e
    9e36:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9e3a:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    9e3e:	81 43 22 00 	mov	#0,	34(r1)	;r3 As==00, 0x0022(r1)
    9e42:	81 43 24 00 	mov	#0,	36(r1)	;r3 As==00, 0x0024(r1)
    9e46:	6c 3c       	jmp	$+218    	;abs 0x9f20
    9e48:	58 b3       	bit.b	#1,	r8	;r3 As==01
    9e4a:	3e 24       	jz	$+126    	;abs 0x9ec8
    9e4c:	14 41 1e 00 	mov	30(r1),	r4	;0x001e(r1)
    9e50:	17 41 20 00 	mov	32(r1),	r7	;0x0020(r1)
    9e54:	08 41       	mov	r1,	r8	
    9e56:	38 50 1a 00 	add	#26,	r8	;#0x001a
    9e5a:	19 41 28 00 	mov	40(r1),	r9	;0x0028(r1)
    9e5e:	89 10       	swpb	r9		
    9e60:	89 11       	sxt	r9		
    9e62:	89 10       	swpb	r9		
    9e64:	89 11       	sxt	r9		
    9e66:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9e6a:	0d 49       	mov	r9,	r13	
    9e6c:	0e 44       	mov	r4,	r14	
    9e6e:	0f 47       	mov	r7,	r15	
    9e70:	b0 12 98 a0 	call	#0xa098	
    9e74:	0b 4e       	mov	r14,	r11	
    9e76:	3e 90 0a 00 	cmp	#10,	r14	;#0x000a
    9e7a:	05 34       	jge	$+12     	;abs 0x9e86
    9e7c:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    9e80:	c8 4b 00 00 	mov.b	r11,	0(r8)	;0x0000(r8)
    9e84:	0c 3c       	jmp	$+26     	;abs 0x9e9e
    9e86:	4b 4e       	mov.b	r14,	r11	
    9e88:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9e8c:	03 24       	jz	$+8      	;abs 0x9e94
    9e8e:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    9e92:	02 3c       	jmp	$+6      	;abs 0x9e98
    9e94:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    9e98:	4a 5b       	add.b	r11,	r10	
    9e9a:	c8 4a 00 00 	mov.b	r10,	0(r8)	;0x0000(r8)
    9e9e:	06 48       	mov	r8,	r6	
    9ea0:	36 53       	add	#-1,	r6	;r3 As==11
    9ea2:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9ea6:	0d 49       	mov	r9,	r13	
    9ea8:	0e 44       	mov	r4,	r14	
    9eaa:	0f 47       	mov	r7,	r15	
    9eac:	b0 12 62 a0 	call	#0xa062	
    9eb0:	04 4e       	mov	r14,	r4	
    9eb2:	07 4f       	mov	r15,	r7	
    9eb4:	38 53       	add	#-1,	r8	;r3 As==11
    9eb6:	0e 93       	tst	r14		
    9eb8:	d0 23       	jnz	$-94     	;abs 0x9e5a
    9eba:	0f 93       	tst	r15		
    9ebc:	ce 23       	jnz	$-98     	;abs 0x9e5a
    9ebe:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9ec2:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    9ec6:	2c 3c       	jmp	$+90     	;abs 0x9f20
    9ec8:	17 41 1e 00 	mov	30(r1),	r7	;0x001e(r1)
    9ecc:	08 41       	mov	r1,	r8	
    9ece:	38 50 1a 00 	add	#26,	r8	;#0x001a
    9ed2:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    9ed6:	0f 47       	mov	r7,	r15	
    9ed8:	b0 12 5a a0 	call	#0xa05a	
    9edc:	0d 4f       	mov	r15,	r13	
    9ede:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    9ee2:	05 34       	jge	$+12     	;abs 0x9eee
    9ee4:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    9ee8:	c8 4d 00 00 	mov.b	r13,	0(r8)	;0x0000(r8)
    9eec:	0c 3c       	jmp	$+26     	;abs 0x9f06
    9eee:	4d 4f       	mov.b	r15,	r13	
    9ef0:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9ef4:	03 24       	jz	$+8      	;abs 0x9efc
    9ef6:	7c 40 37 00 	mov.b	#55,	r12	;#0x0037
    9efa:	02 3c       	jmp	$+6      	;abs 0x9f00
    9efc:	7c 40 57 00 	mov.b	#87,	r12	;#0x0057
    9f00:	4c 5d       	add.b	r13,	r12	
    9f02:	c8 4c 00 00 	mov.b	r12,	0(r8)	;0x0000(r8)
    9f06:	06 48       	mov	r8,	r6	
    9f08:	36 53       	add	#-1,	r6	;r3 As==11
    9f0a:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    9f0e:	0f 47       	mov	r7,	r15	
    9f10:	b0 12 40 a0 	call	#0xa040	
    9f14:	07 4f       	mov	r15,	r7	
    9f16:	38 53       	add	#-1,	r8	;r3 As==11
    9f18:	0f 93       	tst	r15		
    9f1a:	db 23       	jnz	$-72     	;abs 0x9ed2
    9f1c:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9f20:	b1 90 0a 00 	cmp	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9f24:	28 00 
    9f26:	02 24       	jz	$+6      	;abs 0x9f2c
    9f28:	c1 43 02 00 	mov.b	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    9f2c:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9f30:	2a 24       	jz	$+86     	;abs 0x9f86
    9f32:	0f 41       	mov	r1,	r15	
    9f34:	3f 50 1c 00 	add	#28,	r15	;#0x001c
    9f38:	81 4f 42 00 	mov	r15,	66(r1)	;0x0042(r1)
    9f3c:	1a 41 1c 00 	mov	28(r1),	r10	;0x001c(r1)
    9f40:	8a 10       	swpb	r10		
    9f42:	8a 11       	sxt	r10		
    9f44:	8a 10       	swpb	r10		
    9f46:	8a 11       	sxt	r10		
    9f48:	81 4a 44 00 	mov	r10,	68(r1)	;0x0044(r1)
    9f4c:	81 46 46 00 	mov	r6,	70(r1)	;0x0046(r1)
    9f50:	0a 46       	mov	r6,	r10	
    9f52:	8a 10       	swpb	r10		
    9f54:	8a 11       	sxt	r10		
    9f56:	8a 10       	swpb	r10		
    9f58:	8a 11       	sxt	r10		
    9f5a:	81 4a 48 00 	mov	r10,	72(r1)	;0x0048(r1)
    9f5e:	1c 41 42 00 	mov	66(r1),	r12	;0x0042(r1)
    9f62:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9f66:	1c 81 46 00 	sub	70(r1),	r12	;0x0046(r1)
    9f6a:	1d 71 48 00 	subc	72(r1),	r13	;0x0048(r1)
    9f6e:	2c 83       	decd	r12		
    9f70:	1c 91 26 00 	cmp	38(r1),	r12	;0x0026(r1)
    9f74:	0e 2c       	jc	$+30     	;abs 0x9f92
    9f76:	e1 d3 01 00 	bis.b	#2,	1(r1)	;r3 As==10, 0x0001(r1)
    9f7a:	5e 41 26 00 	mov.b	38(r1),	r14	;0x0026(r1)
    9f7e:	4e 8c       	sub.b	r12,	r14	
    9f80:	c1 4e 03 00 	mov.b	r14,	3(r1)	;0x0003(r1)
    9f84:	06 3c       	jmp	$+14     	;abs 0x9f92
    9f86:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9f8a:	03 24       	jz	$+8      	;abs 0x9f92
    9f8c:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9f90:	30 00 
    9f92:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9f96:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9f9a:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9f9e:	0e 46       	mov	r6,	r14	
    9fa0:	1e 53       	inc	r14		
    9fa2:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9fa6:	b0 12 de 97 	call	#0x97de	
    9faa:	21 52       	add	#4,	r1	;r2 As==10
    9fac:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    9fb0:	0d 3c       	jmp	$+28     	;abs 0x9fcc
    9fb2:	7f 49       	mov.b	@r9+,	r15	
    9fb4:	8f 11       	sxt	r15		
    9fb6:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    9fba:	0e 49       	mov	r9,	r14	
    9fbc:	0e 58       	add	r8,	r14	
    9fbe:	19 91 40 00 	cmp	64(r1),	r9	;0x0040(r1)
    9fc2:	f7 2b       	jnc	$-16     	;abs 0x9fb2
    9fc4:	81 49 3e 00 	mov	r9,	62(r1)	;0x003e(r1)
    9fc8:	81 4e 2c 00 	mov	r14,	44(r1)	;0x002c(r1)
    9fcc:	07 43       	clr	r7		
    9fce:	0e 3c       	jmp	$+30     	;abs 0x9fec
    9fd0:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9fd4:	30 00 
    9fd6:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9fda:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9fde:	03 3c       	jmp	$+8      	;abs 0x9fe6
    9fe0:	05 4e       	mov	r14,	r5	
    9fe2:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9fe6:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    9fea:	17 43       	mov	#1,	r7	;r3 As==01
    9fec:	16 41 40 00 	mov	64(r1),	r6	;0x0040(r1)
    9ff0:	6e 46       	mov.b	@r6,	r14	
    9ff2:	4e 93       	tst.b	r14		
    9ff4:	02 24       	jz	$+6      	;abs 0x9ffa
    9ff6:	30 40 c2 99 	br	#0x99c2	
    9ffa:	1f 41 2c 00 	mov	44(r1),	r15	;0x002c(r1)
    9ffe:	31 50 4a 00 	add	#74,	r1	;#0x004a
    a002:	34 41       	pop	r4		
    a004:	35 41       	pop	r5		
    a006:	36 41       	pop	r6		
    a008:	37 41       	pop	r7		
    a00a:	38 41       	pop	r8		
    a00c:	39 41       	pop	r9		
    a00e:	3a 41       	pop	r10		
    a010:	3b 41       	pop	r11		
    a012:	30 41       	ret			

0000a014 <puts>:
    a014:	0b 12       	push	r11		
    a016:	0b 4f       	mov	r15,	r11	
    a018:	6f 4b       	mov.b	@r11,	r15	
    a01a:	4f 93       	tst.b	r15		
    a01c:	06 24       	jz	$+14     	;abs 0xa02a
    a01e:	1b 53       	inc	r11		
    a020:	8f 11       	sxt	r15		
    a022:	b0 12 7a 96 	call	#0x967a	
    a026:	0f 93       	tst	r15		
    a028:	f7 37       	jge	$-16     	;abs 0xa018
    a02a:	cb 93 00 00 	tst.b	0(r11)		;0x0000(r11)
    a02e:	05 20       	jnz	$+12     	;abs 0xa03a
    a030:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    a034:	b0 12 7a 96 	call	#0x967a	
    a038:	01 3c       	jmp	$+4      	;abs 0xa03c
    a03a:	3f 43       	mov	#-1,	r15	;r3 As==11
    a03c:	3b 41       	pop	r11		
    a03e:	30 41       	ret			

0000a040 <__udivhi3>:
    a040:	7c 40 10 00 	mov.b	#16,	r12	;#0x0010
    a044:	0d 4e       	mov	r14,	r13	
    a046:	0e 43       	clr	r14		
    a048:	0f 5f       	rla	r15		
    a04a:	0e 6e       	rlc	r14		
    a04c:	0e 9d       	cmp	r13,	r14	
    a04e:	02 28       	jnc	$+6      	;abs 0xa054
    a050:	0e 8d       	sub	r13,	r14	
    a052:	1f d3       	bis	#1,	r15	;r3 As==01
    a054:	1c 83       	dec	r12		
    a056:	f8 23       	jnz	$-14     	;abs 0xa048
    a058:	30 41       	ret			

0000a05a <__umodhi3>:
    a05a:	b0 12 40 a0 	call	#0xa040	
    a05e:	0f 4e       	mov	r14,	r15	
    a060:	30 41       	ret			

0000a062 <__udivsi3>:
    a062:	0b 12       	push	r11		
    a064:	0a 12       	push	r10		
    a066:	09 12       	push	r9		
    a068:	79 40 20 00 	mov.b	#32,	r9	;#0x0020
    a06c:	0a 4c       	mov	r12,	r10	
    a06e:	0b 4d       	mov	r13,	r11	
    a070:	0c 43       	clr	r12		
    a072:	0d 43       	clr	r13		
    a074:	0e 5e       	rla	r14		
    a076:	0f 6f       	rlc	r15		
    a078:	0c 6c       	rlc	r12		
    a07a:	0d 6d       	rlc	r13		
    a07c:	0d 9b       	cmp	r11,	r13	
    a07e:	06 28       	jnc	$+14     	;abs 0xa08c
    a080:	02 20       	jnz	$+6      	;abs 0xa086
    a082:	0c 9a       	cmp	r10,	r12	
    a084:	03 28       	jnc	$+8      	;abs 0xa08c
    a086:	0c 8a       	sub	r10,	r12	
    a088:	0d 7b       	subc	r11,	r13	
    a08a:	1e d3       	bis	#1,	r14	;r3 As==01
    a08c:	19 83       	dec	r9		
    a08e:	f2 23       	jnz	$-26     	;abs 0xa074
    a090:	39 41       	pop	r9		
    a092:	3a 41       	pop	r10		
    a094:	3b 41       	pop	r11		
    a096:	30 41       	ret			

0000a098 <__umodsi3>:
    a098:	b0 12 62 a0 	call	#0xa062	
    a09c:	0e 4c       	mov	r12,	r14	
    a09e:	0f 4d       	mov	r13,	r15	
    a0a0:	30 41       	ret			

0000a0a2 <__xabi_udivmod64>:
    a0a2:	07 12       	push	r7		
    a0a4:	06 12       	push	r6		
    a0a6:	05 12       	push	r5		
    a0a8:	04 12       	push	r4		
    a0aa:	30 12 40 00 	push	#64		;#0x0040
    a0ae:	04 48       	mov	r8,	r4	
    a0b0:	05 49       	mov	r9,	r5	
    a0b2:	06 4a       	mov	r10,	r6	
    a0b4:	07 4b       	mov	r11,	r7	
    a0b6:	08 43       	clr	r8		
    a0b8:	09 43       	clr	r9		
    a0ba:	0a 43       	clr	r10		
    a0bc:	0b 43       	clr	r11		
    a0be:	0c 5c       	rla	r12		
    a0c0:	0d 6d       	rlc	r13		
    a0c2:	0e 6e       	rlc	r14		
    a0c4:	0f 6f       	rlc	r15		
    a0c6:	08 68       	rlc	r8		
    a0c8:	09 69       	rlc	r9		
    a0ca:	0a 6a       	rlc	r10		
    a0cc:	0b 6b       	rlc	r11		
    a0ce:	0b 97       	cmp	r7,	r11	
    a0d0:	0e 28       	jnc	$+30     	;abs 0xa0ee
    a0d2:	08 20       	jnz	$+18     	;abs 0xa0e4
    a0d4:	0a 96       	cmp	r6,	r10	
    a0d6:	0b 28       	jnc	$+24     	;abs 0xa0ee
    a0d8:	05 20       	jnz	$+12     	;abs 0xa0e4
    a0da:	09 95       	cmp	r5,	r9	
    a0dc:	08 28       	jnc	$+18     	;abs 0xa0ee
    a0de:	02 20       	jnz	$+6      	;abs 0xa0e4
    a0e0:	08 94       	cmp	r4,	r8	
    a0e2:	05 28       	jnc	$+12     	;abs 0xa0ee
    a0e4:	08 84       	sub	r4,	r8	
    a0e6:	09 75       	subc	r5,	r9	
    a0e8:	0a 76       	subc	r6,	r10	
    a0ea:	0b 77       	subc	r7,	r11	
    a0ec:	1c d3       	bis	#1,	r12	;r3 As==01
    a0ee:	91 83 00 00 	dec	0(r1)		;0x0000(r1)
    a0f2:	e5 23       	jnz	$-52     	;abs 0xa0be
    a0f4:	21 53       	incd	r1		
    a0f6:	34 41       	pop	r4		
    a0f8:	35 41       	pop	r5		
    a0fa:	36 41       	pop	r6		
    a0fc:	37 41       	pop	r7		
    a0fe:	30 41       	ret			

0000a100 <__udivdi3>:
    a100:	0b 12       	push	r11		
    a102:	0a 12       	push	r10		
    a104:	09 12       	push	r9		
    a106:	08 12       	push	r8		
    a108:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a10c:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a110:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a114:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a118:	b0 12 a2 a0 	call	#0xa0a2	
    a11c:	38 41       	pop	r8		
    a11e:	39 41       	pop	r9		
    a120:	3a 41       	pop	r10		
    a122:	3b 41       	pop	r11		
    a124:	30 41       	ret			

0000a126 <__umoddi3>:
    a126:	0b 12       	push	r11		
    a128:	0a 12       	push	r10		
    a12a:	09 12       	push	r9		
    a12c:	08 12       	push	r8		
    a12e:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a132:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a136:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a13a:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a13e:	b0 12 a2 a0 	call	#0xa0a2	
    a142:	0c 48       	mov	r8,	r12	
    a144:	0d 49       	mov	r9,	r13	
    a146:	0e 4a       	mov	r10,	r14	
    a148:	0f 4b       	mov	r11,	r15	
    a14a:	38 41       	pop	r8		
    a14c:	39 41       	pop	r9		
    a14e:	3a 41       	pop	r10		
    a150:	3b 41       	pop	r11		
    a152:	30 41       	ret			

0000a154 <__udivmoddi4>:
    a154:	0b 12       	push	r11		
    a156:	0a 12       	push	r10		
    a158:	09 12       	push	r9		
    a15a:	08 12       	push	r8		
    a15c:	07 12       	push	r7		
    a15e:	18 41 0c 00 	mov	12(r1),	r8	;0x000c(r1)
    a162:	19 41 0e 00 	mov	14(r1),	r9	;0x000e(r1)
    a166:	1a 41 10 00 	mov	16(r1),	r10	;0x0010(r1)
    a16a:	1b 41 12 00 	mov	18(r1),	r11	;0x0012(r1)
    a16e:	b0 12 a2 a0 	call	#0xa0a2	
    a172:	17 41 14 00 	mov	20(r1),	r7	;0x0014(r1)
    a176:	87 48 00 00 	mov	r8,	0(r7)	;0x0000(r7)
    a17a:	87 49 02 00 	mov	r9,	2(r7)	;0x0002(r7)
    a17e:	87 4a 04 00 	mov	r10,	4(r7)	;0x0004(r7)
    a182:	87 4b 06 00 	mov	r11,	6(r7)	;0x0006(r7)
    a186:	37 41       	pop	r7		
    a188:	38 41       	pop	r8		
    a18a:	39 41       	pop	r9		
    a18c:	3a 41       	pop	r10		
    a18e:	3b 41       	pop	r11		
    a190:	30 41       	ret			

0000a192 <_unexpected_>:
    a192:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	58 80 58 80 58 80 1a 8e 58 80 58 80 58 80 1c 97     X.X.X...X.X.X...
    fff0:	58 80 18 94 58 80 58 80 58 80 fc 94 58 80 00 80     X...X.X.X...X...
