
bin/serial.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
0000921e l    d  .rodata	00000000 .rodata
00000200 l    d  .bss	00000000 .bss
00000212 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main.c
00008114 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 clock.c
00000200 l     O .bss	00000002 mclk_freq_mhz
00008292 l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 uart.c
00000202 l     O .bss	00000002 uart_cb
00000000 l    df *ABS*	00000000 watchdog.c
00000204 l     O .bss	00000002 watchdog_backup
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vuprintf.c
00008868 l     F .text	00000198 print_field
00000000 l    df *ABS*	00000000 puts.c
00008704 g     F .text	00000032 putchar
00000057 g       *ABS*	00000000 __BCSCTL1
000083fc g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000174 g       *ABS*	00000000 __TACCR1
00000000 g       *ABS*	00000000 __data_size
00008114  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
000083d4 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
0000004b g       *ABS*	00000000 __ADC10AE1
0000884a g     F .text	00000010 printf
00000069 g       *ABS*	00000000 __UCB0CTL1
00008114  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
00000060 g       *ABS*	00000000 __UCA0CTL0
00008376 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
0000012e g       *ABS*	00000000 __TAIV
000086fa g     F .text	0000000a uart_stop
000081fe g     F .text	00000086 execcmd
00000000 g       .vectors	00000000 _efartext
000090ca g     F .text	00000000 __udivhi3
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
0000931e g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000817c g     F .text	00000066 serial_ring_get
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
0000001d g       *ABS*	00000000 __P4OUT
00000012 g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
0000844c g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
0000810e  w      .text	00000000 __stop_progExec__
00008118 g     F .text	00000016 serial_ring_init
0000002d g       *ABS*	00000000 __P2IE
0000909e g     F .text	0000002c puts
00008754 g     F .text	00000014 uart_eint
00000192 g       *ABS*	00000000 __TBCCR0
00008114  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
000083c0 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
000090ec g     F .text	00000000 __udivsi3
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
00000049 g       *ABS*	00000000 __ADC10DTC1
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
0000839a g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
000091de g       .text	00000000 __udivmoddi4
00008424 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
00000206 g     O .bss	00000001 serial_rx_size
00000182 g       *ABS*	00000000 __TBCCTL0
0000006d g       *ABS*	00000000 __UCB0STAT
00008114  w      .text	00000000 __isr_5
00000207 g     O .bss	00000001 serial_rx_rptr
00000063 g       *ABS*	00000000 __UCA0BR1
000091b0 g     F .text	00000000 __umoddi3
0000931e g       *ABS*	00000000 __data_load_start
00008622 g     F .text	00000016 leds_on
00008114 g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
000085ba g     F .text	00000014 led_green_switch
000001bc g       *ABS*	00000000 __ADC10SA
00000166 g       *ABS*	00000000 __TACCTL2
0000918a g     F .text	00000000 __udivdi3
00000065 g       *ABS*	00000000 __UCA0STAT
00008590 g     F .text	00000016 led_green_off
00008114  w      .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
0000012c g       *ABS*	00000000 __FCTL3
00008114  w      .text	00000000 __isr_10
00008284 g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
00008388 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
000085e4 g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
0000860c g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
00000212 g     O .noinit	00000002 __wdt_clear_value
00008736 g     F .text	0000001e uart_getchar
0000001b g       *ABS*	00000000 __P3SEL
000087a6 g       .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
00009122 g     F .text	00000000 __umodsi3
0000885a g     F .text	0000000e vprintf
00000028 g       *ABS*	00000000 __P2IN
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
000085ce g     F .text	00000016 led_red_off
000090e4 g     F .text	00000000 __umodhi3
00008114  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
0000866a g     F .text	00000090 uart_init
00008028  w      .text	00000000 __do_clear_bss
00008768 g     F .text	00000016 uart_dint
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
00008410 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
000087fa g     F .text	0000001c watchdog_stop
00008352 g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
000083e8 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
000090ec g       .text	00000000 __ext_udivmod32
00000027 g       *ABS*	00000000 __P1REN
0000877e g     F .text	00000028 uart_register_cb
000000c0 g       *ABS*	00000000 __OA0CTL0
00008438 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
0000921c  w      .text	00000000 _unexpected_
00000208 g     O .bss	00000008 serial_rx_buffer
00008114  w      .text	00000000 __isr_8
00008114  w      .text	00000000 __isr_3
00008a00 g     F .text	0000069e vuprintf
000085f8 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
000090ca g       .text	00000000 __ext_udivmod16
00008000  w      .text	00000000 _reset_vector__
00008114 g       .text	00000000 __ctors_start
0000912c g       .text	00000000 __xabi_udivmod64
00008114  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	000000d0 main
00000176 g       *ABS*	00000000 __TACCR2
00008502 g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
00008114  w      .text	00000000 __isr_13
0000845c g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
000087a6 g     F .text	00000054 usart0irq
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
0000882c g     F .text	0000001e strcmp
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
00008114  w      .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
000083ac g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
0000812e g     F .text	0000004e serial_ring_put
00008114 g       .text	00000000 __dtors_start
00008114  w      .text	00000000 __isr_6
00008114 g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
00008364 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
00008114  w      .text	00000000 __isr_1
00000200 g       .rodata	00000000 _edata
00000214 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
00000210 g     O .bss	00000001 serial_rx_wptr
000085a6 g     F .text	00000014 led_green_on
00008816 g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
0000810e  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
00000200 g       .rodata	00000000 __data_start
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
000081e2 g     F .text	0000001c serial_cb
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
00008638 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 12 02 	mov	r5,	&0x0212	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 12 02 	mov	&0x0212,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f 1e 93 	mov	-27874(r15),512(r15);0x931e(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 12 00 	mov	#18,	r15	;#0x0012
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 12 02 	mov	&0x0212,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:
  }
  printf("\n");
}

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
    8042:	31 50 da ff 	add	#-38,	r1	;#0xffda
  uint8_t data;
  char cmd[CMD_SIZE];
  int i=0;
    8046:	84 43 d8 ff 	mov	#0,	-40(r4)	;r3 As==00, 0xffd8(r4)
  int j;
  watchdog_stop();
    804a:	b0 12 fa 87 	call	#0x87fa	

  set_mcu_speed_dco_mclk_16MHz_smclk_8MHz();
    804e:	b0 12 10 84 	call	#0x8410	

  leds_init();
    8052:	b0 12 38 86 	call	#0x8638	

  led_red_on();
    8056:	b0 12 e4 85 	call	#0x85e4	

  uart_init(UART_9600_SMCLK_8MHZ);
    805a:	3f 42       	mov	#8,	r15	;r2 As==11
    805c:	b0 12 6a 86 	call	#0x866a	
  serial_ring_init();
    8060:	b0 12 18 81 	call	#0x8118	
  uart_register_cb( serial_cb);
    8064:	3f 40 e2 81 	mov	#-32286,r15	;#0x81e2
    8068:	b0 12 7e 87 	call	#0x877e	

  printf("serial test application: echo\n");
    806c:	3f 40 cc 92 	mov	#-27956,r15	;#0x92cc
    8070:	b0 12 9e 90 	call	#0x909e	
  led_green_on();
    8074:	b0 12 a6 85 	call	#0x85a6	
  eint();
    8078:	32 d2       	eint			

  for(;;)
  {
    LPM(1);
    807a:	32 d0 50 00 	bis	#80,	r2	;#0x0050
    if (serial_ring_get(&data))
    807e:	0f 44       	mov	r4,	r15	
    8080:	3f 50 dc ff 	add	#-36,	r15	;#0xffdc
    8084:	b0 12 7c 81 	call	#0x817c	
    8088:	0f 93       	tst	r15		
    808a:	3a 24       	jz	$+118    	;abs 0x8100
    {
      if(data != '\r' && i<CMD_SIZE-1){
    808c:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    8090:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    8094:	16 24       	jz	$+46     	;abs 0x80c2
    8096:	b4 90 1f 00 	cmp	#31,	-40(r4)	;#0x001f, 0xffd8(r4)
    809a:	d8 ff 
    809c:	12 34       	jge	$+38     	;abs 0x80c2
        putchar(data);
    809e:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    80a2:	4f 4f       	mov.b	r15,	r15	
    80a4:	b0 12 04 87 	call	#0x8704	
        cmd[i]=data;
    80a8:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    80ac:	4e 4f       	mov.b	r15,	r14	
    80ae:	0f 44       	mov	r4,	r15	
    80b0:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80b4:	1f 54 d8 ff 	add	-40(r4),r15	;0xffd8(r4)
    80b8:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        i++;
    80bc:	94 53 d8 ff 	inc	-40(r4)	;0xffd8(r4)
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
      led_red_switch();
    }
  }
    80c0:	dc 3f       	jmp	$-70     	;abs 0x807a
        putchar(data);
        cmd[i]=data;
        i++;
      }
      else{
        cmd[i]='\0';
    80c2:	0f 44       	mov	r4,	r15	
    80c4:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80c8:	1f 54 d8 ff 	add	-40(r4),r15	;0xffd8(r4)
    80cc:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00, 0x0000(r15)
        execcmd(&cmd);
    80d0:	0f 44       	mov	r4,	r15	
    80d2:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80d6:	b0 12 fe 81 	call	#0x81fe	
        // Reset cmd
        for(j=0;j<CMD_SIZE;j++){
    80da:	84 43 da ff 	mov	#0,	-38(r4)	;r3 As==00, 0xffda(r4)
    80de:	09 3c       	jmp	$+20     	;abs 0x80f2
          cmd[j]=NULL;
    80e0:	0f 44       	mov	r4,	r15	
    80e2:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80e6:	1f 54 da ff 	add	-38(r4),r15	;0xffda(r4)
    80ea:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00, 0x0000(r15)
      }
      else{
        cmd[i]='\0';
        execcmd(&cmd);
        // Reset cmd
        for(j=0;j<CMD_SIZE;j++){
    80ee:	94 53 da ff 	inc	-38(r4)	;0xffda(r4)
    80f2:	b4 90 20 00 	cmp	#32,	-38(r4)	;#0x0020, 0xffda(r4)
    80f6:	da ff 
    80f8:	f3 3b       	jl	$-24     	;abs 0x80e0
          cmd[j]=NULL;
        }
        i=0;
    80fa:	84 43 d8 ff 	mov	#0,	-40(r4)	;r3 As==00, 0xffd8(r4)
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
      led_red_switch();
    }
  }
    80fe:	bd 3f       	jmp	$-132    	;abs 0x807a
        i=0;
      }
    }
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
    8100:	3f 40 ea 92 	mov	#-27926,r15	;#0x92ea
    8104:	b0 12 9e 90 	call	#0x909e	
      led_red_switch();
    8108:	b0 12 f8 85 	call	#0x85f8	
    }
  }
    810c:	b6 3f       	jmp	$-146    	;abs 0x807a

0000810e <__stop_progExec__>:
    810e:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    8112:	fd 3f       	jmp	$-4      	;abs 0x810e

00008114 <__ctors_end>:
    8114:	30 40 1c 92 	br	#0x921c	

00008118 <serial_ring_init>:
volatile uint8_t serial_rx_size;

/* ************************************************** */

void serial_ring_init()
{
    8118:	04 12       	push	r4		
    811a:	04 41       	mov	r1,	r4	
    811c:	24 53       	incd	r4		
  serial_rx_rptr = 0;
    811e:	c2 43 07 02 	mov.b	#0,	&0x0207	;r3 As==00
  serial_rx_wptr = 0;
    8122:	c2 43 10 02 	mov.b	#0,	&0x0210	;r3 As==00
  serial_rx_size = 0;
    8126:	c2 43 06 02 	mov.b	#0,	&0x0206	;r3 As==00
}
    812a:	34 41       	pop	r4		
    812c:	30 41       	ret			

0000812e <serial_ring_put>:

void serial_ring_put(uint8_t data)
{
    812e:	04 12       	push	r4		
    8130:	04 41       	mov	r1,	r4	
    8132:	24 53       	incd	r4		
    8134:	21 83       	decd	r1		
    8136:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
  serial_rx_buffer[serial_rx_wptr] = data;
    813a:	5f 42 10 02 	mov.b	&0x0210,r15	
    813e:	4f 4f       	mov.b	r15,	r15	
    8140:	df 44 fc ff 	mov.b	-4(r4),	520(r15);0xfffc(r4), 0x0208(r15)
    8144:	08 02 
  serial_rx_wptr = (serial_rx_wptr + 1) % SERIAL_RX_FIFO_SIZE;
    8146:	5f 42 10 02 	mov.b	&0x0210,r15	
    814a:	4f 4f       	mov.b	r15,	r15	
    814c:	1f 53       	inc	r15		
    814e:	3f f0 07 80 	and	#-32761,r15	;#0x8007
    8152:	0f 93       	tst	r15		
    8154:	04 34       	jge	$+10     	;abs 0x815e
    8156:	3f 53       	add	#-1,	r15	;r3 As==11
    8158:	3f d0 f8 ff 	bis	#-8,	r15	;#0xfff8
    815c:	1f 53       	inc	r15		
    815e:	4f 4f       	mov.b	r15,	r15	
    8160:	c2 4f 10 02 	mov.b	r15,	&0x0210	
  if (serial_rx_size < SERIAL_RX_FIFO_SIZE)
    8164:	5f 42 06 02 	mov.b	&0x0206,r15	
    8168:	7f 92       	cmp.b	#8,	r15	;r2 As==11
    816a:	05 2c       	jc	$+12     	;abs 0x8176
  {
    serial_rx_size ++;
    816c:	5f 42 06 02 	mov.b	&0x0206,r15	
    8170:	5f 53       	inc.b	r15		
    8172:	c2 4f 06 02 	mov.b	r15,	&0x0206	
    /* 
     * if (serial_rx_size == SERIAL_RX_FIFO_SIZE) 
     * we get a rx_overflow 
     */
  }
}
    8176:	21 53       	incd	r1		
    8178:	34 41       	pop	r4		
    817a:	30 41       	ret			

0000817c <serial_ring_get>:

int serial_ring_get(uint8_t *data)
{
    817c:	04 12       	push	r4		
    817e:	04 41       	mov	r1,	r4	
    8180:	24 53       	incd	r4		
    8182:	21 82       	sub	#4,	r1	;r2 As==10
    8184:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  int ret = 0;
    8188:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
  dint();
    818c:	32 c2       	dint			
    818e:	03 43       	nop			
  if (serial_rx_size > 0)
    8190:	5f 42 06 02 	mov.b	&0x0206,r15	
    8194:	4f 93       	tst.b	r15		
    8196:	1f 24       	jz	$+64     	;abs 0x81d6
  {
    *data = serial_rx_buffer[serial_rx_rptr];
    8198:	5f 42 07 02 	mov.b	&0x0207,r15	
    819c:	4f 4f       	mov.b	r15,	r15	
    819e:	5e 4f 08 02 	mov.b	520(r15),r14	;0x0208(r15)
    81a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81a6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    serial_rx_rptr = (serial_rx_rptr + 1) % SERIAL_RX_FIFO_SIZE;
    81aa:	5f 42 07 02 	mov.b	&0x0207,r15	
    81ae:	4f 4f       	mov.b	r15,	r15	
    81b0:	1f 53       	inc	r15		
    81b2:	3f f0 07 80 	and	#-32761,r15	;#0x8007
    81b6:	0f 93       	tst	r15		
    81b8:	04 34       	jge	$+10     	;abs 0x81c2
    81ba:	3f 53       	add	#-1,	r15	;r3 As==11
    81bc:	3f d0 f8 ff 	bis	#-8,	r15	;#0xfff8
    81c0:	1f 53       	inc	r15		
    81c2:	4f 4f       	mov.b	r15,	r15	
    81c4:	c2 4f 07 02 	mov.b	r15,	&0x0207	
    serial_rx_size --;
    81c8:	5f 42 06 02 	mov.b	&0x0206,r15	
    81cc:	7f 53       	add.b	#-1,	r15	;r3 As==11
    81ce:	c2 4f 06 02 	mov.b	r15,	&0x0206	
    ret = 1;
    81d2:	94 43 fa ff 	mov	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
  }
  eint();
    81d6:	32 d2       	eint			
  return ret;
    81d8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
}
    81dc:	21 52       	add	#4,	r1	;r2 As==10
    81de:	34 41       	pop	r4		
    81e0:	30 41       	ret			

000081e2 <serial_cb>:
/* ************************************************** */
/* ************************************************** */
/* ************************************************** */

int serial_cb(unsigned char data)
{
    81e2:	04 12       	push	r4		
    81e4:	04 41       	mov	r1,	r4	
    81e6:	24 53       	incd	r4		
    81e8:	21 83       	decd	r1		
    81ea:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
  serial_ring_put(data);
    81ee:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    81f2:	b0 12 2e 81 	call	#0x812e	
  return 1; /* will wakeup from LPMx */
    81f6:	1f 43       	mov	#1,	r15	;r3 As==01
}
    81f8:	21 53       	incd	r1		
    81fa:	34 41       	pop	r4		
    81fc:	30 41       	ret			

000081fe <execcmd>:

void execcmd(char cmd[]){
    81fe:	04 12       	push	r4		
    8200:	04 41       	mov	r1,	r4	
    8202:	24 53       	incd	r4		
    8204:	21 83       	decd	r1		
    8206:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  
  if(strcmp(cmd, "test") == 0){
    820a:	3e 40 1e 92 	mov	#-28130,r14	;#0x921e
    820e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8212:	b0 12 2c 88 	call	#0x882c	
    8216:	0f 93       	tst	r15		
    8218:	06 20       	jnz	$+14     	;abs 0x8226
    printf("\nHello World");
    821a:	30 12 23 92 	push	#-28125	;#0x9223
    821e:	b0 12 4a 88 	call	#0x884a	
    8222:	21 53       	incd	r1		
    8224:	28 3c       	jmp	$+82     	;abs 0x8276
  }
  else if(strcmp(cmd, "help") == 0){
    8226:	3e 40 30 92 	mov	#-28112,r14	;#0x9230
    822a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    822e:	b0 12 2c 88 	call	#0x882c	
    8232:	0f 93       	tst	r15		
    8234:	05 20       	jnz	$+12     	;abs 0x8240
    printf("\ntest   : Hello World\ngreen led on : Turn green led on\ngreen led on : Turn green led off\n");
    8236:	3f 40 35 92 	mov	#-28107,r15	;#0x9235
    823a:	b0 12 9e 90 	call	#0x909e	
    823e:	1b 3c       	jmp	$+56     	;abs 0x8276
  }
  else if(strcmp(cmd, "green led on") == 0){
    8240:	3e 40 8e 92 	mov	#-28018,r14	;#0x928e
    8244:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8248:	b0 12 2c 88 	call	#0x882c	
    824c:	0f 93       	tst	r15		
    824e:	03 20       	jnz	$+8      	;abs 0x8256
    led_green_on();
    8250:	b0 12 a6 85 	call	#0x85a6	
    8254:	10 3c       	jmp	$+34     	;abs 0x8276
  }
  else if(strcmp(cmd, "green led off") == 0){
    8256:	3e 40 9b 92 	mov	#-28005,r14	;#0x929b
    825a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    825e:	b0 12 2c 88 	call	#0x882c	
    8262:	0f 93       	tst	r15		
    8264:	03 20       	jnz	$+8      	;abs 0x826c
    led_green_off();
    8266:	b0 12 90 85 	call	#0x8590	
    826a:	05 3c       	jmp	$+12     	;abs 0x8276
  }
  else{
    printf("\nCommande inconnue : help for help");
    826c:	30 12 a9 92 	push	#-27991	;#0x92a9
    8270:	b0 12 4a 88 	call	#0x884a	
    8274:	21 53       	incd	r1		
  }
  printf("\n");
    8276:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    827a:	b0 12 04 87 	call	#0x8704	
}
    827e:	21 53       	incd	r1		
    8280:	34 41       	pop	r4		
    8282:	30 41       	ret			

00008284 <get_mclk_freq_mhz>:
    8284:	04 12       	push	r4		
    8286:	04 41       	mov	r1,	r4	
    8288:	24 53       	incd	r4		
    828a:	1f 42 00 02 	mov	&0x0200,r15	
    828e:	34 41       	pop	r4		
    8290:	30 41       	ret			

00008292 <set_mcu_speed>:
    8292:	04 12       	push	r4		
    8294:	04 41       	mov	r1,	r4	
    8296:	24 53       	incd	r4		
    8298:	21 83       	decd	r1		
    829a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    829e:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    82a2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    82a6:	3f 92       	cmp	#8,	r15	;r2 As==11
    82a8:	16 24       	jz	$+46     	;abs 0x82d6
    82aa:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    82ae:	03 34       	jge	$+8      	;abs 0x82b6
    82b0:	1f 93       	cmp	#1,	r15	;r3 As==01
    82b2:	08 24       	jz	$+18     	;abs 0x82c4
    82b4:	2b 3c       	jmp	$+88     	;abs 0x830c
    82b6:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    82ba:	16 24       	jz	$+46     	;abs 0x82e8
    82bc:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    82c0:	1c 24       	jz	$+58     	;abs 0x82fa
    82c2:	24 3c       	jmp	$+74     	;abs 0x830c
    82c4:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    82c8:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    82cc:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    82d0:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    82d4:	1b 3c       	jmp	$+56     	;abs 0x830c
    82d6:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    82da:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    82de:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    82e2:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    82e6:	12 3c       	jmp	$+38     	;abs 0x830c
    82e8:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    82ec:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    82f0:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    82f4:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    82f8:	09 3c       	jmp	$+20     	;abs 0x830c
    82fa:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    82fe:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8302:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    8306:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    830a:	03 43       	nop			
    830c:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    8310:	2f 93       	cmp	#2,	r15	;r3 As==10
    8312:	0e 24       	jz	$+30     	;abs 0x8330
    8314:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    8318:	03 34       	jge	$+8      	;abs 0x8320
    831a:	1f 93       	cmp	#1,	r15	;r3 As==01
    831c:	06 24       	jz	$+14     	;abs 0x832a
    831e:	12 3c       	jmp	$+38     	;abs 0x8344
    8320:	2f 92       	cmp	#4,	r15	;r2 As==10
    8322:	09 24       	jz	$+20     	;abs 0x8336
    8324:	3f 92       	cmp	#8,	r15	;r2 As==11
    8326:	0a 24       	jz	$+22     	;abs 0x833c
    8328:	0d 3c       	jmp	$+28     	;abs 0x8344
    832a:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    832e:	0a 3c       	jmp	$+22     	;abs 0x8344
    8330:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    8334:	07 3c       	jmp	$+16     	;abs 0x8344
    8336:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    833a:	04 3c       	jmp	$+10     	;abs 0x8344
    833c:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    8340:	58 00 
    8342:	03 43       	nop			
    8344:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8348:	82 4f 00 02 	mov	r15,	&0x0200	
    834c:	21 53       	incd	r1		
    834e:	34 41       	pop	r4		
    8350:	30 41       	ret			

00008352 <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    8352:	04 12       	push	r4		
    8354:	04 41       	mov	r1,	r4	
    8356:	24 53       	incd	r4		
    8358:	5e 43       	mov.b	#1,	r14	;r3 As==01
    835a:	5f 43       	mov.b	#1,	r15	;r3 As==01
    835c:	b0 12 92 82 	call	#0x8292	
    8360:	34 41       	pop	r4		
    8362:	30 41       	ret			

00008364 <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    8364:	04 12       	push	r4		
    8366:	04 41       	mov	r1,	r4	
    8368:	24 53       	incd	r4		
    836a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    836c:	7f 42       	mov.b	#8,	r15	;r2 As==11
    836e:	b0 12 92 82 	call	#0x8292	
    8372:	34 41       	pop	r4		
    8374:	30 41       	ret			

00008376 <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    8376:	04 12       	push	r4		
    8378:	04 41       	mov	r1,	r4	
    837a:	24 53       	incd	r4		
    837c:	6e 43       	mov.b	#2,	r14	;r3 As==10
    837e:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8380:	b0 12 92 82 	call	#0x8292	
    8384:	34 41       	pop	r4		
    8386:	30 41       	ret			

00008388 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    8388:	04 12       	push	r4		
    838a:	04 41       	mov	r1,	r4	
    838c:	24 53       	incd	r4		
    838e:	6e 42       	mov.b	#4,	r14	;r2 As==10
    8390:	7f 42       	mov.b	#8,	r15	;r2 As==11
    8392:	b0 12 92 82 	call	#0x8292	
    8396:	34 41       	pop	r4		
    8398:	30 41       	ret			

0000839a <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    839a:	04 12       	push	r4		
    839c:	04 41       	mov	r1,	r4	
    839e:	24 53       	incd	r4		
    83a0:	7e 42       	mov.b	#8,	r14	;r2 As==11
    83a2:	7f 42       	mov.b	#8,	r15	;r2 As==11
    83a4:	b0 12 92 82 	call	#0x8292	
    83a8:	34 41       	pop	r4		
    83aa:	30 41       	ret			

000083ac <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    83ac:	04 12       	push	r4		
    83ae:	04 41       	mov	r1,	r4	
    83b0:	24 53       	incd	r4		
    83b2:	5e 43       	mov.b	#1,	r14	;r3 As==01
    83b4:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    83b8:	b0 12 92 82 	call	#0x8292	
    83bc:	34 41       	pop	r4		
    83be:	30 41       	ret			

000083c0 <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    83c0:	04 12       	push	r4		
    83c2:	04 41       	mov	r1,	r4	
    83c4:	24 53       	incd	r4		
    83c6:	6e 43       	mov.b	#2,	r14	;r3 As==10
    83c8:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    83cc:	b0 12 92 82 	call	#0x8292	
    83d0:	34 41       	pop	r4		
    83d2:	30 41       	ret			

000083d4 <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    83d4:	04 12       	push	r4		
    83d6:	04 41       	mov	r1,	r4	
    83d8:	24 53       	incd	r4		
    83da:	6e 42       	mov.b	#4,	r14	;r2 As==10
    83dc:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    83e0:	b0 12 92 82 	call	#0x8292	
    83e4:	34 41       	pop	r4		
    83e6:	30 41       	ret			

000083e8 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    83e8:	04 12       	push	r4		
    83ea:	04 41       	mov	r1,	r4	
    83ec:	24 53       	incd	r4		
    83ee:	7e 42       	mov.b	#8,	r14	;r2 As==11
    83f0:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    83f4:	b0 12 92 82 	call	#0x8292	
    83f8:	34 41       	pop	r4		
    83fa:	30 41       	ret			

000083fc <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    83fc:	04 12       	push	r4		
    83fe:	04 41       	mov	r1,	r4	
    8400:	24 53       	incd	r4		
    8402:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8404:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8408:	b0 12 92 82 	call	#0x8292	
    840c:	34 41       	pop	r4		
    840e:	30 41       	ret			

00008410 <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    8410:	04 12       	push	r4		
    8412:	04 41       	mov	r1,	r4	
    8414:	24 53       	incd	r4		
    8416:	6e 43       	mov.b	#2,	r14	;r3 As==10
    8418:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    841c:	b0 12 92 82 	call	#0x8292	
    8420:	34 41       	pop	r4		
    8422:	30 41       	ret			

00008424 <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    8424:	04 12       	push	r4		
    8426:	04 41       	mov	r1,	r4	
    8428:	24 53       	incd	r4		
    842a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    842c:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8430:	b0 12 92 82 	call	#0x8292	
    8434:	34 41       	pop	r4		
    8436:	30 41       	ret			

00008438 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    8438:	04 12       	push	r4		
    843a:	04 41       	mov	r1,	r4	
    843c:	24 53       	incd	r4		
    843e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    8440:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8444:	b0 12 92 82 	call	#0x8292	
    8448:	34 41       	pop	r4		
    844a:	30 41       	ret			

0000844c <loop_4_cycles>:
    844c:	04 12       	push	r4		
    844e:	04 41       	mov	r1,	r4	
    8450:	24 53       	incd	r4		
    8452:	3e 53       	add	#-1,	r14	;r3 As==11
    8454:	3f 63       	addc	#-1,	r15	;r3 As==11
    8456:	fd 2f       	jc	$-4      	;abs 0x8452
    8458:	34 41       	pop	r4		
    845a:	30 41       	ret			

0000845c <delay_usec>:
    845c:	04 12       	push	r4		
    845e:	04 41       	mov	r1,	r4	
    8460:	24 53       	incd	r4		
    8462:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8466:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    846a:	1f 42 00 02 	mov	&0x0200,r15	
    846e:	3f 92       	cmp	#8,	r15	;r2 As==11
    8470:	18 24       	jz	$+50     	;abs 0x84a2
    8472:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    8476:	03 2c       	jc	$+8      	;abs 0x847e
    8478:	1f 93       	cmp	#1,	r15	;r3 As==01
    847a:	08 24       	jz	$+18     	;abs 0x848c
    847c:	2d 3c       	jmp	$+92     	;abs 0x84d8
    847e:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8482:	17 24       	jz	$+48     	;abs 0x84b2
    8484:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8488:	1e 24       	jz	$+62     	;abs 0x84c6
    848a:	26 3c       	jmp	$+78     	;abs 0x84d8
    848c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8490:	12 c3       	clrc			
    8492:	0f 10       	rrc	r15		
    8494:	12 c3       	clrc			
    8496:	0f 10       	rrc	r15		
    8498:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    849c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84a0:	26 3c       	jmp	$+78     	;abs 0x84ee
    84a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84a6:	0f 5f       	rla	r15		
    84a8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    84ac:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84b0:	1e 3c       	jmp	$+62     	;abs 0x84ee
    84b2:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    84b6:	0f 4e       	mov	r14,	r15	
    84b8:	0f 5f       	rla	r15		
    84ba:	0f 5e       	add	r14,	r15	
    84bc:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    84c0:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84c4:	14 3c       	jmp	$+42     	;abs 0x84ee
    84c6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84ca:	0f 5f       	rla	r15		
    84cc:	0f 5f       	rla	r15		
    84ce:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    84d2:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84d6:	0b 3c       	jmp	$+24     	;abs 0x84ee
    84d8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84dc:	12 c3       	clrc			
    84de:	0f 10       	rrc	r15		
    84e0:	12 c3       	clrc			
    84e2:	0f 10       	rrc	r15		
    84e4:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    84e8:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    84ec:	03 43       	nop			
    84ee:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    84f2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    84f6:	b0 12 4c 84 	call	#0x844c	
    84fa:	31 50 06 00 	add	#6,	r1	;#0x0006
    84fe:	34 41       	pop	r4		
    8500:	30 41       	ret			

00008502 <delay_ms>:
    8502:	04 12       	push	r4		
    8504:	04 41       	mov	r1,	r4	
    8506:	24 53       	incd	r4		
    8508:	31 82       	sub	#8,	r1	;r2 As==11
    850a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    850e:	1f 42 00 02 	mov	&0x0200,r15	
    8512:	3f 92       	cmp	#8,	r15	;r2 As==11
    8514:	13 24       	jz	$+40     	;abs 0x853c
    8516:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    851a:	03 2c       	jc	$+8      	;abs 0x8522
    851c:	1f 93       	cmp	#1,	r15	;r3 As==01
    851e:	08 24       	jz	$+18     	;abs 0x8530
    8520:	1f 3c       	jmp	$+64     	;abs 0x8560
    8522:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8526:	10 24       	jz	$+34     	;abs 0x8548
    8528:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    852c:	13 24       	jz	$+40     	;abs 0x8554
    852e:	18 3c       	jmp	$+50     	;abs 0x8560
    8530:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8534:	f8 ff 
    8536:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    853a:	18 3c       	jmp	$+50     	;abs 0x856c
    853c:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    8540:	f8 ff 
    8542:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8546:	12 3c       	jmp	$+38     	;abs 0x856c
    8548:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    854c:	f8 ff 
    854e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8552:	0c 3c       	jmp	$+26     	;abs 0x856c
    8554:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    8558:	f8 ff 
    855a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    855e:	06 3c       	jmp	$+14     	;abs 0x856c
    8560:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8564:	f8 ff 
    8566:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    856a:	03 43       	nop			
    856c:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    8570:	08 3c       	jmp	$+18     	;abs 0x8582
    8572:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    8576:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    857a:	b0 12 4c 84 	call	#0x844c	
    857e:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    8582:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    8586:	f6 ff 
    8588:	f4 2b       	jnc	$-22     	;abs 0x8572
    858a:	31 52       	add	#8,	r1	;r2 As==11
    858c:	34 41       	pop	r4		
    858e:	30 41       	ret			

00008590 <led_green_off>:
    8590:	04 12       	push	r4		
    8592:	04 41       	mov	r1,	r4	
    8594:	24 53       	incd	r4		
    8596:	5f 42 21 00 	mov.b	&0x0021,r15	
    859a:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    859e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    85a2:	34 41       	pop	r4		
    85a4:	30 41       	ret			

000085a6 <led_green_on>:
    85a6:	04 12       	push	r4		
    85a8:	04 41       	mov	r1,	r4	
    85aa:	24 53       	incd	r4		
    85ac:	5f 42 21 00 	mov.b	&0x0021,r15	
    85b0:	6f d3       	bis.b	#2,	r15	;r3 As==10
    85b2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    85b6:	34 41       	pop	r4		
    85b8:	30 41       	ret			

000085ba <led_green_switch>:
    85ba:	04 12       	push	r4		
    85bc:	04 41       	mov	r1,	r4	
    85be:	24 53       	incd	r4		
    85c0:	5f 42 21 00 	mov.b	&0x0021,r15	
    85c4:	6f e3       	xor.b	#2,	r15	;r3 As==10
    85c6:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    85ca:	34 41       	pop	r4		
    85cc:	30 41       	ret			

000085ce <led_red_off>:
    85ce:	04 12       	push	r4		
    85d0:	04 41       	mov	r1,	r4	
    85d2:	24 53       	incd	r4		
    85d4:	5f 42 21 00 	mov.b	&0x0021,r15	
    85d8:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    85dc:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    85e0:	34 41       	pop	r4		
    85e2:	30 41       	ret			

000085e4 <led_red_on>:
    85e4:	04 12       	push	r4		
    85e6:	04 41       	mov	r1,	r4	
    85e8:	24 53       	incd	r4		
    85ea:	5f 42 21 00 	mov.b	&0x0021,r15	
    85ee:	5f d3       	bis.b	#1,	r15	;r3 As==01
    85f0:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    85f4:	34 41       	pop	r4		
    85f6:	30 41       	ret			

000085f8 <led_red_switch>:
    85f8:	04 12       	push	r4		
    85fa:	04 41       	mov	r1,	r4	
    85fc:	24 53       	incd	r4		
    85fe:	5f 42 21 00 	mov.b	&0x0021,r15	
    8602:	5f e3       	xor.b	#1,	r15	;r3 As==01
    8604:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8608:	34 41       	pop	r4		
    860a:	30 41       	ret			

0000860c <leds_off>:
    860c:	04 12       	push	r4		
    860e:	04 41       	mov	r1,	r4	
    8610:	24 53       	incd	r4		
    8612:	5f 42 21 00 	mov.b	&0x0021,r15	
    8616:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    861a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    861e:	34 41       	pop	r4		
    8620:	30 41       	ret			

00008622 <leds_on>:
    8622:	04 12       	push	r4		
    8624:	04 41       	mov	r1,	r4	
    8626:	24 53       	incd	r4		
    8628:	5f 42 21 00 	mov.b	&0x0021,r15	
    862c:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8630:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8634:	34 41       	pop	r4		
    8636:	30 41       	ret			

00008638 <leds_init>:
    8638:	04 12       	push	r4		
    863a:	04 41       	mov	r1,	r4	
    863c:	24 53       	incd	r4		
    863e:	5f 42 21 00 	mov.b	&0x0021,r15	
    8642:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    8646:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    864a:	5f 42 22 00 	mov.b	&0x0022,r15	
    864e:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8652:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    8656:	5f 42 26 00 	mov.b	&0x0026,r15	
    865a:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    865e:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    8662:	b0 12 0c 86 	call	#0x860c	
    8666:	34 41       	pop	r4		
    8668:	30 41       	ret			

0000866a <uart_init>:
    866a:	04 12       	push	r4		
    866c:	04 41       	mov	r1,	r4	
    866e:	24 53       	incd	r4		
    8670:	21 83       	decd	r1		
    8672:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8676:	5f 42 1b 00 	mov.b	&0x001b,r15	
    867a:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    867e:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    8682:	5f 42 1a 00 	mov.b	&0x001a,r15	
    8686:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    868a:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    868e:	5f 42 1a 00 	mov.b	&0x001a,r15	
    8692:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    8696:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    869a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    869e:	1f 93       	cmp	#1,	r15	;r3 As==01
    86a0:	03 24       	jz	$+8      	;abs 0x86a8
    86a2:	3f 92       	cmp	#8,	r15	;r2 As==11
    86a4:	12 24       	jz	$+38     	;abs 0x86ca
    86a6:	23 3c       	jmp	$+72     	;abs 0x86ee
    86a8:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    86ac:	61 00 
    86ae:	f2 40 68 00 	mov.b	#104,	&0x0062	;#0x0068
    86b2:	62 00 
    86b4:	c2 43 63 00 	mov.b	#0,	&0x0063	;r3 As==00
    86b8:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    86bc:	5f 42 61 00 	mov.b	&0x0061,r15	
    86c0:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    86c4:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    86c8:	13 3c       	jmp	$+40     	;abs 0x86f0
    86ca:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    86ce:	61 00 
    86d0:	f2 40 41 00 	mov.b	#65,	&0x0062	;#0x0041
    86d4:	62 00 
    86d6:	f2 40 03 00 	mov.b	#3,	&0x0063	;#0x0003
    86da:	63 00 
    86dc:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    86e0:	5f 42 61 00 	mov.b	&0x0061,r15	
    86e4:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    86e8:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    86ec:	01 3c       	jmp	$+4      	;abs 0x86f0
    86ee:	03 43       	nop			
    86f0:	82 43 02 02 	mov	#0,	&0x0202	;r3 As==00
    86f4:	21 53       	incd	r1		
    86f6:	34 41       	pop	r4		
    86f8:	30 41       	ret			

000086fa <uart_stop>:
    86fa:	04 12       	push	r4		
    86fc:	04 41       	mov	r1,	r4	
    86fe:	24 53       	incd	r4		
    8700:	34 41       	pop	r4		
    8702:	30 41       	ret			

00008704 <putchar>:
    8704:	04 12       	push	r4		
    8706:	04 41       	mov	r1,	r4	
    8708:	24 53       	incd	r4		
    870a:	21 83       	decd	r1		
    870c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8710:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8714:	4f 4f       	mov.b	r15,	r15	
    8716:	c2 4f 67 00 	mov.b	r15,	&0x0067	
    871a:	03 43       	nop			
    871c:	5f 42 03 00 	mov.b	&0x0003,r15	
    8720:	4f 4f       	mov.b	r15,	r15	
    8722:	2f f3       	and	#2,	r15	;r3 As==10
    8724:	0f 93       	tst	r15		
    8726:	fa 27       	jz	$-10     	;abs 0x871c
    8728:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    872c:	4f 4f       	mov.b	r15,	r15	
    872e:	4f 4f       	mov.b	r15,	r15	
    8730:	21 53       	incd	r1		
    8732:	34 41       	pop	r4		
    8734:	30 41       	ret			

00008736 <uart_getchar>:
    8736:	04 12       	push	r4		
    8738:	04 41       	mov	r1,	r4	
    873a:	24 53       	incd	r4		
    873c:	21 83       	decd	r1		
    873e:	5f 42 66 00 	mov.b	&0x0066,r15	
    8742:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8746:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    874a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    874e:	21 53       	incd	r1		
    8750:	34 41       	pop	r4		
    8752:	30 41       	ret			

00008754 <uart_eint>:
    8754:	04 12       	push	r4		
    8756:	04 41       	mov	r1,	r4	
    8758:	24 53       	incd	r4		
    875a:	5f 42 01 00 	mov.b	&0x0001,r15	
    875e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    8760:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    8764:	34 41       	pop	r4		
    8766:	30 41       	ret			

00008768 <uart_dint>:
    8768:	04 12       	push	r4		
    876a:	04 41       	mov	r1,	r4	
    876c:	24 53       	incd	r4		
    876e:	5f 42 01 00 	mov.b	&0x0001,r15	
    8772:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    8776:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    877a:	34 41       	pop	r4		
    877c:	30 41       	ret			

0000877e <uart_register_cb>:
    877e:	04 12       	push	r4		
    8780:	04 41       	mov	r1,	r4	
    8782:	24 53       	incd	r4		
    8784:	21 83       	decd	r1		
    8786:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    878a:	92 44 fc ff 	mov	-4(r4),	&0x0202	;0xfffc(r4)
    878e:	02 02 
    8790:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    8794:	03 20       	jnz	$+8      	;abs 0x879c
    8796:	b0 12 68 87 	call	#0x8768	
    879a:	02 3c       	jmp	$+6      	;abs 0x87a0
    879c:	b0 12 54 87 	call	#0x8754	
    87a0:	21 53       	incd	r1		
    87a2:	34 41       	pop	r4		
    87a4:	30 41       	ret			

000087a6 <usart0irq>:
    87a6:	0f 12       	push	r15		
    87a8:	0e 12       	push	r14		
    87aa:	0d 12       	push	r13		
    87ac:	0c 12       	push	r12		
    87ae:	04 12       	push	r4		
    87b0:	04 41       	mov	r1,	r4	
    87b2:	34 50 0a 00 	add	#10,	r4	;#0x000a
    87b6:	21 83       	decd	r1		
    87b8:	5f 42 65 00 	mov.b	&0x0065,r15	
    87bc:	4f 4f       	mov.b	r15,	r15	
    87be:	2f f2       	and	#4,	r15	;r2 As==10
    87c0:	0f 93       	tst	r15		
    87c2:	0a 24       	jz	$+22     	;abs 0x87d8
    87c4:	5f 42 66 00 	mov.b	&0x0066,r15	
    87c8:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    87cc:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    87d0:	5f 53       	inc.b	r15		
    87d2:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    87d6:	0a 3c       	jmp	$+22     	;abs 0x87ec
    87d8:	1e 42 02 02 	mov	&0x0202,r14	
    87dc:	5f 42 66 00 	mov.b	&0x0066,r15	
    87e0:	8e 12       	call	r14		
    87e2:	0f 93       	tst	r15		
    87e4:	03 24       	jz	$+8      	;abs 0x87ec
    87e6:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    87ea:	00 00 
    87ec:	21 53       	incd	r1		
    87ee:	34 41       	pop	r4		
    87f0:	3c 41       	pop	r12		
    87f2:	3d 41       	pop	r13		
    87f4:	3e 41       	pop	r14		
    87f6:	3f 41       	pop	r15		
    87f8:	00 13       	reti			

000087fa <watchdog_stop>:
    87fa:	04 12       	push	r4		
    87fc:	04 41       	mov	r1,	r4	
    87fe:	24 53       	incd	r4		
    8800:	1f 42 20 01 	mov	&0x0120,r15	
    8804:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    8808:	82 4f 04 02 	mov	r15,	&0x0204	
    880c:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    8810:	20 01 
    8812:	34 41       	pop	r4		
    8814:	30 41       	ret			

00008816 <watchdog_restore>:
    8816:	04 12       	push	r4		
    8818:	04 41       	mov	r1,	r4	
    881a:	24 53       	incd	r4		
    881c:	1f 42 04 02 	mov	&0x0204,r15	
    8820:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    8824:	82 4f 20 01 	mov	r15,	&0x0120	
    8828:	34 41       	pop	r4		
    882a:	30 41       	ret			

0000882c <strcmp>:
    882c:	03 3c       	jmp	$+8      	;abs 0x8834
    882e:	1f 53       	inc	r15		
    8830:	4d 93       	tst.b	r13		
    8832:	09 24       	jz	$+20     	;abs 0x8846
    8834:	6d 4f       	mov.b	@r15,	r13	
    8836:	7c 4e       	mov.b	@r14+,	r12	
    8838:	4d 9c       	cmp.b	r12,	r13	
    883a:	f9 27       	jz	$-12     	;abs 0x882e
    883c:	4f 4d       	mov.b	r13,	r15	
    883e:	5e 4e ff ff 	mov.b	-1(r14),r14	;0xffff(r14)
    8842:	0f 8e       	sub	r14,	r15	
    8844:	30 41       	ret			
    8846:	0f 43       	clr	r15		
    8848:	30 41       	ret			

0000884a <printf>:
    884a:	0d 41       	mov	r1,	r13	
    884c:	2d 53       	incd	r13		
    884e:	3e 4d       	mov	@r13+,	r14	
    8850:	3f 40 04 87 	mov	#-30972,r15	;#0x8704
    8854:	b0 12 00 8a 	call	#0x8a00	
    8858:	30 41       	ret			

0000885a <vprintf>:
    885a:	0d 4e       	mov	r14,	r13	
    885c:	0e 4f       	mov	r15,	r14	
    885e:	3f 40 04 87 	mov	#-30972,r15	;#0x8704
    8862:	b0 12 00 8a 	call	#0x8a00	
    8866:	30 41       	ret			

00008868 <print_field>:
    8868:	0b 12       	push	r11		
    886a:	0a 12       	push	r10		
    886c:	09 12       	push	r9		
    886e:	08 12       	push	r8		
    8870:	07 12       	push	r7		
    8872:	06 12       	push	r6		
    8874:	05 12       	push	r5		
    8876:	04 12       	push	r4		
    8878:	31 82       	sub	#8,	r1	;r2 As==11
    887a:	08 4f       	mov	r15,	r8	
    887c:	81 4e 04 00 	mov	r14,	4(r1)	;0x0004(r1)
    8880:	09 4d       	mov	r13,	r9	
    8882:	1f 41 1a 00 	mov	26(r1),	r15	;0x001a(r1)
    8886:	1d 41 1c 00 	mov	28(r1),	r13	;0x001c(r1)
    888a:	4c 4d       	mov.b	r13,	r12	
    888c:	04 4d       	mov	r13,	r4	
    888e:	84 10       	swpb	r4		
    8890:	45 44       	mov.b	r4,	r5	
    8892:	4e 4f       	mov.b	r15,	r14	
    8894:	7e b0 40 00 	bit.b	#64,	r14	;#0x0040
    8898:	11 24       	jz	$+36     	;abs 0x88bc
    889a:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    889e:	00 00 
    88a0:	0e 4f       	mov	r15,	r14	
    88a2:	8e 10       	swpb	r14		
    88a4:	5e f3       	and.b	#1,	r14	;r3 As==01
    88a6:	03 24       	jz	$+8      	;abs 0x88ae
    88a8:	7e 40 58 00 	mov.b	#88,	r14	;#0x0058
    88ac:	02 3c       	jmp	$+6      	;abs 0x88b2
    88ae:	7e 40 78 00 	mov.b	#120,	r14	;#0x0078
    88b2:	c1 4e 01 00 	mov.b	r14,	1(r1)	;0x0001(r1)
    88b6:	0c 41       	mov	r1,	r12	
    88b8:	2c 53       	incd	r12		
    88ba:	0f 3c       	jmp	$+32     	;abs 0x88da
    88bc:	7e f0 20 00 	and.b	#32,	r14	;#0x0020
    88c0:	04 24       	jz	$+10     	;abs 0x88ca
    88c2:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    88c6:	00 00 
    88c8:	04 3c       	jmp	$+10     	;abs 0x88d2
    88ca:	4c 93       	tst.b	r12		
    88cc:	05 24       	jz	$+12     	;abs 0x88d8
    88ce:	c1 4d 00 00 	mov.b	r13,	0(r1)	;0x0000(r1)
    88d2:	0c 41       	mov	r1,	r12	
    88d4:	1c 53       	inc	r12		
    88d6:	01 3c       	jmp	$+4      	;abs 0x88da
    88d8:	0c 41       	mov	r1,	r12	
    88da:	0a 4c       	mov	r12,	r10	
    88dc:	8c 10       	swpb	r12		
    88de:	8c 11       	sxt	r12		
    88e0:	8c 10       	swpb	r12		
    88e2:	8c 11       	sxt	r12		
    88e4:	0b 4c       	mov	r12,	r11	
    88e6:	06 41       	mov	r1,	r6	
    88e8:	0c 41       	mov	r1,	r12	
    88ea:	8c 10       	swpb	r12		
    88ec:	8c 11       	sxt	r12		
    88ee:	8c 10       	swpb	r12		
    88f0:	8c 11       	sxt	r12		
    88f2:	07 4c       	mov	r12,	r7	
    88f4:	0a 86       	sub	r6,	r10	
    88f6:	0b 77       	subc	r7,	r11	
    88f8:	0e 4f       	mov	r15,	r14	
    88fa:	8e 10       	swpb	r14		
    88fc:	c1 4e 02 00 	mov.b	r14,	2(r1)	;0x0002(r1)
    8900:	6e f2       	and.b	#4,	r14	;r2 As==10
    8902:	02 24       	jz	$+6      	;abs 0x8908
    8904:	07 45       	mov	r5,	r7	
    8906:	01 3c       	jmp	$+4      	;abs 0x890a
    8908:	37 43       	mov	#-1,	r7	;r3 As==11
    890a:	4f 4f       	mov.b	r15,	r15	
    890c:	7f b0 10 00 	bit.b	#16,	r15	;#0x0010
    8910:	3c 20       	jnz	$+122    	;abs 0x898a
    8912:	1d 41 04 00 	mov	4(r1),	r13	;0x0004(r1)
    8916:	3d 53       	add	#-1,	r13	;r3 As==11
    8918:	1d 53       	inc	r13		
    891a:	cd 93 00 00 	tst.b	0(r13)		;0x0000(r13)
    891e:	fc 23       	jnz	$-6      	;abs 0x8918
    8920:	1d 81 04 00 	sub	4(r1),	r13	;0x0004(r1)
    8924:	09 9a       	cmp	r10,	r9	
    8926:	02 28       	jnc	$+6      	;abs 0x892c
    8928:	09 8a       	sub	r10,	r9	
    892a:	01 3c       	jmp	$+4      	;abs 0x892e
    892c:	09 43       	clr	r9		
    892e:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    8932:	05 24       	jz	$+12     	;abs 0x893e
    8934:	09 95       	cmp	r5,	r9	
    8936:	02 28       	jnc	$+6      	;abs 0x893c
    8938:	09 85       	sub	r5,	r9	
    893a:	01 3c       	jmp	$+4      	;abs 0x893e
    893c:	09 43       	clr	r9		
    893e:	05 4d       	mov	r13,	r5	
    8940:	07 9d       	cmp	r13,	r7	
    8942:	01 2c       	jc	$+4      	;abs 0x8946
    8944:	05 47       	mov	r7,	r5	
    8946:	4f 93       	tst.b	r15		
    8948:	0d 38       	jl	$+28     	;abs 0x8964
    894a:	f1 40 20 00 	mov.b	#32,	6(r1)	;#0x0020, 0x0006(r1)
    894e:	06 00 
    8950:	06 43       	clr	r6		
    8952:	0b 43       	clr	r11		
    8954:	0e 3c       	jmp	$+30     	;abs 0x8972
    8956:	0f 41       	mov	r1,	r15	
    8958:	0f 56       	add	r6,	r15	
    895a:	6f 4f       	mov.b	@r15,	r15	
    895c:	8f 11       	sxt	r15		
    895e:	16 53       	inc	r6		
    8960:	88 12       	call	r8		
    8962:	01 3c       	jmp	$+4      	;abs 0x8966
    8964:	06 43       	clr	r6		
    8966:	06 9a       	cmp	r10,	r6	
    8968:	f6 3b       	jl	$-18     	;abs 0x8956
    896a:	0b 4a       	mov	r10,	r11	
    896c:	f1 40 30 00 	mov.b	#48,	6(r1)	;#0x0030, 0x0006(r1)
    8970:	06 00 
    8972:	05 8b       	sub	r11,	r5	
    8974:	05 3c       	jmp	$+12     	;abs 0x8980
    8976:	5f 41 06 00 	mov.b	6(r1),	r15	;0x0006(r1)
    897a:	8f 11       	sxt	r15		
    897c:	88 12       	call	r8		
    897e:	1b 53       	inc	r11		
    8980:	0f 45       	mov	r5,	r15	
    8982:	0f 5b       	add	r11,	r15	
    8984:	0f 99       	cmp	r9,	r15	
    8986:	f7 2b       	jnc	$-16     	;abs 0x8976
    8988:	0a 3c       	jmp	$+22     	;abs 0x899e
    898a:	06 43       	clr	r6		
    898c:	0b 43       	clr	r11		
    898e:	07 3c       	jmp	$+16     	;abs 0x899e
    8990:	1b 53       	inc	r11		
    8992:	0f 41       	mov	r1,	r15	
    8994:	0f 56       	add	r6,	r15	
    8996:	6f 4f       	mov.b	@r15,	r15	
    8998:	8f 11       	sxt	r15		
    899a:	16 53       	inc	r6		
    899c:	88 12       	call	r8		
    899e:	06 9a       	cmp	r10,	r6	
    89a0:	f7 3b       	jl	$-16     	;abs 0x8990
    89a2:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    89a6:	02 24       	jz	$+6      	;abs 0x89ac
    89a8:	4a 44       	mov.b	r4,	r10	
    89aa:	08 3c       	jmp	$+18     	;abs 0x89bc
    89ac:	1a 41 04 00 	mov	4(r1),	r10	;0x0004(r1)
    89b0:	0a 8b       	sub	r11,	r10	
    89b2:	0d 3c       	jmp	$+28     	;abs 0x89ce
    89b4:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    89b8:	88 12       	call	r8		
    89ba:	7a 53       	add.b	#-1,	r10	;r3 As==11
    89bc:	4a 93       	tst.b	r10		
    89be:	fa 23       	jnz	$-10     	;abs 0x89b4
    89c0:	44 44       	mov.b	r4,	r4	
    89c2:	0b 54       	add	r4,	r11	
    89c4:	f3 3f       	jmp	$-24     	;abs 0x89ac
    89c6:	37 53       	add	#-1,	r7	;r3 As==11
    89c8:	8f 11       	sxt	r15		
    89ca:	88 12       	call	r8		
    89cc:	1b 53       	inc	r11		
    89ce:	0f 4a       	mov	r10,	r15	
    89d0:	0f 5b       	add	r11,	r15	
    89d2:	6f 4f       	mov.b	@r15,	r15	
    89d4:	4f 93       	tst.b	r15		
    89d6:	07 24       	jz	$+16     	;abs 0x89e6
    89d8:	07 93       	tst	r7		
    89da:	f5 23       	jnz	$-20     	;abs 0x89c6
    89dc:	04 3c       	jmp	$+10     	;abs 0x89e6
    89de:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    89e2:	88 12       	call	r8		
    89e4:	1b 53       	inc	r11		
    89e6:	0b 99       	cmp	r9,	r11	
    89e8:	fa 2b       	jnc	$-10     	;abs 0x89de
    89ea:	0f 4b       	mov	r11,	r15	
    89ec:	31 52       	add	#8,	r1	;r2 As==11
    89ee:	34 41       	pop	r4		
    89f0:	35 41       	pop	r5		
    89f2:	36 41       	pop	r6		
    89f4:	37 41       	pop	r7		
    89f6:	38 41       	pop	r8		
    89f8:	39 41       	pop	r9		
    89fa:	3a 41       	pop	r10		
    89fc:	3b 41       	pop	r11		
    89fe:	30 41       	ret			

00008a00 <vuprintf>:
    8a00:	0b 12       	push	r11		
    8a02:	0a 12       	push	r10		
    8a04:	09 12       	push	r9		
    8a06:	08 12       	push	r8		
    8a08:	07 12       	push	r7		
    8a0a:	06 12       	push	r6		
    8a0c:	05 12       	push	r5		
    8a0e:	04 12       	push	r4		
    8a10:	31 50 b6 ff 	add	#-74,	r1	;#0xffb6
    8a14:	81 4f 3a 00 	mov	r15,	58(r1)	;0x003a(r1)
    8a18:	06 4e       	mov	r14,	r6	
    8a1a:	05 4d       	mov	r13,	r5	
    8a1c:	81 4e 3e 00 	mov	r14,	62(r1)	;0x003e(r1)
    8a20:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    8a24:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    8a28:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    8a2c:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    8a30:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    8a34:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    8a38:	07 43       	clr	r7		
    8a3a:	81 43 2c 00 	mov	#0,	44(r1)	;r3 As==00, 0x002c(r1)
    8a3e:	0e 41       	mov	r1,	r14	
    8a40:	3e 50 1c 00 	add	#28,	r14	;#0x001c
    8a44:	81 4e 1c 00 	mov	r14,	28(r1)	;0x001c(r1)
    8a48:	30 40 7a 90 	br	#0x907a	
    8a4c:	0f 46       	mov	r6,	r15	
    8a4e:	1f 53       	inc	r15		
    8a50:	81 4f 40 00 	mov	r15,	64(r1)	;0x0040(r1)
    8a54:	07 93       	tst	r7		
    8a56:	1e 20       	jnz	$+62     	;abs 0x8a94
    8a58:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    8a5c:	13 20       	jnz	$+40     	;abs 0x8a84
    8a5e:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00, 0x0000(r1)
    8a62:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    8a66:	81 46 3e 00 	mov	r6,	62(r1)	;0x003e(r1)
    8a6a:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    8a6e:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    8a72:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    8a76:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    8a7a:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    8a7e:	30 40 70 90 	br	#0x9070	
    8a82:	05 47       	mov	r7,	r5	
    8a84:	8e 11       	sxt	r14		
    8a86:	0f 4e       	mov	r14,	r15	
    8a88:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    8a8c:	91 53 2c 00 	inc	44(r1)		;0x002c(r1)
    8a90:	30 40 56 90 	br	#0x9056	
    8a94:	7e 90 63 00 	cmp.b	#99,	r14	;#0x0063
    8a98:	c5 24       	jz	$+396    	;abs 0x8c24
    8a9a:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    8a9e:	27 34       	jge	$+80     	;abs 0x8aee
    8aa0:	7e 90 30 00 	cmp.b	#48,	r14	;#0x0030
    8aa4:	94 24       	jz	$+298    	;abs 0x8bce
    8aa6:	7e 90 31 00 	cmp.b	#49,	r14	;#0x0031
    8aaa:	1a 34       	jge	$+54     	;abs 0x8ae0
    8aac:	7e 90 2a 00 	cmp.b	#42,	r14	;#0x002a
    8ab0:	77 24       	jz	$+240    	;abs 0x8ba0
    8ab2:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    8ab6:	0a 34       	jge	$+22     	;abs 0x8acc
    8ab8:	7e 90 23 00 	cmp.b	#35,	r14	;#0x0023
    8abc:	42 24       	jz	$+134    	;abs 0x8b42
    8abe:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    8ac2:	e0 27       	jz	$-62     	;abs 0x8a84
    8ac4:	7e 90 20 00 	cmp.b	#32,	r14	;#0x0020
    8ac8:	32 20       	jnz	$+102    	;abs 0x8b2e
    8aca:	56 3c       	jmp	$+174    	;abs 0x8b78
    8acc:	7e 90 2d 00 	cmp.b	#45,	r14	;#0x002d
    8ad0:	49 24       	jz	$+148    	;abs 0x8b64
    8ad2:	7e 90 2e 00 	cmp.b	#46,	r14	;#0x002e
    8ad6:	5b 24       	jz	$+184    	;abs 0x8b8e
    8ad8:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    8adc:	28 20       	jnz	$+82     	;abs 0x8b2e
    8ade:	47 3c       	jmp	$+144    	;abs 0x8b6e
    8ae0:	7e 90 3a 00 	cmp.b	#58,	r14	;#0x003a
    8ae4:	8c 38       	jl	$+282    	;abs 0x8bfe
    8ae6:	7e 90 58 00 	cmp.b	#88,	r14	;#0x0058
    8aea:	21 20       	jnz	$+68     	;abs 0x8b2e
    8aec:	e9 3c       	jmp	$+468    	;abs 0x8cc0
    8aee:	7e 90 6f 00 	cmp.b	#111,	r14	;#0x006f
    8af2:	24 24       	jz	$+74     	;abs 0x8b3c
    8af4:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    8af8:	0a 34       	jge	$+22     	;abs 0x8b0e
    8afa:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    8afe:	e3 24       	jz	$+456    	;abs 0x8cc6
    8b00:	7e 90 6c 00 	cmp.b	#108,	r14	;#0x006c
    8b04:	22 24       	jz	$+70     	;abs 0x8b4a
    8b06:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    8b0a:	11 20       	jnz	$+36     	;abs 0x8b2e
    8b0c:	dc 3c       	jmp	$+442    	;abs 0x8cc6
    8b0e:	7e 90 73 00 	cmp.b	#115,	r14	;#0x0073
    8b12:	98 24       	jz	$+306    	;abs 0x8c44
    8b14:	7e 90 74 00 	cmp.b	#116,	r14	;#0x0074
    8b18:	04 34       	jge	$+10     	;abs 0x8b22
    8b1a:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    8b1e:	07 20       	jnz	$+16     	;abs 0x8b2e
    8b20:	b8 3c       	jmp	$+370    	;abs 0x8c92
    8b22:	7e 90 75 00 	cmp.b	#117,	r14	;#0x0075
    8b26:	d1 24       	jz	$+420    	;abs 0x8cca
    8b28:	7e 90 78 00 	cmp.b	#120,	r14	;#0x0078
    8b2c:	d2 24       	jz	$+422    	;abs 0x8cd2
    8b2e:	19 41 3e 00 	mov	62(r1),	r9	;0x003e(r1)
    8b32:	18 41 2c 00 	mov	44(r1),	r8	;0x002c(r1)
    8b36:	08 89       	sub	r9,	r8	
    8b38:	30 40 44 90 	br	#0x9044	
    8b3c:	b1 42 28 00 	mov	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    8b40:	cb 3c       	jmp	$+408    	;abs 0x8cd8
    8b42:	f1 d2 00 00 	bis.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    8b46:	30 40 74 90 	br	#0x9074	
    8b4a:	69 41       	mov.b	@r1,	r9	
    8b4c:	59 f3       	and.b	#1,	r9	;r3 As==01
    8b4e:	6e 41       	mov.b	@r1,	r14	
    8b50:	04 24       	jz	$+10     	;abs 0x8b5a
    8b52:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    8b56:	6e d3       	bis.b	#2,	r14	;r3 As==10
    8b58:	01 3c       	jmp	$+4      	;abs 0x8b5c
    8b5a:	5e d3       	bis.b	#1,	r14	;r3 As==01
    8b5c:	c1 4e 00 00 	mov.b	r14,	0(r1)	;0x0000(r1)
    8b60:	30 40 74 90 	br	#0x9074	
    8b64:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    8b68:	00 00 
    8b6a:	30 40 74 90 	br	#0x9074	
    8b6e:	f1 40 2b 00 	mov.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    8b72:	02 00 
    8b74:	30 40 74 90 	br	#0x9074	
    8b78:	f1 90 2b 00 	cmp.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    8b7c:	02 00 
    8b7e:	02 20       	jnz	$+6      	;abs 0x8b84
    8b80:	30 40 74 90 	br	#0x9074	
    8b84:	f1 40 20 00 	mov.b	#32,	2(r1)	;#0x0020, 0x0002(r1)
    8b88:	02 00 
    8b8a:	30 40 74 90 	br	#0x9074	
    8b8e:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    8b92:	02 24       	jz	$+6      	;abs 0x8b98
    8b94:	30 40 5a 90 	br	#0x905a	
    8b98:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    8b9c:	30 40 74 90 	br	#0x9074	
    8ba0:	0e 45       	mov	r5,	r14	
    8ba2:	2e 53       	incd	r14		
    8ba4:	2a 45       	mov	@r5,	r10	
    8ba6:	0a 93       	tst	r10		
    8ba8:	03 38       	jl	$+8      	;abs 0x8bb0
    8baa:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    8bae:	0d 3c       	jmp	$+28     	;abs 0x8bca
    8bb0:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    8bb4:	02 24       	jz	$+6      	;abs 0x8bba
    8bb6:	30 40 6a 90 	br	#0x906a	
    8bba:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    8bbe:	00 00 
    8bc0:	3a e3       	inv	r10		
    8bc2:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    8bc6:	91 53 26 00 	inc	38(r1)		;0x0026(r1)
    8bca:	05 4e       	mov	r14,	r5	
    8bcc:	27 3c       	jmp	$+80     	;abs 0x8c1c
    8bce:	81 93 26 00 	tst	38(r1)		;0x0026(r1)
    8bd2:	15 20       	jnz	$+44     	;abs 0x8bfe
    8bd4:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    8bd8:	12 20       	jnz	$+38     	;abs 0x8bfe
    8bda:	69 41       	mov.b	@r1,	r9	
    8bdc:	79 f0 10 00 	and.b	#16,	r9	;#0x0010
    8be0:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8be2:	01 24       	jz	$+4      	;abs 0x8be6
    8be4:	4e 43       	clr.b	r14		
    8be6:	4e 4e       	mov.b	r14,	r14	
    8be8:	0e 11       	rra	r14		
    8bea:	0e 43       	clr	r14		
    8bec:	4e 10       	rrc.b	r14		
    8bee:	6a 41       	mov.b	@r1,	r10	
    8bf0:	7a f0 7f 00 	and.b	#127,	r10	;#0x007f
    8bf4:	4a de       	bis.b	r14,	r10	
    8bf6:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    8bfa:	30 40 74 90 	br	#0x9074	
    8bfe:	1a 41 26 00 	mov	38(r1),	r10	;0x0026(r1)
    8c02:	0a 5a       	rla	r10		
    8c04:	0c 4a       	mov	r10,	r12	
    8c06:	0c 5c       	rla	r12		
    8c08:	0c 5c       	rla	r12		
    8c0a:	0a 5c       	add	r12,	r10	
    8c0c:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    8c10:	b1 50 d0 ff 	add	#-48,	38(r1)	;#0xffd0, 0x0026(r1)
    8c14:	26 00 
    8c16:	8e 11       	sxt	r14		
    8c18:	81 5e 26 00 	add	r14,	38(r1)	;0x0026(r1)
    8c1c:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    8c20:	30 40 74 90 	br	#0x9074	
    8c24:	07 45       	mov	r5,	r7	
    8c26:	27 53       	incd	r7		
    8c28:	6e 45       	mov.b	@r5,	r14	
    8c2a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    8c2e:	03 20       	jnz	$+8      	;abs 0x8c36
    8c30:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    8c34:	26 27       	jz	$-434    	;abs 0x8a82
    8c36:	c1 4e 04 00 	mov.b	r14,	4(r1)	;0x0004(r1)
    8c3a:	c1 43 05 00 	mov.b	#0,	5(r1)	;r3 As==00, 0x0005(r1)
    8c3e:	0e 41       	mov	r1,	r14	
    8c40:	2e 52       	add	#4,	r14	;r2 As==10
    8c42:	03 3c       	jmp	$+8      	;abs 0x8c4a
    8c44:	07 45       	mov	r5,	r7	
    8c46:	27 53       	incd	r7		
    8c48:	2e 45       	mov	@r5,	r14	
    8c4a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    8c4e:	07 24       	jz	$+16     	;abs 0x8c5e
    8c50:	e1 d2 01 00 	bis.b	#4,	1(r1)	;r2 As==10, 0x0001(r1)
    8c54:	1f 41 26 00 	mov	38(r1),	r15	;0x0026(r1)
    8c58:	c1 4f 03 00 	mov.b	r15,	3(r1)	;0x0003(r1)
    8c5c:	06 3c       	jmp	$+14     	;abs 0x8c6a
    8c5e:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    8c62:	03 24       	jz	$+8      	;abs 0x8c6a
    8c64:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    8c68:	30 00 
    8c6a:	0e 93       	tst	r14		
    8c6c:	02 20       	jnz	$+6      	;abs 0x8c72
    8c6e:	3e 40 17 93 	mov	#-27881,r14	;#0x9317
    8c72:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    8c76:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    8c7a:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    8c7e:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    8c82:	b0 12 68 88 	call	#0x8868	
    8c86:	21 52       	add	#4,	r1	;r2 As==10
    8c88:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    8c8c:	05 47       	mov	r7,	r5	
    8c8e:	30 40 56 90 	br	#0x9056	
    8c92:	07 45       	mov	r5,	r7	
    8c94:	27 53       	incd	r7		
    8c96:	29 45       	mov	@r5,	r9	
    8c98:	81 49 1e 00 	mov	r9,	30(r1)	;0x001e(r1)
    8c9c:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8c9e:	09 93       	tst	r9		
    8ca0:	01 20       	jnz	$+4      	;abs 0x8ca4
    8ca2:	4e 43       	clr.b	r14		
    8ca4:	4e 5e       	rla.b	r14		
    8ca6:	4e 5e       	rla.b	r14		
    8ca8:	4e 5e       	rla.b	r14		
    8caa:	6a 41       	mov.b	@r1,	r10	
    8cac:	7a f0 f7 ff 	and.b	#-9,	r10	;#0xfff7
    8cb0:	4a de       	bis.b	r14,	r10	
    8cb2:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    8cb6:	05 47       	mov	r7,	r5	
    8cb8:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    8cbc:	28 00 
    8cbe:	53 3c       	jmp	$+168    	;abs 0x8d66
    8cc0:	d1 d3 01 00 	bis.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    8cc4:	06 3c       	jmp	$+14     	;abs 0x8cd2
    8cc6:	e1 d2 00 00 	bis.b	#4,	0(r1)	;r2 As==10, 0x0000(r1)
    8cca:	b1 40 0a 00 	mov	#10,	40(r1)	;#0x000a, 0x0028(r1)
    8cce:	28 00 
    8cd0:	03 3c       	jmp	$+8      	;abs 0x8cd8
    8cd2:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    8cd6:	28 00 
    8cd8:	6b 41       	mov.b	@r1,	r11	
    8cda:	6b b3       	bit.b	#2,	r11	;r3 As==10
    8cdc:	24 24       	jz	$+74     	;abs 0x8d26
    8cde:	0c 45       	mov	r5,	r12	
    8ce0:	3c 52       	add	#8,	r12	;r2 As==11
    8ce2:	28 45       	mov	@r5,	r8	
    8ce4:	17 45 02 00 	mov	2(r5),	r7	;0x0002(r5)
    8ce8:	16 45 04 00 	mov	4(r5),	r6	;0x0004(r5)
    8cec:	1b 45 06 00 	mov	6(r5),	r11	;0x0006(r5)
    8cf0:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    8cf4:	81 47 20 00 	mov	r7,	32(r1)	;0x0020(r1)
    8cf8:	81 46 22 00 	mov	r6,	34(r1)	;0x0022(r1)
    8cfc:	81 4b 24 00 	mov	r11,	36(r1)	;0x0024(r1)
    8d00:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    8d04:	08 93       	tst	r8		
    8d06:	06 20       	jnz	$+14     	;abs 0x8d14
    8d08:	07 93       	tst	r7		
    8d0a:	04 20       	jnz	$+10     	;abs 0x8d14
    8d0c:	06 93       	tst	r6		
    8d0e:	02 20       	jnz	$+6      	;abs 0x8d14
    8d10:	0b 93       	tst	r11		
    8d12:	02 24       	jz	$+6      	;abs 0x8d18
    8d14:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    8d18:	0b 5b       	rla	r11		
    8d1a:	0b 43       	clr	r11		
    8d1c:	0b 6b       	rlc	r11		
    8d1e:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    8d22:	05 4c       	mov	r12,	r5	
    8d24:	20 3c       	jmp	$+66     	;abs 0x8d66
    8d26:	5b f3       	and.b	#1,	r11	;r3 As==01
    8d28:	07 45       	mov	r5,	r7	
    8d2a:	0d 24       	jz	$+28     	;abs 0x8d46
    8d2c:	27 52       	add	#4,	r7	;r2 As==10
    8d2e:	28 45       	mov	@r5,	r8	
    8d30:	1b 45 02 00 	mov	2(r5),	r11	;0x0002(r5)
    8d34:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    8d38:	81 4b 20 00 	mov	r11,	32(r1)	;0x0020(r1)
    8d3c:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    8d40:	08 93       	tst	r8		
    8d42:	09 20       	jnz	$+20     	;abs 0x8d56
    8d44:	06 3c       	jmp	$+14     	;abs 0x8d52
    8d46:	27 53       	incd	r7		
    8d48:	2b 45       	mov	@r5,	r11	
    8d4a:	81 4b 1e 00 	mov	r11,	30(r1)	;0x001e(r1)
    8d4e:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    8d52:	0b 93       	tst	r11		
    8d54:	02 24       	jz	$+6      	;abs 0x8d5a
    8d56:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    8d5a:	0b 5b       	rla	r11		
    8d5c:	0b 43       	clr	r11		
    8d5e:	0b 6b       	rlc	r11		
    8d60:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    8d64:	05 47       	mov	r7,	r5	
    8d66:	f1 b2 00 00 	bit.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    8d6a:	12 24       	jz	$+38     	;abs 0x8d90
    8d6c:	c1 93 2b 00 	tst.b	43(r1)		;0x002b(r1)
    8d70:	0f 20       	jnz	$+32     	;abs 0x8d90
    8d72:	68 41       	mov.b	@r1,	r8	
    8d74:	b1 90 10 00 	cmp	#16,	40(r1)	;#0x0010, 0x0028(r1)
    8d78:	28 00 
    8d7a:	03 20       	jnz	$+8      	;abs 0x8d82
    8d7c:	78 d0 40 00 	bis.b	#64,	r8	;#0x0040
    8d80:	05 3c       	jmp	$+12     	;abs 0x8d8c
    8d82:	b1 92 28 00 	cmp	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    8d86:	04 20       	jnz	$+10     	;abs 0x8d90
    8d88:	78 d0 20 00 	bis.b	#32,	r8	;#0x0020
    8d8c:	c1 48 00 00 	mov.b	r8,	0(r1)	;0x0000(r1)
    8d90:	68 41       	mov.b	@r1,	r8	
    8d92:	68 b2       	bit.b	#4,	r8	;r2 As==10
    8d94:	30 24       	jz	$+98     	;abs 0x8df6
    8d96:	c1 93 2f 00 	tst.b	47(r1)		;0x002f(r1)
    8d9a:	2d 24       	jz	$+92     	;abs 0x8df6
    8d9c:	f1 40 2d 00 	mov.b	#45,	2(r1)	;#0x002d, 0x0002(r1)
    8da0:	02 00 
    8da2:	68 b3       	bit.b	#2,	r8	;r3 As==10
    8da4:	11 24       	jz	$+36     	;abs 0x8dc8
    8da6:	b1 e3 1e 00 	xor	#-1,	30(r1)	;r3 As==11, 0x001e(r1)
    8daa:	b1 e3 20 00 	xor	#-1,	32(r1)	;r3 As==11, 0x0020(r1)
    8dae:	b1 e3 22 00 	xor	#-1,	34(r1)	;r3 As==11, 0x0022(r1)
    8db2:	b1 e3 24 00 	xor	#-1,	36(r1)	;r3 As==11, 0x0024(r1)
    8db6:	91 53 1e 00 	inc	30(r1)		;0x001e(r1)
    8dba:	81 63 20 00 	adc	32(r1)		;0x0020(r1)
    8dbe:	81 63 22 00 	adc	34(r1)		;0x0022(r1)
    8dc2:	81 63 24 00 	adc	36(r1)		;0x0024(r1)
    8dc6:	17 3c       	jmp	$+48     	;abs 0x8df6
    8dc8:	58 b3       	bit.b	#1,	r8	;r3 As==01
    8dca:	0f 24       	jz	$+32     	;abs 0x8dea
    8dcc:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    8dd0:	1b 41 20 00 	mov	32(r1),	r11	;0x0020(r1)
    8dd4:	3a e3       	inv	r10		
    8dd6:	3b e3       	inv	r11		
    8dd8:	0e 4a       	mov	r10,	r14	
    8dda:	0f 4b       	mov	r11,	r15	
    8ddc:	1e 53       	inc	r14		
    8dde:	0f 63       	adc	r15		
    8de0:	81 4e 1e 00 	mov	r14,	30(r1)	;0x001e(r1)
    8de4:	81 4f 20 00 	mov	r15,	32(r1)	;0x0020(r1)
    8de8:	06 3c       	jmp	$+14     	;abs 0x8df6
    8dea:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    8dee:	3a e3       	inv	r10		
    8df0:	1a 53       	inc	r10		
    8df2:	81 4a 1e 00 	mov	r10,	30(r1)	;0x001e(r1)
    8df6:	c1 43 1b 00 	mov.b	#0,	27(r1)	;r3 As==00, 0x001b(r1)
    8dfa:	68 b3       	bit.b	#2,	r8	;r3 As==10
    8dfc:	6a 24       	jz	$+214    	;abs 0x8ed2
    8dfe:	16 41 1e 00 	mov	30(r1),	r6	;0x001e(r1)
    8e02:	91 41 20 00 	mov	32(r1),	60(r1)	;0x0020(r1), 0x003c(r1)
    8e06:	3c 00 
    8e08:	18 41 22 00 	mov	34(r1),	r8	;0x0022(r1)
    8e0c:	14 41 24 00 	mov	36(r1),	r4	;0x0024(r1)
    8e10:	07 41       	mov	r1,	r7	
    8e12:	37 50 1a 00 	add	#26,	r7	;#0x001a
    8e16:	09 46       	mov	r6,	r9	
    8e18:	91 41 28 00 	mov	40(r1),	50(r1)	;0x0028(r1), 0x0032(r1)
    8e1c:	32 00 
    8e1e:	1b 41 28 00 	mov	40(r1),	r11	;0x0028(r1)
    8e22:	8b 10       	swpb	r11		
    8e24:	8b 11       	sxt	r11		
    8e26:	8b 10       	swpb	r11		
    8e28:	8b 11       	sxt	r11		
    8e2a:	81 4b 34 00 	mov	r11,	52(r1)	;0x0034(r1)
    8e2e:	81 4b 36 00 	mov	r11,	54(r1)	;0x0036(r1)
    8e32:	81 4b 38 00 	mov	r11,	56(r1)	;0x0038(r1)
    8e36:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e3a:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e3e:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e42:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e46:	0c 49       	mov	r9,	r12	
    8e48:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    8e4c:	0e 48       	mov	r8,	r14	
    8e4e:	0f 44       	mov	r4,	r15	
    8e50:	b0 12 b0 91 	call	#0x91b0	
    8e54:	31 52       	add	#8,	r1	;r2 As==11
    8e56:	0b 4c       	mov	r12,	r11	
    8e58:	3c 90 0a 00 	cmp	#10,	r12	;#0x000a
    8e5c:	05 34       	jge	$+12     	;abs 0x8e68
    8e5e:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    8e62:	c7 4b 00 00 	mov.b	r11,	0(r7)	;0x0000(r7)
    8e66:	0c 3c       	jmp	$+26     	;abs 0x8e80
    8e68:	4b 4c       	mov.b	r12,	r11	
    8e6a:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    8e6e:	03 24       	jz	$+8      	;abs 0x8e76
    8e70:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    8e74:	02 3c       	jmp	$+6      	;abs 0x8e7a
    8e76:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    8e7a:	4a 5b       	add.b	r11,	r10	
    8e7c:	c7 4a 00 00 	mov.b	r10,	0(r7)	;0x0000(r7)
    8e80:	06 47       	mov	r7,	r6	
    8e82:	36 53       	add	#-1,	r6	;r3 As==11
    8e84:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e88:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e8c:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e90:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    8e94:	0c 49       	mov	r9,	r12	
    8e96:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    8e9a:	0e 48       	mov	r8,	r14	
    8e9c:	0f 44       	mov	r4,	r15	
    8e9e:	b0 12 8a 91 	call	#0x918a	
    8ea2:	31 52       	add	#8,	r1	;r2 As==11
    8ea4:	09 4c       	mov	r12,	r9	
    8ea6:	81 4d 3c 00 	mov	r13,	60(r1)	;0x003c(r1)
    8eaa:	08 4e       	mov	r14,	r8	
    8eac:	04 4f       	mov	r15,	r4	
    8eae:	37 53       	add	#-1,	r7	;r3 As==11
    8eb0:	0c 93       	tst	r12		
    8eb2:	b2 23       	jnz	$-154    	;abs 0x8e18
    8eb4:	0d 93       	tst	r13		
    8eb6:	b0 23       	jnz	$-158    	;abs 0x8e18
    8eb8:	0e 93       	tst	r14		
    8eba:	ae 23       	jnz	$-162    	;abs 0x8e18
    8ebc:	0f 93       	tst	r15		
    8ebe:	ac 23       	jnz	$-166    	;abs 0x8e18
    8ec0:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    8ec4:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    8ec8:	81 43 22 00 	mov	#0,	34(r1)	;r3 As==00, 0x0022(r1)
    8ecc:	81 43 24 00 	mov	#0,	36(r1)	;r3 As==00, 0x0024(r1)
    8ed0:	6c 3c       	jmp	$+218    	;abs 0x8faa
    8ed2:	58 b3       	bit.b	#1,	r8	;r3 As==01
    8ed4:	3e 24       	jz	$+126    	;abs 0x8f52
    8ed6:	14 41 1e 00 	mov	30(r1),	r4	;0x001e(r1)
    8eda:	17 41 20 00 	mov	32(r1),	r7	;0x0020(r1)
    8ede:	08 41       	mov	r1,	r8	
    8ee0:	38 50 1a 00 	add	#26,	r8	;#0x001a
    8ee4:	19 41 28 00 	mov	40(r1),	r9	;0x0028(r1)
    8ee8:	89 10       	swpb	r9		
    8eea:	89 11       	sxt	r9		
    8eec:	89 10       	swpb	r9		
    8eee:	89 11       	sxt	r9		
    8ef0:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    8ef4:	0d 49       	mov	r9,	r13	
    8ef6:	0e 44       	mov	r4,	r14	
    8ef8:	0f 47       	mov	r7,	r15	
    8efa:	b0 12 22 91 	call	#0x9122	
    8efe:	0b 4e       	mov	r14,	r11	
    8f00:	3e 90 0a 00 	cmp	#10,	r14	;#0x000a
    8f04:	05 34       	jge	$+12     	;abs 0x8f10
    8f06:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    8f0a:	c8 4b 00 00 	mov.b	r11,	0(r8)	;0x0000(r8)
    8f0e:	0c 3c       	jmp	$+26     	;abs 0x8f28
    8f10:	4b 4e       	mov.b	r14,	r11	
    8f12:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    8f16:	03 24       	jz	$+8      	;abs 0x8f1e
    8f18:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    8f1c:	02 3c       	jmp	$+6      	;abs 0x8f22
    8f1e:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    8f22:	4a 5b       	add.b	r11,	r10	
    8f24:	c8 4a 00 00 	mov.b	r10,	0(r8)	;0x0000(r8)
    8f28:	06 48       	mov	r8,	r6	
    8f2a:	36 53       	add	#-1,	r6	;r3 As==11
    8f2c:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    8f30:	0d 49       	mov	r9,	r13	
    8f32:	0e 44       	mov	r4,	r14	
    8f34:	0f 47       	mov	r7,	r15	
    8f36:	b0 12 ec 90 	call	#0x90ec	
    8f3a:	04 4e       	mov	r14,	r4	
    8f3c:	07 4f       	mov	r15,	r7	
    8f3e:	38 53       	add	#-1,	r8	;r3 As==11
    8f40:	0e 93       	tst	r14		
    8f42:	d0 23       	jnz	$-94     	;abs 0x8ee4
    8f44:	0f 93       	tst	r15		
    8f46:	ce 23       	jnz	$-98     	;abs 0x8ee4
    8f48:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    8f4c:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    8f50:	2c 3c       	jmp	$+90     	;abs 0x8faa
    8f52:	17 41 1e 00 	mov	30(r1),	r7	;0x001e(r1)
    8f56:	08 41       	mov	r1,	r8	
    8f58:	38 50 1a 00 	add	#26,	r8	;#0x001a
    8f5c:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    8f60:	0f 47       	mov	r7,	r15	
    8f62:	b0 12 e4 90 	call	#0x90e4	
    8f66:	0d 4f       	mov	r15,	r13	
    8f68:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    8f6c:	05 34       	jge	$+12     	;abs 0x8f78
    8f6e:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    8f72:	c8 4d 00 00 	mov.b	r13,	0(r8)	;0x0000(r8)
    8f76:	0c 3c       	jmp	$+26     	;abs 0x8f90
    8f78:	4d 4f       	mov.b	r15,	r13	
    8f7a:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    8f7e:	03 24       	jz	$+8      	;abs 0x8f86
    8f80:	7c 40 37 00 	mov.b	#55,	r12	;#0x0037
    8f84:	02 3c       	jmp	$+6      	;abs 0x8f8a
    8f86:	7c 40 57 00 	mov.b	#87,	r12	;#0x0057
    8f8a:	4c 5d       	add.b	r13,	r12	
    8f8c:	c8 4c 00 00 	mov.b	r12,	0(r8)	;0x0000(r8)
    8f90:	06 48       	mov	r8,	r6	
    8f92:	36 53       	add	#-1,	r6	;r3 As==11
    8f94:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    8f98:	0f 47       	mov	r7,	r15	
    8f9a:	b0 12 ca 90 	call	#0x90ca	
    8f9e:	07 4f       	mov	r15,	r7	
    8fa0:	38 53       	add	#-1,	r8	;r3 As==11
    8fa2:	0f 93       	tst	r15		
    8fa4:	db 23       	jnz	$-72     	;abs 0x8f5c
    8fa6:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    8faa:	b1 90 0a 00 	cmp	#10,	40(r1)	;#0x000a, 0x0028(r1)
    8fae:	28 00 
    8fb0:	02 24       	jz	$+6      	;abs 0x8fb6
    8fb2:	c1 43 02 00 	mov.b	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    8fb6:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    8fba:	2a 24       	jz	$+86     	;abs 0x9010
    8fbc:	0f 41       	mov	r1,	r15	
    8fbe:	3f 50 1c 00 	add	#28,	r15	;#0x001c
    8fc2:	81 4f 42 00 	mov	r15,	66(r1)	;0x0042(r1)
    8fc6:	1a 41 1c 00 	mov	28(r1),	r10	;0x001c(r1)
    8fca:	8a 10       	swpb	r10		
    8fcc:	8a 11       	sxt	r10		
    8fce:	8a 10       	swpb	r10		
    8fd0:	8a 11       	sxt	r10		
    8fd2:	81 4a 44 00 	mov	r10,	68(r1)	;0x0044(r1)
    8fd6:	81 46 46 00 	mov	r6,	70(r1)	;0x0046(r1)
    8fda:	0a 46       	mov	r6,	r10	
    8fdc:	8a 10       	swpb	r10		
    8fde:	8a 11       	sxt	r10		
    8fe0:	8a 10       	swpb	r10		
    8fe2:	8a 11       	sxt	r10		
    8fe4:	81 4a 48 00 	mov	r10,	72(r1)	;0x0048(r1)
    8fe8:	1c 41 42 00 	mov	66(r1),	r12	;0x0042(r1)
    8fec:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    8ff0:	1c 81 46 00 	sub	70(r1),	r12	;0x0046(r1)
    8ff4:	1d 71 48 00 	subc	72(r1),	r13	;0x0048(r1)
    8ff8:	2c 83       	decd	r12		
    8ffa:	1c 91 26 00 	cmp	38(r1),	r12	;0x0026(r1)
    8ffe:	0e 2c       	jc	$+30     	;abs 0x901c
    9000:	e1 d3 01 00 	bis.b	#2,	1(r1)	;r3 As==10, 0x0001(r1)
    9004:	5e 41 26 00 	mov.b	38(r1),	r14	;0x0026(r1)
    9008:	4e 8c       	sub.b	r12,	r14	
    900a:	c1 4e 03 00 	mov.b	r14,	3(r1)	;0x0003(r1)
    900e:	06 3c       	jmp	$+14     	;abs 0x901c
    9010:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9014:	03 24       	jz	$+8      	;abs 0x901c
    9016:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    901a:	30 00 
    901c:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9020:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9024:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9028:	0e 46       	mov	r6,	r14	
    902a:	1e 53       	inc	r14		
    902c:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9030:	b0 12 68 88 	call	#0x8868	
    9034:	21 52       	add	#4,	r1	;r2 As==10
    9036:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    903a:	0d 3c       	jmp	$+28     	;abs 0x9056
    903c:	7f 49       	mov.b	@r9+,	r15	
    903e:	8f 11       	sxt	r15		
    9040:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    9044:	0e 49       	mov	r9,	r14	
    9046:	0e 58       	add	r8,	r14	
    9048:	19 91 40 00 	cmp	64(r1),	r9	;0x0040(r1)
    904c:	f7 2b       	jnc	$-16     	;abs 0x903c
    904e:	81 49 3e 00 	mov	r9,	62(r1)	;0x003e(r1)
    9052:	81 4e 2c 00 	mov	r14,	44(r1)	;0x002c(r1)
    9056:	07 43       	clr	r7		
    9058:	0e 3c       	jmp	$+30     	;abs 0x9076
    905a:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    905e:	30 00 
    9060:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9064:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9068:	03 3c       	jmp	$+8      	;abs 0x9070
    906a:	05 4e       	mov	r14,	r5	
    906c:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9070:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    9074:	17 43       	mov	#1,	r7	;r3 As==01
    9076:	16 41 40 00 	mov	64(r1),	r6	;0x0040(r1)
    907a:	6e 46       	mov.b	@r6,	r14	
    907c:	4e 93       	tst.b	r14		
    907e:	02 24       	jz	$+6      	;abs 0x9084
    9080:	30 40 4c 8a 	br	#0x8a4c	
    9084:	1f 41 2c 00 	mov	44(r1),	r15	;0x002c(r1)
    9088:	31 50 4a 00 	add	#74,	r1	;#0x004a
    908c:	34 41       	pop	r4		
    908e:	35 41       	pop	r5		
    9090:	36 41       	pop	r6		
    9092:	37 41       	pop	r7		
    9094:	38 41       	pop	r8		
    9096:	39 41       	pop	r9		
    9098:	3a 41       	pop	r10		
    909a:	3b 41       	pop	r11		
    909c:	30 41       	ret			

0000909e <puts>:
    909e:	0b 12       	push	r11		
    90a0:	0b 4f       	mov	r15,	r11	
    90a2:	6f 4b       	mov.b	@r11,	r15	
    90a4:	4f 93       	tst.b	r15		
    90a6:	06 24       	jz	$+14     	;abs 0x90b4
    90a8:	1b 53       	inc	r11		
    90aa:	8f 11       	sxt	r15		
    90ac:	b0 12 04 87 	call	#0x8704	
    90b0:	0f 93       	tst	r15		
    90b2:	f7 37       	jge	$-16     	;abs 0x90a2
    90b4:	cb 93 00 00 	tst.b	0(r11)		;0x0000(r11)
    90b8:	05 20       	jnz	$+12     	;abs 0x90c4
    90ba:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    90be:	b0 12 04 87 	call	#0x8704	
    90c2:	01 3c       	jmp	$+4      	;abs 0x90c6
    90c4:	3f 43       	mov	#-1,	r15	;r3 As==11
    90c6:	3b 41       	pop	r11		
    90c8:	30 41       	ret			

000090ca <__udivhi3>:
    90ca:	7c 40 10 00 	mov.b	#16,	r12	;#0x0010
    90ce:	0d 4e       	mov	r14,	r13	
    90d0:	0e 43       	clr	r14		
    90d2:	0f 5f       	rla	r15		
    90d4:	0e 6e       	rlc	r14		
    90d6:	0e 9d       	cmp	r13,	r14	
    90d8:	02 28       	jnc	$+6      	;abs 0x90de
    90da:	0e 8d       	sub	r13,	r14	
    90dc:	1f d3       	bis	#1,	r15	;r3 As==01
    90de:	1c 83       	dec	r12		
    90e0:	f8 23       	jnz	$-14     	;abs 0x90d2
    90e2:	30 41       	ret			

000090e4 <__umodhi3>:
    90e4:	b0 12 ca 90 	call	#0x90ca	
    90e8:	0f 4e       	mov	r14,	r15	
    90ea:	30 41       	ret			

000090ec <__udivsi3>:
    90ec:	0b 12       	push	r11		
    90ee:	0a 12       	push	r10		
    90f0:	09 12       	push	r9		
    90f2:	79 40 20 00 	mov.b	#32,	r9	;#0x0020
    90f6:	0a 4c       	mov	r12,	r10	
    90f8:	0b 4d       	mov	r13,	r11	
    90fa:	0c 43       	clr	r12		
    90fc:	0d 43       	clr	r13		
    90fe:	0e 5e       	rla	r14		
    9100:	0f 6f       	rlc	r15		
    9102:	0c 6c       	rlc	r12		
    9104:	0d 6d       	rlc	r13		
    9106:	0d 9b       	cmp	r11,	r13	
    9108:	06 28       	jnc	$+14     	;abs 0x9116
    910a:	02 20       	jnz	$+6      	;abs 0x9110
    910c:	0c 9a       	cmp	r10,	r12	
    910e:	03 28       	jnc	$+8      	;abs 0x9116
    9110:	0c 8a       	sub	r10,	r12	
    9112:	0d 7b       	subc	r11,	r13	
    9114:	1e d3       	bis	#1,	r14	;r3 As==01
    9116:	19 83       	dec	r9		
    9118:	f2 23       	jnz	$-26     	;abs 0x90fe
    911a:	39 41       	pop	r9		
    911c:	3a 41       	pop	r10		
    911e:	3b 41       	pop	r11		
    9120:	30 41       	ret			

00009122 <__umodsi3>:
    9122:	b0 12 ec 90 	call	#0x90ec	
    9126:	0e 4c       	mov	r12,	r14	
    9128:	0f 4d       	mov	r13,	r15	
    912a:	30 41       	ret			

0000912c <__xabi_udivmod64>:
    912c:	07 12       	push	r7		
    912e:	06 12       	push	r6		
    9130:	05 12       	push	r5		
    9132:	04 12       	push	r4		
    9134:	30 12 40 00 	push	#64		;#0x0040
    9138:	04 48       	mov	r8,	r4	
    913a:	05 49       	mov	r9,	r5	
    913c:	06 4a       	mov	r10,	r6	
    913e:	07 4b       	mov	r11,	r7	
    9140:	08 43       	clr	r8		
    9142:	09 43       	clr	r9		
    9144:	0a 43       	clr	r10		
    9146:	0b 43       	clr	r11		
    9148:	0c 5c       	rla	r12		
    914a:	0d 6d       	rlc	r13		
    914c:	0e 6e       	rlc	r14		
    914e:	0f 6f       	rlc	r15		
    9150:	08 68       	rlc	r8		
    9152:	09 69       	rlc	r9		
    9154:	0a 6a       	rlc	r10		
    9156:	0b 6b       	rlc	r11		
    9158:	0b 97       	cmp	r7,	r11	
    915a:	0e 28       	jnc	$+30     	;abs 0x9178
    915c:	08 20       	jnz	$+18     	;abs 0x916e
    915e:	0a 96       	cmp	r6,	r10	
    9160:	0b 28       	jnc	$+24     	;abs 0x9178
    9162:	05 20       	jnz	$+12     	;abs 0x916e
    9164:	09 95       	cmp	r5,	r9	
    9166:	08 28       	jnc	$+18     	;abs 0x9178
    9168:	02 20       	jnz	$+6      	;abs 0x916e
    916a:	08 94       	cmp	r4,	r8	
    916c:	05 28       	jnc	$+12     	;abs 0x9178
    916e:	08 84       	sub	r4,	r8	
    9170:	09 75       	subc	r5,	r9	
    9172:	0a 76       	subc	r6,	r10	
    9174:	0b 77       	subc	r7,	r11	
    9176:	1c d3       	bis	#1,	r12	;r3 As==01
    9178:	91 83 00 00 	dec	0(r1)		;0x0000(r1)
    917c:	e5 23       	jnz	$-52     	;abs 0x9148
    917e:	21 53       	incd	r1		
    9180:	34 41       	pop	r4		
    9182:	35 41       	pop	r5		
    9184:	36 41       	pop	r6		
    9186:	37 41       	pop	r7		
    9188:	30 41       	ret			

0000918a <__udivdi3>:
    918a:	0b 12       	push	r11		
    918c:	0a 12       	push	r10		
    918e:	09 12       	push	r9		
    9190:	08 12       	push	r8		
    9192:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    9196:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    919a:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    919e:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    91a2:	b0 12 2c 91 	call	#0x912c	
    91a6:	38 41       	pop	r8		
    91a8:	39 41       	pop	r9		
    91aa:	3a 41       	pop	r10		
    91ac:	3b 41       	pop	r11		
    91ae:	30 41       	ret			

000091b0 <__umoddi3>:
    91b0:	0b 12       	push	r11		
    91b2:	0a 12       	push	r10		
    91b4:	09 12       	push	r9		
    91b6:	08 12       	push	r8		
    91b8:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    91bc:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    91c0:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    91c4:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    91c8:	b0 12 2c 91 	call	#0x912c	
    91cc:	0c 48       	mov	r8,	r12	
    91ce:	0d 49       	mov	r9,	r13	
    91d0:	0e 4a       	mov	r10,	r14	
    91d2:	0f 4b       	mov	r11,	r15	
    91d4:	38 41       	pop	r8		
    91d6:	39 41       	pop	r9		
    91d8:	3a 41       	pop	r10		
    91da:	3b 41       	pop	r11		
    91dc:	30 41       	ret			

000091de <__udivmoddi4>:
    91de:	0b 12       	push	r11		
    91e0:	0a 12       	push	r10		
    91e2:	09 12       	push	r9		
    91e4:	08 12       	push	r8		
    91e6:	07 12       	push	r7		
    91e8:	18 41 0c 00 	mov	12(r1),	r8	;0x000c(r1)
    91ec:	19 41 0e 00 	mov	14(r1),	r9	;0x000e(r1)
    91f0:	1a 41 10 00 	mov	16(r1),	r10	;0x0010(r1)
    91f4:	1b 41 12 00 	mov	18(r1),	r11	;0x0012(r1)
    91f8:	b0 12 2c 91 	call	#0x912c	
    91fc:	17 41 14 00 	mov	20(r1),	r7	;0x0014(r1)
    9200:	87 48 00 00 	mov	r8,	0(r7)	;0x0000(r7)
    9204:	87 49 02 00 	mov	r9,	2(r7)	;0x0002(r7)
    9208:	87 4a 04 00 	mov	r10,	4(r7)	;0x0004(r7)
    920c:	87 4b 06 00 	mov	r11,	6(r7)	;0x0006(r7)
    9210:	37 41       	pop	r7		
    9212:	38 41       	pop	r8		
    9214:	39 41       	pop	r9		
    9216:	3a 41       	pop	r10		
    9218:	3b 41       	pop	r11		
    921a:	30 41       	ret			

0000921c <_unexpected_>:
    921c:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	14 81 14 81 14 81 14 81 14 81 14 81 14 81 a6 87     ................
    fff0:	14 81 14 81 14 81 14 81 14 81 14 81 14 81 00 80     ................
