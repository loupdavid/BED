
bin/serial.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
0000a088 l    d  .rodata	00000000 .rodata
00000200 l    d  .bss	00000000 .bss
00000220 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main_server.c
00008126 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 cc2500.c
000082dc l     F .text	00000016 CC2500_HW_GDO0_IRQ_ON_ASSERT
000082f2 l     F .text	00000016 CC2500_HW_GDO2_IRQ_ON_ASSERT
00008308 l     F .text	00000016 CC2500_HW_GDO0_DINT
0000831e l     F .text	00000016 CC2500_HW_GDO2_DINT
00008334 l     F .text	00000016 CC2500_HW_GDO0_EINT
0000834a l     F .text	00000016 CC2500_HW_GDO0_CLEAR_FLAG
00008360 l     F .text	00000016 CC2500_HW_GDO2_CLEAR_FLAG
00008376 l     F .text	00000016 CONFIG_GDO0_PIN_AS_INPUT
0000838c l     F .text	00000052 CC2500_HW_INIT
000086c4 l     F .text	00000048 cc2500_check_tx_underflow
0000870c l     F .text	0000004a cc2500_check_rx_overflow
00000000 l    df *ABS*	00000000 clock.c
00000204 l     O .bss	00000002 mclk_freq_mhz
00008f7e l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000206 l     O .bss	00000002 uart_cb
00000000 l    df *ABS*	00000000 watchdog.c
00000208 l     O .bss	00000002 watchdog_backup
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vuprintf.c
000096d2 l     F .text	00000198 print_field
00000000 l    df *ABS*	00000000 puts.c
0000956e g     F .text	00000032 putchar
00000057 g       *ABS*	00000000 __BCSCTL1
000090e8 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000216 g     O .bss	00000001 cc2500_gdo2_cfg
00000174 g       *ABS*	00000000 __TACCR1
00008d38 g     F .text	00000024 cc2500_idle
00000000 g       *ABS*	00000000 __data_size
00008126  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00008dac g     F .text	0000001a cc2500_variables_bootstrap
000090c0 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
0000004b g       *ABS*	00000000 __ADC10AE1
00008ed6 g     F .text	0000009a port2_irq_handler
000096b4 g     F .text	00000010 printf
00000069 g       *ABS*	00000000 __UCB0CTL1
00008126  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
000094aa g     F .text	00000016 spi_select_radio
00000060 g       *ABS*	00000000 __UCA0CTL0
00008ab4 g     F .text	0000006a cc2500_utx
00009062 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
0000012e g       *ABS*	00000000 __TAIV
00009400 g     F .text	00000012 spi_check_miso_high
00009564 g     F .text	0000000a uart_stop
00008420 g     F .text	0000002e CC2500_SPI_WREG
00000202 g     O .bss	00000001 cc2500_rx_length
0000824e g     F .text	0000008e execcmd
00000000 g       .vectors	00000000 _efartext
000093c6 g     F .text	0000003a spi_tx_rx
00009f34 g     F .text	00000000 __udivhi3
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
000085d6 g     F .text	0000001e CC2500_SPI_RX_FIFO_BYTE
0000a1e8 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
00008dd8 g     F .text	000000dc cc2500_init
000081cc g     F .text	00000066 serial_ring_get
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
00008cb4 g     F .text	00000018 cc2500_rx_register_cb
0000001d g       *ABS*	00000000 __P4OUT
00000020 g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
00009138 g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
00008668 g     F .text	00000030 cc2500_gdo2_set_signal
00008120  w      .text	00000000 __stop_progExec__
00008168 g     F .text	00000016 serial_ring_init
0000002d g       *ABS*	00000000 __P2IE
00009f08 g     F .text	0000002c puts
000095be g     F .text	00000014 uart_eint
00008574 g     F .text	00000062 CC2500_SPI_RX_BURST
00000192 g       *ABS*	00000000 __TBCCR0
00008126  w      .text	00000000 __isr_11
000094c0 g     F .text	00000014 spi_deselect_radio
00000186 g       *ABS*	00000000 __TBCCTL2
000090ac g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
00009f56 g     F .text	00000000 __udivsi3
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
00009356 g     F .text	00000062 spi_init
00000049 g       *ABS*	00000000 __ADC10DTC1
0000851e g     F .text	00000056 CC2500_SPI_TX_BURST
00000200 g     O .bss	00000001 cc2500_rx_offset
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
00009086 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
0000a048 g       .text	00000000 __udivmoddi4
00008a98 g     F .text	0000001c cc2500_calibrate
00009110 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
00008698 g     F .text	0000002c cc2500_set_fifo_threshold
0000020a g     O .bss	00000001 serial_rx_size
000083de g     F .text	00000020 CC2500_SPI_TX
00000182 g       *ABS*	00000000 __TBCCTL0
000085f4 g     F .text	00000044 cc2500_wait_status
00008b7c g     F .text	00000138 cc2500_rx_pkt_eop
0000006d g       *ABS*	00000000 __UCB0STAT
00008126  w      .text	00000000 __isr_5
0000844e g     F .text	00000036 CC2500_SPI_RREG
0000020b g     O .bss	00000001 serial_rx_rptr
00000063 g       *ABS*	00000000 __UCA0BR1
0000a01a g     F .text	00000000 __umoddi3
0000a1e8 g       *ABS*	00000000 __data_load_start
0000930e g     F .text	00000016 leds_on
00008126 g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
00008ccc g     F .text	0000001e cc2500_packet_status
000092a6 g     F .text	00000014 led_green_switch
000001bc g       *ABS*	00000000 __ADC10SA
00000166 g       *ABS*	00000000 __TACCTL2
00009ff4 g     F .text	00000000 __udivdi3
00000065 g       *ABS*	00000000 __UCA0STAT
0000927c g     F .text	00000016 led_green_off
00008d5c g     F .text	00000012 cc2500_sleep
00008cea g     F .text	00000030 cc2500_cca
00008126  w      .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
0000012c g       *ABS*	00000000 __FCTL3
00008126  w      .text	00000000 __isr_10
00000218 g     O .bss	00000002 radio_rx_cb
00008f70 g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
00009074 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
000084e8 g     F .text	00000036 CC2500_SPI_RX_BYTE
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
00009412 g     F .text	0000004a spi_tx_burst
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
000092d0 g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
000092f8 g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
00000220 g     O .noinit	00000002 __wdt_clear_value
000095a0 g     F .text	0000001e uart_getchar
0000001b g       *ABS*	00000000 __P3SEL
00008d86 g     F .text	00000026 cc2500_wakeup
00009610 g       .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
00009f8c g     F .text	00000000 __umodsi3
00008dc6 g     F .text	00000012 CC_ASSERT
000096c4 g     F .text	0000000e vprintf
00000028 g       *ABS*	00000000 __P2IN
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
0000021a g     O .bss	00000001 cc2500_gdo0_cfg
000092ba g     F .text	00000016 led_red_off
00009f4e g     F .text	00000000 __umodhi3
00008126  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
0000945c g     F .text	0000004e spi_rx_burst
000094d4 g     F .text	00000090 uart_init
00008028  w      .text	00000000 __do_clear_bss
000095d2 g     F .text	00000016 uart_dint
0000a088 g     O .rodata	00000024 config0
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
000090fc g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
00009664 g     F .text	0000001c watchdog_stop
0000903e g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
0000812a g     F .text	0000003e tx
000090d4 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
00009f56 g       .text	00000000 __ext_udivmod32
00008638 g     F .text	00000030 cc2500_gdo0_set_signal
00000027 g       *ABS*	00000000 __P1REN
000095e8 g     F .text	00000028 uart_register_cb
000000c0 g       *ABS*	00000000 __OA0CTL0
00008b4c g     F .text	00000030 cc2500_rx_enter
00009124 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
0000a086  w      .text	00000000 _unexpected_
0000020c g     O .bss	00000008 serial_rx_buffer
00008126  w      .text	00000000 __isr_8
00008ed6 g       .text	00000000 __isr_3
0000986a g     F .text	0000069e vuprintf
000092e4 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
00009f34 g       .text	00000000 __ext_udivmod16
00008000  w      .text	00000000 _reset_vector__
00008126 g       .text	00000000 __ctors_start
00009f96 g       .text	00000000 __xabi_udivmod64
00008126  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	000000e2 main
00000176 g       *ABS*	00000000 __TACCR2
000091ee g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
00008126  w      .text	00000000 __isr_13
00009148 g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
00009610 g     F .text	00000054 usart0irq
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00009696 g     F .text	0000001e strcmp
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
00008d1a g     F .text	0000001e cc2500_get_rssi
00008d6e g     F .text	00000018 cc2500_reset
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
00008484 g     F .text	00000036 CC2500_SPI_ROREG
0000a1bc g     O .rodata	00000024 rfSettings_default_config
00008126  w      .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
00009098 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
0000817e g     F .text	0000004e serial_ring_put
000083fe g     F .text	00000022 CC2500_SPI_STROBE
00008126 g       .text	00000000 __dtors_start
00008126  w      .text	00000000 __isr_6
00008126 g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
00009050 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
00008126  w      .text	00000000 __isr_1
00000200 g       .rodata	00000000 _edata
00000222 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000021c g     O .bss	00000002 cc2500_rx_packet
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
0000021e g     O .bss	00000001 cc2500_status_register
00000214 g     O .bss	00000001 serial_rx_wptr
00009292 g     F .text	00000014 led_green_on
00008780 g     F .text	000002f8 cc2500_configure
00009680 g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
00008120  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00008a78 g     F .text	00000020 cc2500_set_channel
00008b1e g     F .text	0000002e cc2500_rx_register_buffer
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
00000200 g       .rodata	00000000 __data_start
00008eb4 g     F .text	00000022 cc2500_gdox_signal_handler
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
00008232 g     F .text	0000001c serial_cb
000084ba g     F .text	0000002e CC2500_SPI_TX_BYTE
00008756 g     F .text	0000002a cc2500_check_fifo_xflow_flush
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
000093b8 g     F .text	0000000e spi_clear_rx_IFG
00009324 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 20 02 	mov	r5,	&0x0220	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 20 02 	mov	&0x0220,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f e8 a1 	mov	-24088(r15),512(r15);0xa1e8(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 20 02 	mov	&0x0220,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:
  tx(cmd);
  printf("\n");
}

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
    8042:	31 50 da ff 	add	#-38,	r1	;#0xffda
  uint8_t data;
  char cmd[CMD_SIZE];
  int i=0;
    8046:	84 43 d8 ff 	mov	#0,	-40(r4)	;r3 As==00, 0xffd8(r4)
  int j;
  watchdog_stop();
    804a:	b0 12 64 96 	call	#0x9664	
  set_mcu_speed_dco_mclk_16MHz_smclk_8MHz();
    804e:	b0 12 fc 90 	call	#0x90fc	
  leds_init();
    8052:	b0 12 24 93 	call	#0x9324	
  led_red_on();
    8056:	b0 12 d0 92 	call	#0x92d0	

  //Init Serial
  uart_init(UART_9600_SMCLK_8MHZ);
    805a:	3f 42       	mov	#8,	r15	;r2 As==11
    805c:	b0 12 d4 94 	call	#0x94d4	
  serial_ring_init();
    8060:	b0 12 68 81 	call	#0x8168	
  uart_register_cb( serial_cb);
    8064:	3f 40 32 82 	mov	#-32206,r15	;#0x8232
    8068:	b0 12 e8 95 	call	#0x95e8	

  //Init radio
  spi_init();
    806c:	b0 12 56 93 	call	#0x9356	
  cc2500_init();
    8070:	b0 12 d8 8d 	call	#0x8dd8	
#if defined(USER_RFCONFIG)
  cc2500_configure(& USER_RFCONFIG );
    8074:	3f 40 88 a0 	mov	#-24440,r15	;#0xa088
    8078:	b0 12 80 87 	call	#0x8780	
#endif

  printf("serial test application: echo\n\r");
    807c:	30 12 6e a1 	push	#-24210	;#0xa16e
    8080:	b0 12 b4 96 	call	#0x96b4	
    8084:	21 53       	incd	r1		
  led_green_on();
    8086:	b0 12 92 92 	call	#0x9292	
  eint();
    808a:	32 d2       	eint			

  for(;;)
  {
    LPM(1);
    808c:	32 d0 50 00 	bis	#80,	r2	;#0x0050
    if (serial_ring_get(&data))
    8090:	0f 44       	mov	r4,	r15	
    8092:	3f 50 dc ff 	add	#-36,	r15	;#0xffdc
    8096:	b0 12 cc 81 	call	#0x81cc	
    809a:	0f 93       	tst	r15		
    809c:	3a 24       	jz	$+118    	;abs 0x8112
    {
      if(data != '\r' && i<CMD_SIZE-1){
    809e:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    80a2:	7f 90 0d 00 	cmp.b	#13,	r15	;#0x000d
    80a6:	16 24       	jz	$+46     	;abs 0x80d4
    80a8:	b4 90 1f 00 	cmp	#31,	-40(r4)	;#0x001f, 0xffd8(r4)
    80ac:	d8 ff 
    80ae:	12 34       	jge	$+38     	;abs 0x80d4
        putchar(data);
    80b0:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    80b4:	4f 4f       	mov.b	r15,	r15	
    80b6:	b0 12 6e 95 	call	#0x956e	
        cmd[i]=data;
    80ba:	5f 44 dc ff 	mov.b	-36(r4),r15	;0xffdc(r4)
    80be:	4e 4f       	mov.b	r15,	r14	
    80c0:	0f 44       	mov	r4,	r15	
    80c2:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80c6:	1f 54 d8 ff 	add	-40(r4),r15	;0xffd8(r4)
    80ca:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        i++;
    80ce:	94 53 d8 ff 	inc	-40(r4)	;0xffd8(r4)
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
      led_red_switch();
    }
  }
    80d2:	dc 3f       	jmp	$-70     	;abs 0x808c
        putchar(data);
        cmd[i]=data;
        i++;
      }
      else{
        cmd[i]='\0';
    80d4:	0f 44       	mov	r4,	r15	
    80d6:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80da:	1f 54 d8 ff 	add	-40(r4),r15	;0xffd8(r4)
    80de:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00, 0x0000(r15)
        execcmd(&cmd);
    80e2:	0f 44       	mov	r4,	r15	
    80e4:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80e8:	b0 12 4e 82 	call	#0x824e	
        // Reset cmd
        for(j=0;j<CMD_SIZE;j++){
    80ec:	84 43 da ff 	mov	#0,	-38(r4)	;r3 As==00, 0xffda(r4)
    80f0:	09 3c       	jmp	$+20     	;abs 0x8104
          cmd[j]=NULL;
    80f2:	0f 44       	mov	r4,	r15	
    80f4:	3f 50 dd ff 	add	#-35,	r15	;#0xffdd
    80f8:	1f 54 da ff 	add	-38(r4),r15	;0xffda(r4)
    80fc:	cf 43 00 00 	mov.b	#0,	0(r15)	;r3 As==00, 0x0000(r15)
      }
      else{
        cmd[i]='\0';
        execcmd(&cmd);
        // Reset cmd
        for(j=0;j<CMD_SIZE;j++){
    8100:	94 53 da ff 	inc	-38(r4)	;0xffda(r4)
    8104:	b4 90 20 00 	cmp	#32,	-38(r4)	;#0x0020, 0xffda(r4)
    8108:	da ff 
    810a:	f3 3b       	jl	$-24     	;abs 0x80f2
          cmd[j]=NULL;
        }
        i=0;
    810c:	84 43 d8 ff 	mov	#0,	-40(r4)	;r3 As==00, 0xffd8(r4)
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
      led_red_switch();
    }
  }
    8110:	bd 3f       	jmp	$-132    	;abs 0x808c
        i=0;
      }
    }
    else
    {
      printf("\n\n serial_ring_get() returns 0 : empty ring\n\n");
    8112:	3f 40 8e a1 	mov	#-24178,r15	;#0xa18e
    8116:	b0 12 08 9f 	call	#0x9f08	
      led_red_switch();
    811a:	b0 12 e4 92 	call	#0x92e4	
    }
  }
    811e:	b6 3f       	jmp	$-146    	;abs 0x808c

00008120 <__stop_progExec__>:
    8120:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    8124:	fd 3f       	jmp	$-4      	;abs 0x8120

00008126 <__ctors_end>:
    8126:	30 40 86 a0 	br	#0xa086	

0000812a <tx>:

/* ************************************************** */
#define ID 3

void tx(char cmd[])
{
    812a:	04 12       	push	r4		
    812c:	04 41       	mov	r1,	r4	
    812e:	24 53       	incd	r4		
    8130:	21 83       	decd	r1		
    8132:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    //}
  


  
  cc2500_utx(cmd,strlen(cmd));
    8136:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    813a:	0f 4e       	mov	r14,	r15	
    813c:	1f 83       	dec	r15		
    813e:	1f 53       	inc	r15		
    8140:	cf 93 00 00 	tst.b	0(r15)		;0x0000(r15)
    8144:	fc 23       	jnz	$-6      	;abs 0x813e
    8146:	0f 8e       	sub	r14,	r15	
    8148:	4f 4f       	mov.b	r15,	r15	
    814a:	4e 4f       	mov.b	r15,	r14	
    814c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8150:	b0 12 b4 8a 	call	#0x8ab4	
  printf("tx send msg : %s \n",cmd);
    8154:	14 12 fc ff 	push	-4(r4)		;0xfffc(r4)
    8158:	30 12 ac a0 	push	#-24404	;#0xa0ac
    815c:	b0 12 b4 96 	call	#0x96b4	
    8160:	21 52       	add	#4,	r1	;r2 As==10
}
    8162:	21 53       	incd	r1		
    8164:	34 41       	pop	r4		
    8166:	30 41       	ret			

00008168 <serial_ring_init>:

void serial_ring_init()
{
    8168:	04 12       	push	r4		
    816a:	04 41       	mov	r1,	r4	
    816c:	24 53       	incd	r4		
  serial_rx_rptr = 0;
    816e:	c2 43 0b 02 	mov.b	#0,	&0x020b	;r3 As==00
  serial_rx_wptr = 0;
    8172:	c2 43 14 02 	mov.b	#0,	&0x0214	;r3 As==00
  serial_rx_size = 0;
    8176:	c2 43 0a 02 	mov.b	#0,	&0x020a	;r3 As==00
}
    817a:	34 41       	pop	r4		
    817c:	30 41       	ret			

0000817e <serial_ring_put>:

void serial_ring_put(uint8_t data)
{
    817e:	04 12       	push	r4		
    8180:	04 41       	mov	r1,	r4	
    8182:	24 53       	incd	r4		
    8184:	21 83       	decd	r1		
    8186:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
  serial_rx_buffer[serial_rx_wptr] = data;
    818a:	5f 42 14 02 	mov.b	&0x0214,r15	
    818e:	4f 4f       	mov.b	r15,	r15	
    8190:	df 44 fc ff 	mov.b	-4(r4),	524(r15);0xfffc(r4), 0x020c(r15)
    8194:	0c 02 
  serial_rx_wptr = (serial_rx_wptr + 1) % SERIAL_RX_FIFO_SIZE;
    8196:	5f 42 14 02 	mov.b	&0x0214,r15	
    819a:	4f 4f       	mov.b	r15,	r15	
    819c:	1f 53       	inc	r15		
    819e:	3f f0 07 80 	and	#-32761,r15	;#0x8007
    81a2:	0f 93       	tst	r15		
    81a4:	04 34       	jge	$+10     	;abs 0x81ae
    81a6:	3f 53       	add	#-1,	r15	;r3 As==11
    81a8:	3f d0 f8 ff 	bis	#-8,	r15	;#0xfff8
    81ac:	1f 53       	inc	r15		
    81ae:	4f 4f       	mov.b	r15,	r15	
    81b0:	c2 4f 14 02 	mov.b	r15,	&0x0214	
  if (serial_rx_size < SERIAL_RX_FIFO_SIZE)
    81b4:	5f 42 0a 02 	mov.b	&0x020a,r15	
    81b8:	7f 92       	cmp.b	#8,	r15	;r2 As==11
    81ba:	05 2c       	jc	$+12     	;abs 0x81c6
  {
    serial_rx_size ++;
    81bc:	5f 42 0a 02 	mov.b	&0x020a,r15	
    81c0:	5f 53       	inc.b	r15		
    81c2:	c2 4f 0a 02 	mov.b	r15,	&0x020a	
    /*
     * if (serial_rx_size == SERIAL_RX_FIFO_SIZE)
     * we get a rx_overflow
     */
  }
}
    81c6:	21 53       	incd	r1		
    81c8:	34 41       	pop	r4		
    81ca:	30 41       	ret			

000081cc <serial_ring_get>:

int serial_ring_get(uint8_t *data)
{
    81cc:	04 12       	push	r4		
    81ce:	04 41       	mov	r1,	r4	
    81d0:	24 53       	incd	r4		
    81d2:	21 82       	sub	#4,	r1	;r2 As==10
    81d4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  int ret = 0;
    81d8:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
  dint();
    81dc:	32 c2       	dint			
    81de:	03 43       	nop			
  if (serial_rx_size > 0)
    81e0:	5f 42 0a 02 	mov.b	&0x020a,r15	
    81e4:	4f 93       	tst.b	r15		
    81e6:	1f 24       	jz	$+64     	;abs 0x8226
  {
    *data = serial_rx_buffer[serial_rx_rptr];
    81e8:	5f 42 0b 02 	mov.b	&0x020b,r15	
    81ec:	4f 4f       	mov.b	r15,	r15	
    81ee:	5e 4f 0c 02 	mov.b	524(r15),r14	;0x020c(r15)
    81f2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81f6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    serial_rx_rptr = (serial_rx_rptr + 1) % SERIAL_RX_FIFO_SIZE;
    81fa:	5f 42 0b 02 	mov.b	&0x020b,r15	
    81fe:	4f 4f       	mov.b	r15,	r15	
    8200:	1f 53       	inc	r15		
    8202:	3f f0 07 80 	and	#-32761,r15	;#0x8007
    8206:	0f 93       	tst	r15		
    8208:	04 34       	jge	$+10     	;abs 0x8212
    820a:	3f 53       	add	#-1,	r15	;r3 As==11
    820c:	3f d0 f8 ff 	bis	#-8,	r15	;#0xfff8
    8210:	1f 53       	inc	r15		
    8212:	4f 4f       	mov.b	r15,	r15	
    8214:	c2 4f 0b 02 	mov.b	r15,	&0x020b	
    serial_rx_size --;
    8218:	5f 42 0a 02 	mov.b	&0x020a,r15	
    821c:	7f 53       	add.b	#-1,	r15	;r3 As==11
    821e:	c2 4f 0a 02 	mov.b	r15,	&0x020a	
    ret = 1;
    8222:	94 43 fa ff 	mov	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
  }
  eint();
    8226:	32 d2       	eint			
  return ret;
    8228:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
}
    822c:	21 52       	add	#4,	r1	;r2 As==10
    822e:	34 41       	pop	r4		
    8230:	30 41       	ret			

00008232 <serial_cb>:
/* ************************************************** */
/* ************************************************** */
/* ************************************************** */

int serial_cb(unsigned char data)
{
    8232:	04 12       	push	r4		
    8234:	04 41       	mov	r1,	r4	
    8236:	24 53       	incd	r4		
    8238:	21 83       	decd	r1		
    823a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
  serial_ring_put(data);
    823e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8242:	b0 12 7e 81 	call	#0x817e	
  return 1; /* will wakeup from LPMx */
    8246:	1f 43       	mov	#1,	r15	;r3 As==01
}
    8248:	21 53       	incd	r1		
    824a:	34 41       	pop	r4		
    824c:	30 41       	ret			

0000824e <execcmd>:

void execcmd(char cmd[]){
    824e:	04 12       	push	r4		
    8250:	04 41       	mov	r1,	r4	
    8252:	24 53       	incd	r4		
    8254:	21 83       	decd	r1		
    8256:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)

  if(strcmp(cmd, "test") == 0){
    825a:	3e 40 bf a0 	mov	#-24385,r14	;#0xa0bf
    825e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8262:	b0 12 96 96 	call	#0x9696	
    8266:	0f 93       	tst	r15		
    8268:	06 20       	jnz	$+14     	;abs 0x8276
    printf("\nHello World");
    826a:	30 12 c4 a0 	push	#-24380	;#0xa0c4
    826e:	b0 12 b4 96 	call	#0x96b4	
    8272:	21 53       	incd	r1		
    8274:	28 3c       	jmp	$+82     	;abs 0x82c6
  }
  else if(strcmp(cmd, "help") == 0){
    8276:	3e 40 d1 a0 	mov	#-24367,r14	;#0xa0d1
    827a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    827e:	b0 12 96 96 	call	#0x9696	
    8282:	0f 93       	tst	r15		
    8284:	05 20       	jnz	$+12     	;abs 0x8290
    printf("\ntest   : Hello World\ngreen led on : Turn green led on\ngreen led off : Turn green led off\n");
    8286:	3f 40 d6 a0 	mov	#-24362,r15	;#0xa0d6
    828a:	b0 12 08 9f 	call	#0x9f08	
    828e:	1b 3c       	jmp	$+56     	;abs 0x82c6
  }
  else if(strcmp(cmd, "green led on") == 0){
    8290:	3e 40 30 a1 	mov	#-24272,r14	;#0xa130
    8294:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8298:	b0 12 96 96 	call	#0x9696	
    829c:	0f 93       	tst	r15		
    829e:	03 20       	jnz	$+8      	;abs 0x82a6
    led_green_on();
    82a0:	b0 12 92 92 	call	#0x9292	
    82a4:	10 3c       	jmp	$+34     	;abs 0x82c6
  }
  else if(strcmp(cmd, "green led off") == 0){
    82a6:	3e 40 3d a1 	mov	#-24259,r14	;#0xa13d
    82aa:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82ae:	b0 12 96 96 	call	#0x9696	
    82b2:	0f 93       	tst	r15		
    82b4:	03 20       	jnz	$+8      	;abs 0x82bc
    led_green_off();
    82b6:	b0 12 7c 92 	call	#0x927c	
    82ba:	05 3c       	jmp	$+12     	;abs 0x82c6
  }
  else{
    printf("\nCommande inconnue : help for help");
    82bc:	30 12 4b a1 	push	#-24245	;#0xa14b
    82c0:	b0 12 b4 96 	call	#0x96b4	
    82c4:	21 53       	incd	r1		
  }
  tx(cmd);
    82c6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82ca:	b0 12 2a 81 	call	#0x812a	
  printf("\n");
    82ce:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    82d2:	b0 12 6e 95 	call	#0x956e	
}
    82d6:	21 53       	incd	r1		
    82d8:	34 41       	pop	r4		
    82da:	30 41       	ret			

000082dc <CC2500_HW_GDO0_IRQ_ON_ASSERT>:
    82dc:	04 12       	push	r4		
    82de:	04 41       	mov	r1,	r4	
    82e0:	24 53       	incd	r4		
    82e2:	5f 42 2c 00 	mov.b	&0x002c,r15	
    82e6:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    82ea:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    82ee:	34 41       	pop	r4		
    82f0:	30 41       	ret			

000082f2 <CC2500_HW_GDO2_IRQ_ON_ASSERT>:
    82f2:	04 12       	push	r4		
    82f4:	04 41       	mov	r1,	r4	
    82f6:	24 53       	incd	r4		
    82f8:	5f 42 2c 00 	mov.b	&0x002c,r15	
    82fc:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    8300:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    8304:	34 41       	pop	r4		
    8306:	30 41       	ret			

00008308 <CC2500_HW_GDO0_DINT>:
    8308:	04 12       	push	r4		
    830a:	04 41       	mov	r1,	r4	
    830c:	24 53       	incd	r4		
    830e:	5f 42 2d 00 	mov.b	&0x002d,r15	
    8312:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    8316:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    831a:	34 41       	pop	r4		
    831c:	30 41       	ret			

0000831e <CC2500_HW_GDO2_DINT>:
    831e:	04 12       	push	r4		
    8320:	04 41       	mov	r1,	r4	
    8322:	24 53       	incd	r4		
    8324:	5f 42 2d 00 	mov.b	&0x002d,r15	
    8328:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    832c:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    8330:	34 41       	pop	r4		
    8332:	30 41       	ret			

00008334 <CC2500_HW_GDO0_EINT>:
    8334:	04 12       	push	r4		
    8336:	04 41       	mov	r1,	r4	
    8338:	24 53       	incd	r4		
    833a:	5f 42 2d 00 	mov.b	&0x002d,r15	
    833e:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    8342:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    8346:	34 41       	pop	r4		
    8348:	30 41       	ret			

0000834a <CC2500_HW_GDO0_CLEAR_FLAG>:
    834a:	04 12       	push	r4		
    834c:	04 41       	mov	r1,	r4	
    834e:	24 53       	incd	r4		
    8350:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8354:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    8358:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    835c:	34 41       	pop	r4		
    835e:	30 41       	ret			

00008360 <CC2500_HW_GDO2_CLEAR_FLAG>:
    8360:	04 12       	push	r4		
    8362:	04 41       	mov	r1,	r4	
    8364:	24 53       	incd	r4		
    8366:	5f 42 2b 00 	mov.b	&0x002b,r15	
    836a:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    836e:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8372:	34 41       	pop	r4		
    8374:	30 41       	ret			

00008376 <CONFIG_GDO0_PIN_AS_INPUT>:
    8376:	04 12       	push	r4		
    8378:	04 41       	mov	r1,	r4	
    837a:	24 53       	incd	r4		
    837c:	5f 42 2e 00 	mov.b	&0x002e,r15	
    8380:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    8384:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    8388:	34 41       	pop	r4		
    838a:	30 41       	ret			

0000838c <CC2500_HW_INIT>:
    838c:	04 12       	push	r4		
    838e:	04 41       	mov	r1,	r4	
    8390:	24 53       	incd	r4		
    8392:	5f 42 2e 00 	mov.b	&0x002e,r15	
    8396:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    839a:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    839e:	5f 42 2a 00 	mov.b	&0x002a,r15	
    83a2:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    83a6:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    83aa:	5f 42 2d 00 	mov.b	&0x002d,r15	
    83ae:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    83b2:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    83b6:	5f 42 2c 00 	mov.b	&0x002c,r15	
    83ba:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    83be:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    83c2:	5f 42 2b 00 	mov.b	&0x002b,r15	
    83c6:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    83ca:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    83ce:	5f 42 2f 00 	mov.b	&0x002f,r15	
    83d2:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    83d6:	c2 4f 2f 00 	mov.b	r15,	&0x002f	
    83da:	34 41       	pop	r4		
    83dc:	30 41       	ret			

000083de <CC2500_SPI_TX>:
    83de:	04 12       	push	r4		
    83e0:	04 41       	mov	r1,	r4	
    83e2:	24 53       	incd	r4		
    83e4:	21 83       	decd	r1		
    83e6:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    83ea:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83ee:	b0 12 c6 93 	call	#0x93c6	
    83f2:	4f 4f       	mov.b	r15,	r15	
    83f4:	c2 4f 1e 02 	mov.b	r15,	&0x021e	
    83f8:	21 53       	incd	r1		
    83fa:	34 41       	pop	r4		
    83fc:	30 41       	ret			

000083fe <CC2500_SPI_STROBE>:
    83fe:	04 12       	push	r4		
    8400:	04 41       	mov	r1,	r4	
    8402:	24 53       	incd	r4		
    8404:	21 83       	decd	r1		
    8406:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    840a:	b0 12 aa 94 	call	#0x94aa	
    840e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8412:	b0 12 de 83 	call	#0x83de	
    8416:	b0 12 c0 94 	call	#0x94c0	
    841a:	21 53       	incd	r1		
    841c:	34 41       	pop	r4		
    841e:	30 41       	ret			

00008420 <CC2500_SPI_WREG>:
    8420:	04 12       	push	r4		
    8422:	04 41       	mov	r1,	r4	
    8424:	24 53       	incd	r4		
    8426:	21 82       	sub	#4,	r1	;r2 As==10
    8428:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    842c:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    8430:	b0 12 aa 94 	call	#0x94aa	
    8434:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8438:	b0 12 de 83 	call	#0x83de	
    843c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8440:	b0 12 de 83 	call	#0x83de	
    8444:	b0 12 c0 94 	call	#0x94c0	
    8448:	21 52       	add	#4,	r1	;r2 As==10
    844a:	34 41       	pop	r4		
    844c:	30 41       	ret			

0000844e <CC2500_SPI_RREG>:
    844e:	04 12       	push	r4		
    8450:	04 41       	mov	r1,	r4	
    8452:	24 53       	incd	r4		
    8454:	21 82       	sub	#4,	r1	;r2 As==10
    8456:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    845a:	b0 12 aa 94 	call	#0x94aa	
    845e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8462:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    8466:	b0 12 de 83 	call	#0x83de	
    846a:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    846e:	b0 12 c6 93 	call	#0x93c6	
    8472:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8476:	b0 12 c0 94 	call	#0x94c0	
    847a:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    847e:	21 52       	add	#4,	r1	;r2 As==10
    8480:	34 41       	pop	r4		
    8482:	30 41       	ret			

00008484 <CC2500_SPI_ROREG>:
    8484:	04 12       	push	r4		
    8486:	04 41       	mov	r1,	r4	
    8488:	24 53       	incd	r4		
    848a:	21 82       	sub	#4,	r1	;r2 As==10
    848c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8490:	b0 12 aa 94 	call	#0x94aa	
    8494:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8498:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    849c:	b0 12 de 83 	call	#0x83de	
    84a0:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    84a4:	b0 12 c6 93 	call	#0x93c6	
    84a8:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    84ac:	b0 12 c0 94 	call	#0x94c0	
    84b0:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    84b4:	21 52       	add	#4,	r1	;r2 As==10
    84b6:	34 41       	pop	r4		
    84b8:	30 41       	ret			

000084ba <CC2500_SPI_TX_BYTE>:
    84ba:	04 12       	push	r4		
    84bc:	04 41       	mov	r1,	r4	
    84be:	24 53       	incd	r4		
    84c0:	21 82       	sub	#4,	r1	;r2 As==10
    84c2:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    84c6:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    84ca:	b0 12 aa 94 	call	#0x94aa	
    84ce:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    84d2:	b0 12 de 83 	call	#0x83de	
    84d6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84da:	b0 12 de 83 	call	#0x83de	
    84de:	b0 12 c0 94 	call	#0x94c0	
    84e2:	21 52       	add	#4,	r1	;r2 As==10
    84e4:	34 41       	pop	r4		
    84e6:	30 41       	ret			

000084e8 <CC2500_SPI_RX_BYTE>:
    84e8:	04 12       	push	r4		
    84ea:	04 41       	mov	r1,	r4	
    84ec:	24 53       	incd	r4		
    84ee:	21 82       	sub	#4,	r1	;r2 As==10
    84f0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    84f4:	b0 12 aa 94 	call	#0x94aa	
    84f8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    84fc:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    8500:	b0 12 de 83 	call	#0x83de	
    8504:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    8508:	b0 12 c6 93 	call	#0x93c6	
    850c:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8510:	b0 12 c0 94 	call	#0x94c0	
    8514:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    8518:	21 52       	add	#4,	r1	;r2 As==10
    851a:	34 41       	pop	r4		
    851c:	30 41       	ret			

0000851e <CC2500_SPI_TX_BURST>:
    851e:	04 12       	push	r4		
    8520:	04 41       	mov	r1,	r4	
    8522:	24 53       	incd	r4		
    8524:	31 82       	sub	#8,	r1	;r2 As==11
    8526:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    852a:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    852e:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    8532:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    8536:	b0 12 aa 94 	call	#0x94aa	
    853a:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    853e:	3f d0 40 00 	bis	#64,	r15	;#0x0040
    8542:	b0 12 de 83 	call	#0x83de	
    8546:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    854a:	0a 3c       	jmp	$+22     	;abs 0x8560
    854c:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    8550:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    8554:	6f 4f       	mov.b	@r15,	r15	
    8556:	8f 11       	sxt	r15		
    8558:	b0 12 de 83 	call	#0x83de	
    855c:	d4 53 f6 ff 	inc.b	-10(r4)	;0xfff6(r4)
    8560:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    8564:	1f 94 fc ff 	cmp	-4(r4),	r15	;0xfffc(r4)
    8568:	f1 3b       	jl	$-28     	;abs 0x854c
    856a:	b0 12 c0 94 	call	#0x94c0	
    856e:	31 52       	add	#8,	r1	;r2 As==11
    8570:	34 41       	pop	r4		
    8572:	30 41       	ret			

00008574 <CC2500_SPI_RX_BURST>:
    8574:	0b 12       	push	r11		
    8576:	04 12       	push	r4		
    8578:	04 41       	mov	r1,	r4	
    857a:	24 52       	add	#4,	r4	;r2 As==10
    857c:	31 82       	sub	#8,	r1	;r2 As==11
    857e:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
    8582:	84 4e f8 ff 	mov	r14,	-8(r4)	;0xfff8(r4)
    8586:	84 4d fa ff 	mov	r13,	-6(r4)	;0xfffa(r4)
    858a:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    858e:	b0 12 aa 94 	call	#0x94aa	
    8592:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    8596:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    859a:	b0 12 de 83 	call	#0x83de	
    859e:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    85a2:	0e 3c       	jmp	$+30     	;abs 0x85c0
    85a4:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    85a8:	1b 44 f8 ff 	mov	-8(r4),	r11	;0xfff8(r4)
    85ac:	0b 5f       	add	r15,	r11	
    85ae:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    85b2:	b0 12 c6 93 	call	#0x93c6	
    85b6:	4f 4f       	mov.b	r15,	r15	
    85b8:	cb 4f 00 00 	mov.b	r15,	0(r11)	;0x0000(r11)
    85bc:	d4 53 f4 ff 	inc.b	-12(r4)	;0xfff4(r4)
    85c0:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    85c4:	1f 94 fa ff 	cmp	-6(r4),	r15	;0xfffa(r4)
    85c8:	ed 3b       	jl	$-36     	;abs 0x85a4
    85ca:	b0 12 c0 94 	call	#0x94c0	
    85ce:	31 52       	add	#8,	r1	;r2 As==11
    85d0:	34 41       	pop	r4		
    85d2:	3b 41       	pop	r11		
    85d4:	30 41       	ret			

000085d6 <CC2500_SPI_RX_FIFO_BYTE>:
    85d6:	04 12       	push	r4		
    85d8:	04 41       	mov	r1,	r4	
    85da:	24 53       	incd	r4		
    85dc:	21 83       	decd	r1		
    85de:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    85e2:	b0 12 e8 84 	call	#0x84e8	
    85e6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    85ea:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    85ee:	21 53       	incd	r1		
    85f0:	34 41       	pop	r4		
    85f2:	30 41       	ret			

000085f4 <cc2500_wait_status>:
    85f4:	04 12       	push	r4		
    85f6:	04 41       	mov	r1,	r4	
    85f8:	24 53       	incd	r4		
    85fa:	21 82       	sub	#4,	r1	;r2 As==10
    85fc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8600:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    8604:	b0 12 fe 83 	call	#0x83fe	
    8608:	5f 42 1e 02 	mov.b	&0x021e,r15	
    860c:	4f 4f       	mov.b	r15,	r15	
    860e:	4f 4f       	mov.b	r15,	r15	
    8610:	12 c3       	clrc			
    8612:	4f 10       	rrc.b	r15		
    8614:	12 c3       	clrc			
    8616:	4f 10       	rrc.b	r15		
    8618:	12 c3       	clrc			
    861a:	4f 10       	rrc.b	r15		
    861c:	12 c3       	clrc			
    861e:	4f 10       	rrc.b	r15		
    8620:	4e 4f       	mov.b	r15,	r14	
    8622:	7e f0 07 00 	and.b	#7,	r14	;#0x0007
    8626:	c4 4e fa ff 	mov.b	r14,	-6(r4)	;0xfffa(r4)
    862a:	d4 94 fa ff 	cmp.b	-6(r4),	-4(r4)	;0xfffa(r4), 0xfffc(r4)
    862e:	fc ff 
    8630:	e7 23       	jnz	$-48     	;abs 0x8600
    8632:	21 52       	add	#4,	r1	;r2 As==10
    8634:	34 41       	pop	r4		
    8636:	30 41       	ret			

00008638 <cc2500_gdo0_set_signal>:
    8638:	04 12       	push	r4		
    863a:	04 41       	mov	r1,	r4	
    863c:	24 53       	incd	r4		
    863e:	21 82       	sub	#4,	r1	;r2 As==10
    8640:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8644:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8648:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    864c:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8650:	d2 44 fa ff 	mov.b	-6(r4),	&0x021a	;0xfffa(r4)
    8654:	1a 02 
    8656:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    865a:	0e 4f       	mov	r15,	r14	
    865c:	2f 43       	mov	#2,	r15	;r3 As==10
    865e:	b0 12 20 84 	call	#0x8420	
    8662:	21 52       	add	#4,	r1	;r2 As==10
    8664:	34 41       	pop	r4		
    8666:	30 41       	ret			

00008668 <cc2500_gdo2_set_signal>:
    8668:	04 12       	push	r4		
    866a:	04 41       	mov	r1,	r4	
    866c:	24 53       	incd	r4		
    866e:	21 82       	sub	#4,	r1	;r2 As==10
    8670:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8674:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8678:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    867c:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8680:	d2 44 fa ff 	mov.b	-6(r4),	&0x0216	;0xfffa(r4)
    8684:	16 02 
    8686:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    868a:	0e 4f       	mov	r15,	r14	
    868c:	0f 43       	clr	r15		
    868e:	b0 12 20 84 	call	#0x8420	
    8692:	21 52       	add	#4,	r1	;r2 As==10
    8694:	34 41       	pop	r4		
    8696:	30 41       	ret			

00008698 <cc2500_set_fifo_threshold>:
    8698:	04 12       	push	r4		
    869a:	04 41       	mov	r1,	r4	
    869c:	24 53       	incd	r4		
    869e:	21 82       	sub	#4,	r1	;r2 As==10
    86a0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    86a4:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    86a8:	7f f0 0f 00 	and.b	#15,	r15	;#0x000f
    86ac:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    86b0:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    86b4:	0e 4f       	mov	r15,	r14	
    86b6:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    86ba:	b0 12 20 84 	call	#0x8420	
    86be:	21 52       	add	#4,	r1	;r2 As==10
    86c0:	34 41       	pop	r4		
    86c2:	30 41       	ret			

000086c4 <cc2500_check_tx_underflow>:
    86c4:	04 12       	push	r4		
    86c6:	04 41       	mov	r1,	r4	
    86c8:	24 53       	incd	r4		
    86ca:	21 83       	decd	r1		
    86cc:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    86d0:	b0 12 fe 83 	call	#0x83fe	
    86d4:	5f 42 1e 02 	mov.b	&0x021e,r15	
    86d8:	4f 4f       	mov.b	r15,	r15	
    86da:	4f 4f       	mov.b	r15,	r15	
    86dc:	12 c3       	clrc			
    86de:	4f 10       	rrc.b	r15		
    86e0:	12 c3       	clrc			
    86e2:	4f 10       	rrc.b	r15		
    86e4:	12 c3       	clrc			
    86e6:	4f 10       	rrc.b	r15		
    86e8:	12 c3       	clrc			
    86ea:	4f 10       	rrc.b	r15		
    86ec:	4f 4f       	mov.b	r15,	r15	
    86ee:	0e 4f       	mov	r15,	r14	
    86f0:	3e f0 07 00 	and	#7,	r14	;#0x0007
    86f4:	1f 43       	mov	#1,	r15	;r3 As==01
    86f6:	3e 90 07 00 	cmp	#7,	r14	;#0x0007
    86fa:	01 24       	jz	$+4      	;abs 0x86fe
    86fc:	0f 43       	clr	r15		
    86fe:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8702:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8706:	21 53       	incd	r1		
    8708:	34 41       	pop	r4		
    870a:	30 41       	ret			

0000870c <cc2500_check_rx_overflow>:
    870c:	04 12       	push	r4		
    870e:	04 41       	mov	r1,	r4	
    8710:	24 53       	incd	r4		
    8712:	21 83       	decd	r1		
    8714:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    8718:	b0 12 fe 83 	call	#0x83fe	
    871c:	5f 42 1e 02 	mov.b	&0x021e,r15	
    8720:	4f 4f       	mov.b	r15,	r15	
    8722:	4f 4f       	mov.b	r15,	r15	
    8724:	12 c3       	clrc			
    8726:	4f 10       	rrc.b	r15		
    8728:	12 c3       	clrc			
    872a:	4f 10       	rrc.b	r15		
    872c:	12 c3       	clrc			
    872e:	4f 10       	rrc.b	r15		
    8730:	12 c3       	clrc			
    8732:	4f 10       	rrc.b	r15		
    8734:	4f 4f       	mov.b	r15,	r15	
    8736:	0e 4f       	mov	r15,	r14	
    8738:	3e f0 07 00 	and	#7,	r14	;#0x0007
    873c:	5f 43       	mov.b	#1,	r15	;r3 As==01
    873e:	3e 90 06 00 	cmp	#6,	r14	;#0x0006
    8742:	01 24       	jz	$+4      	;abs 0x8746
    8744:	4f 43       	clr.b	r15		
    8746:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    874a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    874e:	8f 11       	sxt	r15		
    8750:	21 53       	incd	r1		
    8752:	34 41       	pop	r4		
    8754:	30 41       	ret			

00008756 <cc2500_check_fifo_xflow_flush>:
    8756:	04 12       	push	r4		
    8758:	04 41       	mov	r1,	r4	
    875a:	24 53       	incd	r4		
    875c:	b0 12 c4 86 	call	#0x86c4	
    8760:	0f 93       	tst	r15		
    8762:	04 24       	jz	$+10     	;abs 0x876c
    8764:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8768:	b0 12 fe 83 	call	#0x83fe	
    876c:	b0 12 0c 87 	call	#0x870c	
    8770:	0f 93       	tst	r15		
    8772:	04 24       	jz	$+10     	;abs 0x877c
    8774:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    8778:	b0 12 fe 83 	call	#0x83fe	
    877c:	34 41       	pop	r4		
    877e:	30 41       	ret			

00008780 <cc2500_configure>:
    8780:	04 12       	push	r4		
    8782:	04 41       	mov	r1,	r4	
    8784:	24 53       	incd	r4		
    8786:	21 83       	decd	r1		
    8788:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    878c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8790:	6f 4f       	mov.b	@r15,	r15	
    8792:	4f 4f       	mov.b	r15,	r15	
    8794:	0e 4f       	mov	r15,	r14	
    8796:	3f 40 0b 00 	mov	#11,	r15	;#0x000b
    879a:	b0 12 20 84 	call	#0x8420	
    879e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87a2:	5f 4f 01 00 	mov.b	1(r15),	r15	;0x0001(r15)
    87a6:	4f 4f       	mov.b	r15,	r15	
    87a8:	0e 4f       	mov	r15,	r14	
    87aa:	3f 40 0c 00 	mov	#12,	r15	;#0x000c
    87ae:	b0 12 20 84 	call	#0x8420	
    87b2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87b6:	5f 4f 02 00 	mov.b	2(r15),	r15	;0x0002(r15)
    87ba:	4f 4f       	mov.b	r15,	r15	
    87bc:	0e 4f       	mov	r15,	r14	
    87be:	3f 40 0d 00 	mov	#13,	r15	;#0x000d
    87c2:	b0 12 20 84 	call	#0x8420	
    87c6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87ca:	5f 4f 03 00 	mov.b	3(r15),	r15	;0x0003(r15)
    87ce:	4f 4f       	mov.b	r15,	r15	
    87d0:	0e 4f       	mov	r15,	r14	
    87d2:	3f 40 0e 00 	mov	#14,	r15	;#0x000e
    87d6:	b0 12 20 84 	call	#0x8420	
    87da:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87de:	5f 4f 04 00 	mov.b	4(r15),	r15	;0x0004(r15)
    87e2:	4f 4f       	mov.b	r15,	r15	
    87e4:	0e 4f       	mov	r15,	r14	
    87e6:	3f 40 0f 00 	mov	#15,	r15	;#0x000f
    87ea:	b0 12 20 84 	call	#0x8420	
    87ee:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87f2:	5f 4f 05 00 	mov.b	5(r15),	r15	;0x0005(r15)
    87f6:	4f 4f       	mov.b	r15,	r15	
    87f8:	0e 4f       	mov	r15,	r14	
    87fa:	3f 40 10 00 	mov	#16,	r15	;#0x0010
    87fe:	b0 12 20 84 	call	#0x8420	
    8802:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8806:	5f 4f 06 00 	mov.b	6(r15),	r15	;0x0006(r15)
    880a:	4f 4f       	mov.b	r15,	r15	
    880c:	0e 4f       	mov	r15,	r14	
    880e:	3f 40 11 00 	mov	#17,	r15	;#0x0011
    8812:	b0 12 20 84 	call	#0x8420	
    8816:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    881a:	5f 4f 07 00 	mov.b	7(r15),	r15	;0x0007(r15)
    881e:	4f 4f       	mov.b	r15,	r15	
    8820:	0e 4f       	mov	r15,	r14	
    8822:	3f 40 12 00 	mov	#18,	r15	;#0x0012
    8826:	b0 12 20 84 	call	#0x8420	
    882a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    882e:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    8832:	4f 4f       	mov.b	r15,	r15	
    8834:	0e 4f       	mov	r15,	r14	
    8836:	3f 40 13 00 	mov	#19,	r15	;#0x0013
    883a:	b0 12 20 84 	call	#0x8420	
    883e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8842:	5f 4f 09 00 	mov.b	9(r15),	r15	;0x0009(r15)
    8846:	4f 4f       	mov.b	r15,	r15	
    8848:	0e 4f       	mov	r15,	r14	
    884a:	3f 40 14 00 	mov	#20,	r15	;#0x0014
    884e:	b0 12 20 84 	call	#0x8420	
    8852:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8856:	5f 4f 0a 00 	mov.b	10(r15),r15	;0x000a(r15)
    885a:	4f 4f       	mov.b	r15,	r15	
    885c:	0e 4f       	mov	r15,	r14	
    885e:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8862:	b0 12 20 84 	call	#0x8420	
    8866:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    886a:	5f 4f 0b 00 	mov.b	11(r15),r15	;0x000b(r15)
    886e:	4f 4f       	mov.b	r15,	r15	
    8870:	0e 4f       	mov	r15,	r14	
    8872:	3f 40 15 00 	mov	#21,	r15	;#0x0015
    8876:	b0 12 20 84 	call	#0x8420	
    887a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    887e:	5f 4f 0c 00 	mov.b	12(r15),r15	;0x000c(r15)
    8882:	4f 4f       	mov.b	r15,	r15	
    8884:	0e 4f       	mov	r15,	r14	
    8886:	3f 40 21 00 	mov	#33,	r15	;#0x0021
    888a:	b0 12 20 84 	call	#0x8420	
    888e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8892:	5f 4f 0d 00 	mov.b	13(r15),r15	;0x000d(r15)
    8896:	4f 4f       	mov.b	r15,	r15	
    8898:	0e 4f       	mov	r15,	r14	
    889a:	3f 40 22 00 	mov	#34,	r15	;#0x0022
    889e:	b0 12 20 84 	call	#0x8420	
    88a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88a6:	5f 4f 0e 00 	mov.b	14(r15),r15	;0x000e(r15)
    88aa:	4f 4f       	mov.b	r15,	r15	
    88ac:	0e 4f       	mov	r15,	r14	
    88ae:	3f 40 18 00 	mov	#24,	r15	;#0x0018
    88b2:	b0 12 20 84 	call	#0x8420	
    88b6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88ba:	5f 4f 0f 00 	mov.b	15(r15),r15	;0x000f(r15)
    88be:	4f 4f       	mov.b	r15,	r15	
    88c0:	0e 4f       	mov	r15,	r14	
    88c2:	3f 40 19 00 	mov	#25,	r15	;#0x0019
    88c6:	b0 12 20 84 	call	#0x8420	
    88ca:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88ce:	5f 4f 10 00 	mov.b	16(r15),r15	;0x0010(r15)
    88d2:	4f 4f       	mov.b	r15,	r15	
    88d4:	0e 4f       	mov	r15,	r14	
    88d6:	3f 40 1a 00 	mov	#26,	r15	;#0x001a
    88da:	b0 12 20 84 	call	#0x8420	
    88de:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88e2:	5f 4f 11 00 	mov.b	17(r15),r15	;0x0011(r15)
    88e6:	4f 4f       	mov.b	r15,	r15	
    88e8:	0e 4f       	mov	r15,	r14	
    88ea:	3f 40 1b 00 	mov	#27,	r15	;#0x001b
    88ee:	b0 12 20 84 	call	#0x8420	
    88f2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    88f6:	5f 4f 12 00 	mov.b	18(r15),r15	;0x0012(r15)
    88fa:	4f 4f       	mov.b	r15,	r15	
    88fc:	0e 4f       	mov	r15,	r14	
    88fe:	3f 40 1c 00 	mov	#28,	r15	;#0x001c
    8902:	b0 12 20 84 	call	#0x8420	
    8906:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    890a:	5f 4f 13 00 	mov.b	19(r15),r15	;0x0013(r15)
    890e:	4f 4f       	mov.b	r15,	r15	
    8910:	0e 4f       	mov	r15,	r14	
    8912:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    8916:	b0 12 20 84 	call	#0x8420	
    891a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    891e:	5f 4f 14 00 	mov.b	20(r15),r15	;0x0014(r15)
    8922:	4f 4f       	mov.b	r15,	r15	
    8924:	0e 4f       	mov	r15,	r14	
    8926:	3f 40 23 00 	mov	#35,	r15	;#0x0023
    892a:	b0 12 20 84 	call	#0x8420	
    892e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8932:	5f 4f 15 00 	mov.b	21(r15),r15	;0x0015(r15)
    8936:	4f 4f       	mov.b	r15,	r15	
    8938:	0e 4f       	mov	r15,	r14	
    893a:	3f 40 24 00 	mov	#36,	r15	;#0x0024
    893e:	b0 12 20 84 	call	#0x8420	
    8942:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8946:	5f 4f 16 00 	mov.b	22(r15),r15	;0x0016(r15)
    894a:	4f 4f       	mov.b	r15,	r15	
    894c:	0e 4f       	mov	r15,	r14	
    894e:	3f 40 25 00 	mov	#37,	r15	;#0x0025
    8952:	b0 12 20 84 	call	#0x8420	
    8956:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    895a:	5f 4f 17 00 	mov.b	23(r15),r15	;0x0017(r15)
    895e:	4f 4f       	mov.b	r15,	r15	
    8960:	0e 4f       	mov	r15,	r14	
    8962:	3f 40 26 00 	mov	#38,	r15	;#0x0026
    8966:	b0 12 20 84 	call	#0x8420	
    896a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    896e:	5f 4f 18 00 	mov.b	24(r15),r15	;0x0018(r15)
    8972:	4f 4f       	mov.b	r15,	r15	
    8974:	0e 4f       	mov	r15,	r14	
    8976:	3f 40 29 00 	mov	#41,	r15	;#0x0029
    897a:	b0 12 20 84 	call	#0x8420	
    897e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8982:	5f 4f 19 00 	mov.b	25(r15),r15	;0x0019(r15)
    8986:	4f 4f       	mov.b	r15,	r15	
    8988:	0e 4f       	mov	r15,	r14	
    898a:	3f 40 2c 00 	mov	#44,	r15	;#0x002c
    898e:	b0 12 20 84 	call	#0x8420	
    8992:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8996:	5f 4f 1a 00 	mov.b	26(r15),r15	;0x001a(r15)
    899a:	4f 4f       	mov.b	r15,	r15	
    899c:	0e 4f       	mov	r15,	r14	
    899e:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    89a2:	b0 12 20 84 	call	#0x8420	
    89a6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89aa:	5f 4f 1b 00 	mov.b	27(r15),r15	;0x001b(r15)
    89ae:	4f 4f       	mov.b	r15,	r15	
    89b0:	0e 4f       	mov	r15,	r14	
    89b2:	3f 40 2e 00 	mov	#46,	r15	;#0x002e
    89b6:	b0 12 20 84 	call	#0x8420	
    89ba:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89be:	5f 4f 1c 00 	mov.b	28(r15),r15	;0x001c(r15)
    89c2:	4f 4f       	mov.b	r15,	r15	
    89c4:	0e 4f       	mov	r15,	r14	
    89c6:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    89ca:	b0 12 20 84 	call	#0x8420	
    89ce:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89d2:	5f 4f 1d 00 	mov.b	29(r15),r15	;0x001d(r15)
    89d6:	4f 4f       	mov.b	r15,	r15	
    89d8:	0e 4f       	mov	r15,	r14	
    89da:	0f 43       	clr	r15		
    89dc:	b0 12 20 84 	call	#0x8420	
    89e0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89e4:	5f 4f 1e 00 	mov.b	30(r15),r15	;0x001e(r15)
    89e8:	4f 4f       	mov.b	r15,	r15	
    89ea:	0e 4f       	mov	r15,	r14	
    89ec:	2f 43       	mov	#2,	r15	;r3 As==10
    89ee:	b0 12 20 84 	call	#0x8420	
    89f2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89f6:	5f 4f 1f 00 	mov.b	31(r15),r15	;0x001f(r15)
    89fa:	4f 4f       	mov.b	r15,	r15	
    89fc:	0e 4f       	mov	r15,	r14	
    89fe:	3f 40 07 00 	mov	#7,	r15	;#0x0007
    8a02:	b0 12 20 84 	call	#0x8420	
    8a06:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a0a:	5f 4f 20 00 	mov.b	32(r15),r15	;0x0020(r15)
    8a0e:	4f 4f       	mov.b	r15,	r15	
    8a10:	0e 4f       	mov	r15,	r14	
    8a12:	3f 42       	mov	#8,	r15	;r2 As==11
    8a14:	b0 12 20 84 	call	#0x8420	
    8a18:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a1c:	5f 4f 21 00 	mov.b	33(r15),r15	;0x0021(r15)
    8a20:	4f 4f       	mov.b	r15,	r15	
    8a22:	0e 4f       	mov	r15,	r14	
    8a24:	3f 40 09 00 	mov	#9,	r15	;#0x0009
    8a28:	b0 12 20 84 	call	#0x8420	
    8a2c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a30:	5f 4f 22 00 	mov.b	34(r15),r15	;0x0022(r15)
    8a34:	4f 4f       	mov.b	r15,	r15	
    8a36:	0e 4f       	mov	r15,	r14	
    8a38:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8a3c:	b0 12 20 84 	call	#0x8420	
    8a40:	3e 40 fe 00 	mov	#254,	r14	;#0x00fe
    8a44:	3f 40 3e 00 	mov	#62,	r15	;#0x003e
    8a48:	b0 12 20 84 	call	#0x8420	
    8a4c:	7f 40 0f 00 	mov.b	#15,	r15	;#0x000f
    8a50:	b0 12 98 86 	call	#0x8698	
    8a54:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8a56:	b0 12 38 86 	call	#0x8638	
    8a5a:	b0 12 dc 82 	call	#0x82dc	
    8a5e:	b0 12 08 83 	call	#0x8308	
    8a62:	7f 40 06 00 	mov.b	#6,	r15	;#0x0006
    8a66:	b0 12 68 86 	call	#0x8668	
    8a6a:	b0 12 f2 82 	call	#0x82f2	
    8a6e:	b0 12 1e 83 	call	#0x831e	
    8a72:	21 53       	incd	r1		
    8a74:	34 41       	pop	r4		
    8a76:	30 41       	ret			

00008a78 <cc2500_set_channel>:
    8a78:	04 12       	push	r4		
    8a7a:	04 41       	mov	r1,	r4	
    8a7c:	24 53       	incd	r4		
    8a7e:	21 83       	decd	r1		
    8a80:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8a84:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8a88:	0e 4f       	mov	r15,	r14	
    8a8a:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8a8e:	b0 12 20 84 	call	#0x8420	
    8a92:	21 53       	incd	r1		
    8a94:	34 41       	pop	r4		
    8a96:	30 41       	ret			

00008a98 <cc2500_calibrate>:
    8a98:	04 12       	push	r4		
    8a9a:	04 41       	mov	r1,	r4	
    8a9c:	24 53       	incd	r4		
    8a9e:	b0 12 38 8d 	call	#0x8d38	
    8aa2:	3f 40 33 00 	mov	#51,	r15	;#0x0033
    8aa6:	b0 12 fe 83 	call	#0x83fe	
    8aaa:	4f 43       	clr.b	r15		
    8aac:	b0 12 f4 85 	call	#0x85f4	
    8ab0:	34 41       	pop	r4		
    8ab2:	30 41       	ret			

00008ab4 <cc2500_utx>:
    8ab4:	04 12       	push	r4		
    8ab6:	04 41       	mov	r1,	r4	
    8ab8:	24 53       	incd	r4		
    8aba:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8abe:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8ac2:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8ac6:	b0 12 38 8d 	call	#0x8d38	
    8aca:	b0 12 1e 83 	call	#0x831e	
    8ace:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8ad2:	0e 4f       	mov	r15,	r14	
    8ad4:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8ad8:	b0 12 ba 84 	call	#0x84ba	
    8adc:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8ae0:	0d 4f       	mov	r15,	r13	
    8ae2:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    8ae6:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8aea:	b0 12 1e 85 	call	#0x851e	
    8aee:	3f 40 35 00 	mov	#53,	r15	;#0x0035
    8af2:	b0 12 fe 83 	call	#0x83fe	
    8af6:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    8afa:	b0 12 84 84 	call	#0x8484	
    8afe:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8b02:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8b06:	3f f0 7f 00 	and	#127,	r15	;#0x007f
    8b0a:	1f 93       	cmp	#1,	r15	;r3 As==01
    8b0c:	f4 37       	jge	$-22     	;abs 0x8af6
    8b0e:	b0 12 4a 83 	call	#0x834a	
    8b12:	b0 12 60 83 	call	#0x8360	
    8b16:	31 50 06 00 	add	#6,	r1	;#0x0006
    8b1a:	34 41       	pop	r4		
    8b1c:	30 41       	ret			

00008b1e <cc2500_rx_register_buffer>:
    8b1e:	04 12       	push	r4		
    8b20:	04 41       	mov	r1,	r4	
    8b22:	24 53       	incd	r4		
    8b24:	21 82       	sub	#4,	r1	;r2 As==10
    8b26:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8b2a:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8b2e:	92 44 fa ff 	mov	-6(r4),	&0x021c	;0xfffa(r4)
    8b32:	1c 02 
    8b34:	c2 43 00 02 	mov.b	#0,	&0x0200	;r3 As==00
    8b38:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8b3c:	0e 4f       	mov	r15,	r14	
    8b3e:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8b42:	b0 12 20 84 	call	#0x8420	
    8b46:	21 52       	add	#4,	r1	;r2 As==10
    8b48:	34 41       	pop	r4		
    8b4a:	30 41       	ret			

00008b4c <cc2500_rx_enter>:
    8b4c:	04 12       	push	r4		
    8b4e:	04 41       	mov	r1,	r4	
    8b50:	24 53       	incd	r4		
    8b52:	b0 12 38 8d 	call	#0x8d38	
    8b56:	c2 43 00 02 	mov.b	#0,	&0x0200	;r3 As==00
    8b5a:	b0 12 4a 83 	call	#0x834a	
    8b5e:	b0 12 60 83 	call	#0x8360	
    8b62:	b0 12 34 83 	call	#0x8334	
    8b66:	b0 12 1e 83 	call	#0x831e	
    8b6a:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8b6e:	b0 12 fe 83 	call	#0x83fe	
    8b72:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8b74:	b0 12 f4 85 	call	#0x85f4	
    8b78:	34 41       	pop	r4		
    8b7a:	30 41       	ret			

00008b7c <cc2500_rx_pkt_eop>:
    8b7c:	0b 12       	push	r11		
    8b7e:	04 12       	push	r4		
    8b80:	04 41       	mov	r1,	r4	
    8b82:	24 52       	add	#4,	r4	;r2 As==10
    8b84:	31 50 f6 ff 	add	#-10,	r1	;#0xfff6
    8b88:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8b8c:	b0 12 84 84 	call	#0x8484	
    8b90:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8b94:	d4 44 f2 ff 	mov.b	-14(r4),-10(r4)	;0xfff2(r4), 0xfff6(r4)
    8b98:	f6 ff 
    8b9a:	c4 43 f7 ff 	mov.b	#0,	-9(r4)	;r3 As==00, 0xfff7(r4)
    8b9e:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8ba2:	b0 12 84 84 	call	#0x8484	
    8ba6:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8baa:	e4 93 f2 ff 	cmp.b	#2,	-14(r4)	;r3 As==10, 0xfff2(r4)
    8bae:	05 2c       	jc	$+12     	;abs 0x8bba
    8bb0:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8bb4:	1f 94 f6 ff 	cmp	-10(r4),r15	;0xfff6(r4)
    8bb8:	ed 23       	jnz	$-36     	;abs 0x8b94
    8bba:	c4 93 f2 ff 	tst.b	-14(r4)	;0xfff2(r4)
    8bbe:	68 24       	jz	$+210    	;abs 0x8c90
    8bc0:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8bc4:	4f 93       	tst.b	r15		
    8bc6:	59 38       	jl	$+180    	;abs 0x8c7a
    8bc8:	b0 12 d6 85 	call	#0x85d6	
    8bcc:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8bd0:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8bd4:	0e 4f       	mov	r15,	r14	
    8bd6:	3e 53       	add	#-1,	r14	;r3 As==11
    8bd8:	1f 42 1c 02 	mov	&0x021c,r15	
    8bdc:	0d 4e       	mov	r14,	r13	
    8bde:	0e 4f       	mov	r15,	r14	
    8be0:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8be4:	b0 12 74 85 	call	#0x8574	
    8be8:	1e 42 1c 02 	mov	&0x021c,r14	
    8bec:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8bf0:	0f 5e       	add	r14,	r15	
    8bf2:	6f 4f       	mov.b	@r15,	r15	
    8bf4:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8bf8:	c4 43 fb ff 	mov.b	#0,	-5(r4)	;r3 As==00, 0xfffb(r4)
    8bfc:	b4 90 80 00 	cmp	#128,	-6(r4)	;#0x0080, 0xfffa(r4)
    8c00:	fa ff 
    8c02:	0e 38       	jl	$+30     	;abs 0x8c20
    8c04:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8c08:	3f 50 00 ff 	add	#-256,	r15	;#0xff00
    8c0c:	0f 93       	tst	r15		
    8c0e:	01 34       	jge	$+4      	;abs 0x8c12
    8c10:	1f 53       	inc	r15		
    8c12:	0f 11       	rra	r15		
    8c14:	0e 4f       	mov	r15,	r14	
    8c16:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8c1a:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8c1e:	0b 3c       	jmp	$+24     	;abs 0x8c36
    8c20:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8c24:	0f 93       	tst	r15		
    8c26:	01 34       	jge	$+4      	;abs 0x8c2a
    8c28:	1f 53       	inc	r15		
    8c2a:	0f 11       	rra	r15		
    8c2c:	0e 4f       	mov	r15,	r14	
    8c2e:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8c32:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8c36:	1e 42 1c 02 	mov	&0x021c,r14	
    8c3a:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8c3e:	1f 53       	inc	r15		
    8c40:	0f 5e       	add	r14,	r15	
    8c42:	6f 4f       	mov.b	@r15,	r15	
    8c44:	4f 93       	tst.b	r15		
    8c46:	0e 34       	jge	$+30     	;abs 0x8c64
    8c48:	1c 42 18 02 	mov	&0x0218,r12	
    8c4c:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8c50:	4e 4f       	mov.b	r15,	r14	
    8c52:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8c56:	1b 42 1c 02 	mov	&0x021c,r11	
    8c5a:	4d 4e       	mov.b	r14,	r13	
    8c5c:	0e 4f       	mov	r15,	r14	
    8c5e:	0f 4b       	mov	r11,	r15	
    8c60:	8c 12       	call	r12		
    8c62:	1f 3c       	jmp	$+64     	;abs 0x8ca2
    8c64:	b0 12 56 87 	call	#0x8756	
    8c68:	1c 42 18 02 	mov	&0x0218,r12	
    8c6c:	1f 42 1c 02 	mov	&0x021c,r15	
    8c70:	4d 43       	clr.b	r13		
    8c72:	3e 40 fd ff 	mov	#-3,	r14	;#0xfffd
    8c76:	8c 12       	call	r12		
    8c78:	14 3c       	jmp	$+42     	;abs 0x8ca2
    8c7a:	b0 12 56 87 	call	#0x8756	
    8c7e:	1c 42 18 02 	mov	&0x0218,r12	
    8c82:	1f 42 1c 02 	mov	&0x021c,r15	
    8c86:	4d 43       	clr.b	r13		
    8c88:	3e 40 fe ff 	mov	#-2,	r14	;#0xfffe
    8c8c:	8c 12       	call	r12		
    8c8e:	09 3c       	jmp	$+20     	;abs 0x8ca2
    8c90:	b0 12 56 87 	call	#0x8756	
    8c94:	1c 42 18 02 	mov	&0x0218,r12	
    8c98:	1f 42 1c 02 	mov	&0x021c,r15	
    8c9c:	4d 43       	clr.b	r13		
    8c9e:	3e 43       	mov	#-1,	r14	;r3 As==11
    8ca0:	8c 12       	call	r12		
    8ca2:	b0 12 4a 83 	call	#0x834a	
    8ca6:	b0 12 60 83 	call	#0x8360	
    8caa:	31 50 0a 00 	add	#10,	r1	;#0x000a
    8cae:	34 41       	pop	r4		
    8cb0:	3b 41       	pop	r11		
    8cb2:	30 41       	ret			

00008cb4 <cc2500_rx_register_cb>:
    8cb4:	04 12       	push	r4		
    8cb6:	04 41       	mov	r1,	r4	
    8cb8:	24 53       	incd	r4		
    8cba:	21 83       	decd	r1		
    8cbc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8cc0:	92 44 fc ff 	mov	-4(r4),	&0x0218	;0xfffc(r4)
    8cc4:	18 02 
    8cc6:	21 53       	incd	r1		
    8cc8:	34 41       	pop	r4		
    8cca:	30 41       	ret			

00008ccc <cc2500_packet_status>:
    8ccc:	04 12       	push	r4		
    8cce:	04 41       	mov	r1,	r4	
    8cd0:	24 53       	incd	r4		
    8cd2:	21 83       	decd	r1		
    8cd4:	3f 40 38 00 	mov	#56,	r15	;#0x0038
    8cd8:	b0 12 84 84 	call	#0x8484	
    8cdc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8ce0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8ce4:	21 53       	incd	r1		
    8ce6:	34 41       	pop	r4		
    8ce8:	30 41       	ret			

00008cea <cc2500_cca>:
    8cea:	04 12       	push	r4		
    8cec:	04 41       	mov	r1,	r4	
    8cee:	24 53       	incd	r4		
    8cf0:	21 83       	decd	r1		
    8cf2:	b0 12 cc 8c 	call	#0x8ccc	
    8cf6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8cfa:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8cfe:	4f 4f       	mov.b	r15,	r15	
    8d00:	12 c3       	clrc			
    8d02:	4f 10       	rrc.b	r15		
    8d04:	12 c3       	clrc			
    8d06:	4f 10       	rrc.b	r15		
    8d08:	12 c3       	clrc			
    8d0a:	4f 10       	rrc.b	r15		
    8d0c:	12 c3       	clrc			
    8d0e:	4f 10       	rrc.b	r15		
    8d10:	4f 4f       	mov.b	r15,	r15	
    8d12:	1f f3       	and	#1,	r15	;r3 As==01
    8d14:	21 53       	incd	r1		
    8d16:	34 41       	pop	r4		
    8d18:	30 41       	ret			

00008d1a <cc2500_get_rssi>:
    8d1a:	04 12       	push	r4		
    8d1c:	04 41       	mov	r1,	r4	
    8d1e:	24 53       	incd	r4		
    8d20:	21 83       	decd	r1		
    8d22:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8d26:	b0 12 84 84 	call	#0x8484	
    8d2a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8d2e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8d32:	21 53       	incd	r1		
    8d34:	34 41       	pop	r4		
    8d36:	30 41       	ret			

00008d38 <cc2500_idle>:
    8d38:	04 12       	push	r4		
    8d3a:	04 41       	mov	r1,	r4	
    8d3c:	24 53       	incd	r4		
    8d3e:	b0 12 08 83 	call	#0x8308	
    8d42:	b0 12 1e 83 	call	#0x831e	
    8d46:	b0 12 56 87 	call	#0x8756	
    8d4a:	3f 40 36 00 	mov	#54,	r15	;#0x0036
    8d4e:	b0 12 fe 83 	call	#0x83fe	
    8d52:	4f 43       	clr.b	r15		
    8d54:	b0 12 f4 85 	call	#0x85f4	
    8d58:	34 41       	pop	r4		
    8d5a:	30 41       	ret			

00008d5c <cc2500_sleep>:
    8d5c:	04 12       	push	r4		
    8d5e:	04 41       	mov	r1,	r4	
    8d60:	24 53       	incd	r4		
    8d62:	3f 40 39 00 	mov	#57,	r15	;#0x0039
    8d66:	b0 12 fe 83 	call	#0x83fe	
    8d6a:	34 41       	pop	r4		
    8d6c:	30 41       	ret			

00008d6e <cc2500_reset>:
    8d6e:	04 12       	push	r4		
    8d70:	04 41       	mov	r1,	r4	
    8d72:	24 53       	incd	r4		
    8d74:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8d78:	b0 12 fe 83 	call	#0x83fe	
    8d7c:	4f 43       	clr.b	r15		
    8d7e:	b0 12 f4 85 	call	#0x85f4	
    8d82:	34 41       	pop	r4		
    8d84:	30 41       	ret			

00008d86 <cc2500_wakeup>:
    8d86:	04 12       	push	r4		
    8d88:	04 41       	mov	r1,	r4	
    8d8a:	24 53       	incd	r4		
    8d8c:	b0 12 aa 94 	call	#0x94aa	
    8d90:	03 43       	nop			
    8d92:	b0 12 00 94 	call	#0x9400	
    8d96:	0f 93       	tst	r15		
    8d98:	fc 23       	jnz	$-6      	;abs 0x8d92
    8d9a:	b0 12 c0 94 	call	#0x94c0	
    8d9e:	b0 12 38 8d 	call	#0x8d38	
    8da2:	4f 43       	clr.b	r15		
    8da4:	b0 12 f4 85 	call	#0x85f4	
    8da8:	34 41       	pop	r4		
    8daa:	30 41       	ret			

00008dac <cc2500_variables_bootstrap>:
    8dac:	04 12       	push	r4		
    8dae:	04 41       	mov	r1,	r4	
    8db0:	24 53       	incd	r4		
    8db2:	c2 43 1e 02 	mov.b	#0,	&0x021e	;r3 As==00
    8db6:	82 43 1c 02 	mov	#0,	&0x021c	;r3 As==00
    8dba:	c2 43 00 02 	mov.b	#0,	&0x0200	;r3 As==00
    8dbe:	c2 43 02 02 	mov.b	#0,	&0x0202	;r3 As==00
    8dc2:	34 41       	pop	r4		
    8dc4:	30 41       	ret			

00008dc6 <CC_ASSERT>:
    8dc6:	04 12       	push	r4		
    8dc8:	04 41       	mov	r1,	r4	
    8dca:	24 53       	incd	r4		
    8dcc:	21 83       	decd	r1		
    8dce:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8dd2:	21 53       	incd	r1		
    8dd4:	34 41       	pop	r4		
    8dd6:	30 41       	ret			

00008dd8 <cc2500_init>:
    8dd8:	04 12       	push	r4		
    8dda:	04 41       	mov	r1,	r4	
    8ddc:	24 53       	incd	r4		
    8dde:	21 83       	decd	r1		
    8de0:	b0 12 ac 8d 	call	#0x8dac	
    8de4:	b0 12 8c 83 	call	#0x838c	
    8de8:	b0 12 76 83 	call	#0x8376	
    8dec:	b0 12 aa 94 	call	#0x94aa	
    8df0:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8df4:	b0 12 48 91 	call	#0x9148	
    8df8:	b0 12 c0 94 	call	#0x94c0	
    8dfc:	3f 40 28 00 	mov	#40,	r15	;#0x0028
    8e00:	b0 12 48 91 	call	#0x9148	
    8e04:	b0 12 aa 94 	call	#0x94aa	
    8e08:	03 43       	nop			
    8e0a:	b0 12 00 94 	call	#0x9400	
    8e0e:	0f 93       	tst	r15		
    8e10:	fc 23       	jnz	$-6      	;abs 0x8e0a
    8e12:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8e16:	b0 12 c6 93 	call	#0x93c6	
    8e1a:	03 43       	nop			
    8e1c:	b0 12 00 94 	call	#0x9400	
    8e20:	0f 93       	tst	r15		
    8e22:	fc 23       	jnz	$-6      	;abs 0x8e1c
    8e24:	b0 12 c0 94 	call	#0x94c0	
    8e28:	3e 40 a5 00 	mov	#165,	r14	;#0x00a5
    8e2c:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8e30:	b0 12 20 84 	call	#0x8420	
    8e34:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8e38:	b0 12 4e 84 	call	#0x844e	
    8e3c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8e40:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8e44:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8e48:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8e4c:	1f 43       	mov	#1,	r15	;r3 As==01
    8e4e:	3e 90 a5 00 	cmp	#165,	r14	;#0x00a5
    8e52:	01 24       	jz	$+4      	;abs 0x8e56
    8e54:	0f 43       	clr	r15		
    8e56:	b0 12 c6 8d 	call	#0x8dc6	
    8e5a:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    8e5e:	b0 12 84 84 	call	#0x8484	
    8e62:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8e66:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8e6a:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8e6e:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8e72:	1f 43       	mov	#1,	r15	;r3 As==01
    8e74:	3e 90 80 00 	cmp	#128,	r14	;#0x0080
    8e78:	01 24       	jz	$+4      	;abs 0x8e7c
    8e7a:	0f 43       	clr	r15		
    8e7c:	b0 12 c6 8d 	call	#0x8dc6	
    8e80:	3f 40 31 00 	mov	#49,	r15	;#0x0031
    8e84:	b0 12 84 84 	call	#0x8484	
    8e88:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8e8c:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    8e90:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8e94:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8e98:	1f 43       	mov	#1,	r15	;r3 As==01
    8e9a:	3e 90 03 00 	cmp	#3,	r14	;#0x0003
    8e9e:	01 2c       	jc	$+4      	;abs 0x8ea2
    8ea0:	0f 43       	clr	r15		
    8ea2:	b0 12 c6 8d 	call	#0x8dc6	
    8ea6:	3f 40 bc a1 	mov	#-24132,r15	;#0xa1bc
    8eaa:	b0 12 80 87 	call	#0x8780	
    8eae:	21 53       	incd	r1		
    8eb0:	34 41       	pop	r4		
    8eb2:	30 41       	ret			

00008eb4 <cc2500_gdox_signal_handler>:
    8eb4:	04 12       	push	r4		
    8eb6:	04 41       	mov	r1,	r4	
    8eb8:	24 53       	incd	r4		
    8eba:	21 83       	decd	r1		
    8ebc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8ec0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8ec4:	1f f3       	and	#1,	r15	;r3 As==01
    8ec6:	4f 4f       	mov.b	r15,	r15	
    8ec8:	4f 93       	tst.b	r15		
    8eca:	02 24       	jz	$+6      	;abs 0x8ed0
    8ecc:	b0 12 7c 8b 	call	#0x8b7c	
    8ed0:	21 53       	incd	r1		
    8ed2:	34 41       	pop	r4		
    8ed4:	30 41       	ret			

00008ed6 <port2_irq_handler>:
    8ed6:	0f 12       	push	r15		
    8ed8:	0e 12       	push	r14		
    8eda:	0d 12       	push	r13		
    8edc:	0c 12       	push	r12		
    8ede:	04 12       	push	r4		
    8ee0:	04 41       	mov	r1,	r4	
    8ee2:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8ee6:	21 83       	decd	r1		
    8ee8:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    8eec:	c4 43 f5 ff 	mov.b	#0,	-11(r4)	;r3 As==00, 0xfff5(r4)
    8ef0:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8ef4:	4f 4f       	mov.b	r15,	r15	
    8ef6:	5e 42 2d 00 	mov.b	&0x002d,r14	
    8efa:	4e 4e       	mov.b	r14,	r14	
    8efc:	3e f0 40 00 	and	#64,	r14	;#0x0040
    8f00:	0f fe       	and	r14,	r15	
    8f02:	0f 93       	tst	r15		
    8f04:	0a 24       	jz	$+22     	;abs 0x8f1a
    8f06:	d4 d3 f4 ff 	bis.b	#1,	-12(r4)	;r3 As==01, 0xfff4(r4)
    8f0a:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    8f0e:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8f12:	7f f0 40 00 	and.b	#64,	r15	;#0x0040
    8f16:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8f1a:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8f1e:	4f 4f       	mov.b	r15,	r15	
    8f20:	5e 42 2d 00 	mov.b	&0x002d,r14	
    8f24:	4e 4e       	mov.b	r14,	r14	
    8f26:	3e f0 80 00 	and	#128,	r14	;#0x0080
    8f2a:	0f fe       	and	r14,	r15	
    8f2c:	0f 93       	tst	r15		
    8f2e:	0a 24       	jz	$+22     	;abs 0x8f44
    8f30:	e4 d3 f4 ff 	bis.b	#2,	-12(r4)	;r3 As==10, 0xfff4(r4)
    8f34:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    8f38:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8f3c:	7f f0 80 ff 	and.b	#-128,	r15	;#0xff80
    8f40:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8f44:	c4 93 f4 ff 	tst.b	-12(r4)	;0xfff4(r4)
    8f48:	04 24       	jz	$+10     	;abs 0x8f52
    8f4a:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    8f4e:	b0 12 b4 8e 	call	#0x8eb4	
    8f52:	c4 93 f5 ff 	tst.b	-11(r4)	;0xfff5(r4)
    8f56:	03 24       	jz	$+8      	;abs 0x8f5e
    8f58:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    8f5c:	00 00 
    8f5e:	c2 43 2b 00 	mov.b	#0,	&0x002b	;r3 As==00
    8f62:	21 53       	incd	r1		
    8f64:	34 41       	pop	r4		
    8f66:	3c 41       	pop	r12		
    8f68:	3d 41       	pop	r13		
    8f6a:	3e 41       	pop	r14		
    8f6c:	3f 41       	pop	r15		
    8f6e:	00 13       	reti			

00008f70 <get_mclk_freq_mhz>:
    8f70:	04 12       	push	r4		
    8f72:	04 41       	mov	r1,	r4	
    8f74:	24 53       	incd	r4		
    8f76:	1f 42 04 02 	mov	&0x0204,r15	
    8f7a:	34 41       	pop	r4		
    8f7c:	30 41       	ret			

00008f7e <set_mcu_speed>:
    8f7e:	04 12       	push	r4		
    8f80:	04 41       	mov	r1,	r4	
    8f82:	24 53       	incd	r4		
    8f84:	21 83       	decd	r1		
    8f86:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8f8a:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    8f8e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8f92:	3f 92       	cmp	#8,	r15	;r2 As==11
    8f94:	16 24       	jz	$+46     	;abs 0x8fc2
    8f96:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    8f9a:	03 34       	jge	$+8      	;abs 0x8fa2
    8f9c:	1f 93       	cmp	#1,	r15	;r3 As==01
    8f9e:	08 24       	jz	$+18     	;abs 0x8fb0
    8fa0:	2b 3c       	jmp	$+88     	;abs 0x8ff8
    8fa2:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8fa6:	16 24       	jz	$+46     	;abs 0x8fd4
    8fa8:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    8fac:	1c 24       	jz	$+58     	;abs 0x8fe6
    8fae:	24 3c       	jmp	$+74     	;abs 0x8ff8
    8fb0:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    8fb4:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8fb8:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    8fbc:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8fc0:	1b 3c       	jmp	$+56     	;abs 0x8ff8
    8fc2:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    8fc6:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8fca:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    8fce:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8fd2:	12 3c       	jmp	$+38     	;abs 0x8ff8
    8fd4:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    8fd8:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8fdc:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    8fe0:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8fe4:	09 3c       	jmp	$+20     	;abs 0x8ff8
    8fe6:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    8fea:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8fee:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    8ff2:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8ff6:	03 43       	nop			
    8ff8:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    8ffc:	2f 93       	cmp	#2,	r15	;r3 As==10
    8ffe:	0e 24       	jz	$+30     	;abs 0x901c
    9000:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    9004:	03 34       	jge	$+8      	;abs 0x900c
    9006:	1f 93       	cmp	#1,	r15	;r3 As==01
    9008:	06 24       	jz	$+14     	;abs 0x9016
    900a:	12 3c       	jmp	$+38     	;abs 0x9030
    900c:	2f 92       	cmp	#4,	r15	;r2 As==10
    900e:	09 24       	jz	$+20     	;abs 0x9022
    9010:	3f 92       	cmp	#8,	r15	;r2 As==11
    9012:	0a 24       	jz	$+22     	;abs 0x9028
    9014:	0d 3c       	jmp	$+28     	;abs 0x9030
    9016:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    901a:	0a 3c       	jmp	$+22     	;abs 0x9030
    901c:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    9020:	07 3c       	jmp	$+16     	;abs 0x9030
    9022:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    9026:	04 3c       	jmp	$+10     	;abs 0x9030
    9028:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    902c:	58 00 
    902e:	03 43       	nop			
    9030:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    9034:	82 4f 04 02 	mov	r15,	&0x0204	
    9038:	21 53       	incd	r1		
    903a:	34 41       	pop	r4		
    903c:	30 41       	ret			

0000903e <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    903e:	04 12       	push	r4		
    9040:	04 41       	mov	r1,	r4	
    9042:	24 53       	incd	r4		
    9044:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9046:	5f 43       	mov.b	#1,	r15	;r3 As==01
    9048:	b0 12 7e 8f 	call	#0x8f7e	
    904c:	34 41       	pop	r4		
    904e:	30 41       	ret			

00009050 <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    9050:	04 12       	push	r4		
    9052:	04 41       	mov	r1,	r4	
    9054:	24 53       	incd	r4		
    9056:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9058:	7f 42       	mov.b	#8,	r15	;r2 As==11
    905a:	b0 12 7e 8f 	call	#0x8f7e	
    905e:	34 41       	pop	r4		
    9060:	30 41       	ret			

00009062 <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    9062:	04 12       	push	r4		
    9064:	04 41       	mov	r1,	r4	
    9066:	24 53       	incd	r4		
    9068:	6e 43       	mov.b	#2,	r14	;r3 As==10
    906a:	7f 42       	mov.b	#8,	r15	;r2 As==11
    906c:	b0 12 7e 8f 	call	#0x8f7e	
    9070:	34 41       	pop	r4		
    9072:	30 41       	ret			

00009074 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    9074:	04 12       	push	r4		
    9076:	04 41       	mov	r1,	r4	
    9078:	24 53       	incd	r4		
    907a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    907c:	7f 42       	mov.b	#8,	r15	;r2 As==11
    907e:	b0 12 7e 8f 	call	#0x8f7e	
    9082:	34 41       	pop	r4		
    9084:	30 41       	ret			

00009086 <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    9086:	04 12       	push	r4		
    9088:	04 41       	mov	r1,	r4	
    908a:	24 53       	incd	r4		
    908c:	7e 42       	mov.b	#8,	r14	;r2 As==11
    908e:	7f 42       	mov.b	#8,	r15	;r2 As==11
    9090:	b0 12 7e 8f 	call	#0x8f7e	
    9094:	34 41       	pop	r4		
    9096:	30 41       	ret			

00009098 <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    9098:	04 12       	push	r4		
    909a:	04 41       	mov	r1,	r4	
    909c:	24 53       	incd	r4		
    909e:	5e 43       	mov.b	#1,	r14	;r3 As==01
    90a0:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    90a4:	b0 12 7e 8f 	call	#0x8f7e	
    90a8:	34 41       	pop	r4		
    90aa:	30 41       	ret			

000090ac <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    90ac:	04 12       	push	r4		
    90ae:	04 41       	mov	r1,	r4	
    90b0:	24 53       	incd	r4		
    90b2:	6e 43       	mov.b	#2,	r14	;r3 As==10
    90b4:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    90b8:	b0 12 7e 8f 	call	#0x8f7e	
    90bc:	34 41       	pop	r4		
    90be:	30 41       	ret			

000090c0 <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    90c0:	04 12       	push	r4		
    90c2:	04 41       	mov	r1,	r4	
    90c4:	24 53       	incd	r4		
    90c6:	6e 42       	mov.b	#4,	r14	;r2 As==10
    90c8:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    90cc:	b0 12 7e 8f 	call	#0x8f7e	
    90d0:	34 41       	pop	r4		
    90d2:	30 41       	ret			

000090d4 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    90d4:	04 12       	push	r4		
    90d6:	04 41       	mov	r1,	r4	
    90d8:	24 53       	incd	r4		
    90da:	7e 42       	mov.b	#8,	r14	;r2 As==11
    90dc:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    90e0:	b0 12 7e 8f 	call	#0x8f7e	
    90e4:	34 41       	pop	r4		
    90e6:	30 41       	ret			

000090e8 <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    90e8:	04 12       	push	r4		
    90ea:	04 41       	mov	r1,	r4	
    90ec:	24 53       	incd	r4		
    90ee:	5e 43       	mov.b	#1,	r14	;r3 As==01
    90f0:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    90f4:	b0 12 7e 8f 	call	#0x8f7e	
    90f8:	34 41       	pop	r4		
    90fa:	30 41       	ret			

000090fc <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    90fc:	04 12       	push	r4		
    90fe:	04 41       	mov	r1,	r4	
    9100:	24 53       	incd	r4		
    9102:	6e 43       	mov.b	#2,	r14	;r3 As==10
    9104:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    9108:	b0 12 7e 8f 	call	#0x8f7e	
    910c:	34 41       	pop	r4		
    910e:	30 41       	ret			

00009110 <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    9110:	04 12       	push	r4		
    9112:	04 41       	mov	r1,	r4	
    9114:	24 53       	incd	r4		
    9116:	6e 42       	mov.b	#4,	r14	;r2 As==10
    9118:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    911c:	b0 12 7e 8f 	call	#0x8f7e	
    9120:	34 41       	pop	r4		
    9122:	30 41       	ret			

00009124 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    9124:	04 12       	push	r4		
    9126:	04 41       	mov	r1,	r4	
    9128:	24 53       	incd	r4		
    912a:	7e 42       	mov.b	#8,	r14	;r2 As==11
    912c:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    9130:	b0 12 7e 8f 	call	#0x8f7e	
    9134:	34 41       	pop	r4		
    9136:	30 41       	ret			

00009138 <loop_4_cycles>:
    9138:	04 12       	push	r4		
    913a:	04 41       	mov	r1,	r4	
    913c:	24 53       	incd	r4		
    913e:	3e 53       	add	#-1,	r14	;r3 As==11
    9140:	3f 63       	addc	#-1,	r15	;r3 As==11
    9142:	fd 2f       	jc	$-4      	;abs 0x913e
    9144:	34 41       	pop	r4		
    9146:	30 41       	ret			

00009148 <delay_usec>:
    9148:	04 12       	push	r4		
    914a:	04 41       	mov	r1,	r4	
    914c:	24 53       	incd	r4		
    914e:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    9152:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9156:	1f 42 04 02 	mov	&0x0204,r15	
    915a:	3f 92       	cmp	#8,	r15	;r2 As==11
    915c:	18 24       	jz	$+50     	;abs 0x918e
    915e:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    9162:	03 2c       	jc	$+8      	;abs 0x916a
    9164:	1f 93       	cmp	#1,	r15	;r3 As==01
    9166:	08 24       	jz	$+18     	;abs 0x9178
    9168:	2d 3c       	jmp	$+92     	;abs 0x91c4
    916a:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    916e:	17 24       	jz	$+48     	;abs 0x919e
    9170:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    9174:	1e 24       	jz	$+62     	;abs 0x91b2
    9176:	26 3c       	jmp	$+78     	;abs 0x91c4
    9178:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    917c:	12 c3       	clrc			
    917e:	0f 10       	rrc	r15		
    9180:	12 c3       	clrc			
    9182:	0f 10       	rrc	r15		
    9184:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9188:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    918c:	26 3c       	jmp	$+78     	;abs 0x91da
    918e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9192:	0f 5f       	rla	r15		
    9194:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9198:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    919c:	1e 3c       	jmp	$+62     	;abs 0x91da
    919e:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    91a2:	0f 4e       	mov	r14,	r15	
    91a4:	0f 5f       	rla	r15		
    91a6:	0f 5e       	add	r14,	r15	
    91a8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    91ac:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    91b0:	14 3c       	jmp	$+42     	;abs 0x91da
    91b2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    91b6:	0f 5f       	rla	r15		
    91b8:	0f 5f       	rla	r15		
    91ba:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    91be:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    91c2:	0b 3c       	jmp	$+24     	;abs 0x91da
    91c4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    91c8:	12 c3       	clrc			
    91ca:	0f 10       	rrc	r15		
    91cc:	12 c3       	clrc			
    91ce:	0f 10       	rrc	r15		
    91d0:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    91d4:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    91d8:	03 43       	nop			
    91da:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    91de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    91e2:	b0 12 38 91 	call	#0x9138	
    91e6:	31 50 06 00 	add	#6,	r1	;#0x0006
    91ea:	34 41       	pop	r4		
    91ec:	30 41       	ret			

000091ee <delay_ms>:
    91ee:	04 12       	push	r4		
    91f0:	04 41       	mov	r1,	r4	
    91f2:	24 53       	incd	r4		
    91f4:	31 82       	sub	#8,	r1	;r2 As==11
    91f6:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    91fa:	1f 42 04 02 	mov	&0x0204,r15	
    91fe:	3f 92       	cmp	#8,	r15	;r2 As==11
    9200:	13 24       	jz	$+40     	;abs 0x9228
    9202:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    9206:	03 2c       	jc	$+8      	;abs 0x920e
    9208:	1f 93       	cmp	#1,	r15	;r3 As==01
    920a:	08 24       	jz	$+18     	;abs 0x921c
    920c:	1f 3c       	jmp	$+64     	;abs 0x924c
    920e:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    9212:	10 24       	jz	$+34     	;abs 0x9234
    9214:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    9218:	13 24       	jz	$+40     	;abs 0x9240
    921a:	18 3c       	jmp	$+50     	;abs 0x924c
    921c:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    9220:	f8 ff 
    9222:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9226:	18 3c       	jmp	$+50     	;abs 0x9258
    9228:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    922c:	f8 ff 
    922e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9232:	12 3c       	jmp	$+38     	;abs 0x9258
    9234:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    9238:	f8 ff 
    923a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    923e:	0c 3c       	jmp	$+26     	;abs 0x9258
    9240:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    9244:	f8 ff 
    9246:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    924a:	06 3c       	jmp	$+14     	;abs 0x9258
    924c:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    9250:	f8 ff 
    9252:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9256:	03 43       	nop			
    9258:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    925c:	08 3c       	jmp	$+18     	;abs 0x926e
    925e:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    9262:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    9266:	b0 12 38 91 	call	#0x9138	
    926a:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    926e:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    9272:	f6 ff 
    9274:	f4 2b       	jnc	$-22     	;abs 0x925e
    9276:	31 52       	add	#8,	r1	;r2 As==11
    9278:	34 41       	pop	r4		
    927a:	30 41       	ret			

0000927c <led_green_off>:
    927c:	04 12       	push	r4		
    927e:	04 41       	mov	r1,	r4	
    9280:	24 53       	incd	r4		
    9282:	5f 42 21 00 	mov.b	&0x0021,r15	
    9286:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    928a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    928e:	34 41       	pop	r4		
    9290:	30 41       	ret			

00009292 <led_green_on>:
    9292:	04 12       	push	r4		
    9294:	04 41       	mov	r1,	r4	
    9296:	24 53       	incd	r4		
    9298:	5f 42 21 00 	mov.b	&0x0021,r15	
    929c:	6f d3       	bis.b	#2,	r15	;r3 As==10
    929e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    92a2:	34 41       	pop	r4		
    92a4:	30 41       	ret			

000092a6 <led_green_switch>:
    92a6:	04 12       	push	r4		
    92a8:	04 41       	mov	r1,	r4	
    92aa:	24 53       	incd	r4		
    92ac:	5f 42 21 00 	mov.b	&0x0021,r15	
    92b0:	6f e3       	xor.b	#2,	r15	;r3 As==10
    92b2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    92b6:	34 41       	pop	r4		
    92b8:	30 41       	ret			

000092ba <led_red_off>:
    92ba:	04 12       	push	r4		
    92bc:	04 41       	mov	r1,	r4	
    92be:	24 53       	incd	r4		
    92c0:	5f 42 21 00 	mov.b	&0x0021,r15	
    92c4:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    92c8:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    92cc:	34 41       	pop	r4		
    92ce:	30 41       	ret			

000092d0 <led_red_on>:
    92d0:	04 12       	push	r4		
    92d2:	04 41       	mov	r1,	r4	
    92d4:	24 53       	incd	r4		
    92d6:	5f 42 21 00 	mov.b	&0x0021,r15	
    92da:	5f d3       	bis.b	#1,	r15	;r3 As==01
    92dc:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    92e0:	34 41       	pop	r4		
    92e2:	30 41       	ret			

000092e4 <led_red_switch>:
    92e4:	04 12       	push	r4		
    92e6:	04 41       	mov	r1,	r4	
    92e8:	24 53       	incd	r4		
    92ea:	5f 42 21 00 	mov.b	&0x0021,r15	
    92ee:	5f e3       	xor.b	#1,	r15	;r3 As==01
    92f0:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    92f4:	34 41       	pop	r4		
    92f6:	30 41       	ret			

000092f8 <leds_off>:
    92f8:	04 12       	push	r4		
    92fa:	04 41       	mov	r1,	r4	
    92fc:	24 53       	incd	r4		
    92fe:	5f 42 21 00 	mov.b	&0x0021,r15	
    9302:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    9306:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    930a:	34 41       	pop	r4		
    930c:	30 41       	ret			

0000930e <leds_on>:
    930e:	04 12       	push	r4		
    9310:	04 41       	mov	r1,	r4	
    9312:	24 53       	incd	r4		
    9314:	5f 42 21 00 	mov.b	&0x0021,r15	
    9318:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    931c:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9320:	34 41       	pop	r4		
    9322:	30 41       	ret			

00009324 <leds_init>:
    9324:	04 12       	push	r4		
    9326:	04 41       	mov	r1,	r4	
    9328:	24 53       	incd	r4		
    932a:	5f 42 21 00 	mov.b	&0x0021,r15	
    932e:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    9332:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9336:	5f 42 22 00 	mov.b	&0x0022,r15	
    933a:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    933e:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    9342:	5f 42 26 00 	mov.b	&0x0026,r15	
    9346:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    934a:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    934e:	b0 12 f8 92 	call	#0x92f8	
    9352:	34 41       	pop	r4		
    9354:	30 41       	ret			

00009356 <spi_init>:
    9356:	04 12       	push	r4		
    9358:	04 41       	mov	r1,	r4	
    935a:	24 53       	incd	r4		
    935c:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9360:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9362:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9366:	5f 42 1a 00 	mov.b	&0x001a,r15	
    936a:	7f d2       	bis.b	#8,	r15	;r2 As==11
    936c:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9370:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9374:	6f d3       	bis.b	#2,	r15	;r3 As==10
    9376:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    937a:	5f 42 19 00 	mov.b	&0x0019,r15	
    937e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9380:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9384:	d2 43 69 00 	mov.b	#1,	&0x0069	;r3 As==01
    9388:	f2 40 81 ff 	mov.b	#-127,	&0x0069	;#0xff81
    938c:	69 00 
    938e:	f2 40 a9 ff 	mov.b	#-87,	&0x0068	;#0xffa9
    9392:	68 00 
    9394:	e2 43 6a 00 	mov.b	#2,	&0x006a	;r3 As==10
    9398:	c2 43 6b 00 	mov.b	#0,	&0x006b	;r3 As==00
    939c:	5f 42 1b 00 	mov.b	&0x001b,r15	
    93a0:	7f d0 0e 00 	bis.b	#14,	r15	;#0x000e
    93a4:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    93a8:	5f 42 69 00 	mov.b	&0x0069,r15	
    93ac:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    93b0:	c2 4f 69 00 	mov.b	r15,	&0x0069	
    93b4:	34 41       	pop	r4		
    93b6:	30 41       	ret			

000093b8 <spi_clear_rx_IFG>:
    93b8:	04 12       	push	r4		
    93ba:	04 41       	mov	r1,	r4	
    93bc:	24 53       	incd	r4		
    93be:	e2 c2 03 00 	bic.b	#4,	&0x0003	;r2 As==10
    93c2:	34 41       	pop	r4		
    93c4:	30 41       	ret			

000093c6 <spi_tx_rx>:
    93c6:	04 12       	push	r4		
    93c8:	04 41       	mov	r1,	r4	
    93ca:	24 53       	incd	r4		
    93cc:	21 82       	sub	#4,	r1	;r2 As==10
    93ce:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    93d2:	b0 12 b8 93 	call	#0x93b8	
    93d6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    93da:	4f 4f       	mov.b	r15,	r15	
    93dc:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    93e0:	5f 42 03 00 	mov.b	&0x0003,r15	
    93e4:	4f 4f       	mov.b	r15,	r15	
    93e6:	2f f2       	and	#4,	r15	;r2 As==10
    93e8:	0f 93       	tst	r15		
    93ea:	fa 27       	jz	$-10     	;abs 0x93e0
    93ec:	5f 42 6e 00 	mov.b	&0x006e,r15	
    93f0:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    93f4:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    93f8:	8f 11       	sxt	r15		
    93fa:	21 52       	add	#4,	r1	;r2 As==10
    93fc:	34 41       	pop	r4		
    93fe:	30 41       	ret			

00009400 <spi_check_miso_high>:
    9400:	04 12       	push	r4		
    9402:	04 41       	mov	r1,	r4	
    9404:	24 53       	incd	r4		
    9406:	5f 42 18 00 	mov.b	&0x0018,r15	
    940a:	4f 4f       	mov.b	r15,	r15	
    940c:	2f f2       	and	#4,	r15	;r2 As==10
    940e:	34 41       	pop	r4		
    9410:	30 41       	ret			

00009412 <spi_tx_burst>:
    9412:	04 12       	push	r4		
    9414:	04 41       	mov	r1,	r4	
    9416:	24 53       	incd	r4		
    9418:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    941c:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    9420:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    9424:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    9428:	11 3c       	jmp	$+36     	;abs 0x944c
    942a:	b0 12 b8 93 	call	#0x93b8	
    942e:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    9432:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    9436:	6f 4f       	mov.b	@r15,	r15	
    9438:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    943c:	5f 42 03 00 	mov.b	&0x0003,r15	
    9440:	4f 4f       	mov.b	r15,	r15	
    9442:	2f f2       	and	#4,	r15	;r2 As==10
    9444:	0f 93       	tst	r15		
    9446:	fa 27       	jz	$-10     	;abs 0x943c
    9448:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    944c:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    9450:	f8 ff 
    9452:	eb 3b       	jl	$-40     	;abs 0x942a
    9454:	31 50 06 00 	add	#6,	r1	;#0x0006
    9458:	34 41       	pop	r4		
    945a:	30 41       	ret			

0000945c <spi_rx_burst>:
    945c:	04 12       	push	r4		
    945e:	04 41       	mov	r1,	r4	
    9460:	24 53       	incd	r4		
    9462:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    9466:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    946a:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    946e:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    9472:	13 3c       	jmp	$+40     	;abs 0x949a
    9474:	f2 40 55 00 	mov.b	#85,	&0x006f	;#0x0055
    9478:	6f 00 
    947a:	5f 42 03 00 	mov.b	&0x0003,r15	
    947e:	4f 4f       	mov.b	r15,	r15	
    9480:	2f f2       	and	#4,	r15	;r2 As==10
    9482:	0f 93       	tst	r15		
    9484:	fa 27       	jz	$-10     	;abs 0x947a
    9486:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    948a:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    948e:	5e 42 6e 00 	mov.b	&0x006e,r14	
    9492:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    9496:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    949a:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    949e:	f8 ff 
    94a0:	e9 3b       	jl	$-44     	;abs 0x9474
    94a2:	31 50 06 00 	add	#6,	r1	;#0x0006
    94a6:	34 41       	pop	r4		
    94a8:	30 41       	ret			

000094aa <spi_select_radio>:
    94aa:	04 12       	push	r4		
    94ac:	04 41       	mov	r1,	r4	
    94ae:	24 53       	incd	r4		
    94b0:	5f 42 19 00 	mov.b	&0x0019,r15	
    94b4:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    94b8:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    94bc:	34 41       	pop	r4		
    94be:	30 41       	ret			

000094c0 <spi_deselect_radio>:
    94c0:	04 12       	push	r4		
    94c2:	04 41       	mov	r1,	r4	
    94c4:	24 53       	incd	r4		
    94c6:	5f 42 19 00 	mov.b	&0x0019,r15	
    94ca:	5f d3       	bis.b	#1,	r15	;r3 As==01
    94cc:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    94d0:	34 41       	pop	r4		
    94d2:	30 41       	ret			

000094d4 <uart_init>:
    94d4:	04 12       	push	r4		
    94d6:	04 41       	mov	r1,	r4	
    94d8:	24 53       	incd	r4		
    94da:	21 83       	decd	r1		
    94dc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    94e0:	5f 42 1b 00 	mov.b	&0x001b,r15	
    94e4:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    94e8:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    94ec:	5f 42 1a 00 	mov.b	&0x001a,r15	
    94f0:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    94f4:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    94f8:	5f 42 1a 00 	mov.b	&0x001a,r15	
    94fc:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    9500:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9504:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9508:	1f 93       	cmp	#1,	r15	;r3 As==01
    950a:	03 24       	jz	$+8      	;abs 0x9512
    950c:	3f 92       	cmp	#8,	r15	;r2 As==11
    950e:	12 24       	jz	$+38     	;abs 0x9534
    9510:	23 3c       	jmp	$+72     	;abs 0x9558
    9512:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    9516:	61 00 
    9518:	f2 40 68 00 	mov.b	#104,	&0x0062	;#0x0068
    951c:	62 00 
    951e:	c2 43 63 00 	mov.b	#0,	&0x0063	;r3 As==00
    9522:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    9526:	5f 42 61 00 	mov.b	&0x0061,r15	
    952a:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    952e:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    9532:	13 3c       	jmp	$+40     	;abs 0x955a
    9534:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    9538:	61 00 
    953a:	f2 40 41 00 	mov.b	#65,	&0x0062	;#0x0041
    953e:	62 00 
    9540:	f2 40 03 00 	mov.b	#3,	&0x0063	;#0x0003
    9544:	63 00 
    9546:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    954a:	5f 42 61 00 	mov.b	&0x0061,r15	
    954e:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    9552:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    9556:	01 3c       	jmp	$+4      	;abs 0x955a
    9558:	03 43       	nop			
    955a:	82 43 06 02 	mov	#0,	&0x0206	;r3 As==00
    955e:	21 53       	incd	r1		
    9560:	34 41       	pop	r4		
    9562:	30 41       	ret			

00009564 <uart_stop>:
    9564:	04 12       	push	r4		
    9566:	04 41       	mov	r1,	r4	
    9568:	24 53       	incd	r4		
    956a:	34 41       	pop	r4		
    956c:	30 41       	ret			

0000956e <putchar>:
    956e:	04 12       	push	r4		
    9570:	04 41       	mov	r1,	r4	
    9572:	24 53       	incd	r4		
    9574:	21 83       	decd	r1		
    9576:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    957a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    957e:	4f 4f       	mov.b	r15,	r15	
    9580:	c2 4f 67 00 	mov.b	r15,	&0x0067	
    9584:	03 43       	nop			
    9586:	5f 42 03 00 	mov.b	&0x0003,r15	
    958a:	4f 4f       	mov.b	r15,	r15	
    958c:	2f f3       	and	#2,	r15	;r3 As==10
    958e:	0f 93       	tst	r15		
    9590:	fa 27       	jz	$-10     	;abs 0x9586
    9592:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9596:	4f 4f       	mov.b	r15,	r15	
    9598:	4f 4f       	mov.b	r15,	r15	
    959a:	21 53       	incd	r1		
    959c:	34 41       	pop	r4		
    959e:	30 41       	ret			

000095a0 <uart_getchar>:
    95a0:	04 12       	push	r4		
    95a2:	04 41       	mov	r1,	r4	
    95a4:	24 53       	incd	r4		
    95a6:	21 83       	decd	r1		
    95a8:	5f 42 66 00 	mov.b	&0x0066,r15	
    95ac:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    95b0:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    95b4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    95b8:	21 53       	incd	r1		
    95ba:	34 41       	pop	r4		
    95bc:	30 41       	ret			

000095be <uart_eint>:
    95be:	04 12       	push	r4		
    95c0:	04 41       	mov	r1,	r4	
    95c2:	24 53       	incd	r4		
    95c4:	5f 42 01 00 	mov.b	&0x0001,r15	
    95c8:	5f d3       	bis.b	#1,	r15	;r3 As==01
    95ca:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    95ce:	34 41       	pop	r4		
    95d0:	30 41       	ret			

000095d2 <uart_dint>:
    95d2:	04 12       	push	r4		
    95d4:	04 41       	mov	r1,	r4	
    95d6:	24 53       	incd	r4		
    95d8:	5f 42 01 00 	mov.b	&0x0001,r15	
    95dc:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    95e0:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    95e4:	34 41       	pop	r4		
    95e6:	30 41       	ret			

000095e8 <uart_register_cb>:
    95e8:	04 12       	push	r4		
    95ea:	04 41       	mov	r1,	r4	
    95ec:	24 53       	incd	r4		
    95ee:	21 83       	decd	r1		
    95f0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    95f4:	92 44 fc ff 	mov	-4(r4),	&0x0206	;0xfffc(r4)
    95f8:	06 02 
    95fa:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    95fe:	03 20       	jnz	$+8      	;abs 0x9606
    9600:	b0 12 d2 95 	call	#0x95d2	
    9604:	02 3c       	jmp	$+6      	;abs 0x960a
    9606:	b0 12 be 95 	call	#0x95be	
    960a:	21 53       	incd	r1		
    960c:	34 41       	pop	r4		
    960e:	30 41       	ret			

00009610 <usart0irq>:
    9610:	0f 12       	push	r15		
    9612:	0e 12       	push	r14		
    9614:	0d 12       	push	r13		
    9616:	0c 12       	push	r12		
    9618:	04 12       	push	r4		
    961a:	04 41       	mov	r1,	r4	
    961c:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9620:	21 83       	decd	r1		
    9622:	5f 42 65 00 	mov.b	&0x0065,r15	
    9626:	4f 4f       	mov.b	r15,	r15	
    9628:	2f f2       	and	#4,	r15	;r2 As==10
    962a:	0f 93       	tst	r15		
    962c:	0a 24       	jz	$+22     	;abs 0x9642
    962e:	5f 42 66 00 	mov.b	&0x0066,r15	
    9632:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    9636:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    963a:	5f 53       	inc.b	r15		
    963c:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    9640:	0a 3c       	jmp	$+22     	;abs 0x9656
    9642:	1e 42 06 02 	mov	&0x0206,r14	
    9646:	5f 42 66 00 	mov.b	&0x0066,r15	
    964a:	8e 12       	call	r14		
    964c:	0f 93       	tst	r15		
    964e:	03 24       	jz	$+8      	;abs 0x9656
    9650:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9654:	00 00 
    9656:	21 53       	incd	r1		
    9658:	34 41       	pop	r4		
    965a:	3c 41       	pop	r12		
    965c:	3d 41       	pop	r13		
    965e:	3e 41       	pop	r14		
    9660:	3f 41       	pop	r15		
    9662:	00 13       	reti			

00009664 <watchdog_stop>:
    9664:	04 12       	push	r4		
    9666:	04 41       	mov	r1,	r4	
    9668:	24 53       	incd	r4		
    966a:	1f 42 20 01 	mov	&0x0120,r15	
    966e:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    9672:	82 4f 08 02 	mov	r15,	&0x0208	
    9676:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    967a:	20 01 
    967c:	34 41       	pop	r4		
    967e:	30 41       	ret			

00009680 <watchdog_restore>:
    9680:	04 12       	push	r4		
    9682:	04 41       	mov	r1,	r4	
    9684:	24 53       	incd	r4		
    9686:	1f 42 08 02 	mov	&0x0208,r15	
    968a:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    968e:	82 4f 20 01 	mov	r15,	&0x0120	
    9692:	34 41       	pop	r4		
    9694:	30 41       	ret			

00009696 <strcmp>:
    9696:	03 3c       	jmp	$+8      	;abs 0x969e
    9698:	1f 53       	inc	r15		
    969a:	4d 93       	tst.b	r13		
    969c:	09 24       	jz	$+20     	;abs 0x96b0
    969e:	6d 4f       	mov.b	@r15,	r13	
    96a0:	7c 4e       	mov.b	@r14+,	r12	
    96a2:	4d 9c       	cmp.b	r12,	r13	
    96a4:	f9 27       	jz	$-12     	;abs 0x9698
    96a6:	4f 4d       	mov.b	r13,	r15	
    96a8:	5e 4e ff ff 	mov.b	-1(r14),r14	;0xffff(r14)
    96ac:	0f 8e       	sub	r14,	r15	
    96ae:	30 41       	ret			
    96b0:	0f 43       	clr	r15		
    96b2:	30 41       	ret			

000096b4 <printf>:
    96b4:	0d 41       	mov	r1,	r13	
    96b6:	2d 53       	incd	r13		
    96b8:	3e 4d       	mov	@r13+,	r14	
    96ba:	3f 40 6e 95 	mov	#-27282,r15	;#0x956e
    96be:	b0 12 6a 98 	call	#0x986a	
    96c2:	30 41       	ret			

000096c4 <vprintf>:
    96c4:	0d 4e       	mov	r14,	r13	
    96c6:	0e 4f       	mov	r15,	r14	
    96c8:	3f 40 6e 95 	mov	#-27282,r15	;#0x956e
    96cc:	b0 12 6a 98 	call	#0x986a	
    96d0:	30 41       	ret			

000096d2 <print_field>:
    96d2:	0b 12       	push	r11		
    96d4:	0a 12       	push	r10		
    96d6:	09 12       	push	r9		
    96d8:	08 12       	push	r8		
    96da:	07 12       	push	r7		
    96dc:	06 12       	push	r6		
    96de:	05 12       	push	r5		
    96e0:	04 12       	push	r4		
    96e2:	31 82       	sub	#8,	r1	;r2 As==11
    96e4:	08 4f       	mov	r15,	r8	
    96e6:	81 4e 04 00 	mov	r14,	4(r1)	;0x0004(r1)
    96ea:	09 4d       	mov	r13,	r9	
    96ec:	1f 41 1a 00 	mov	26(r1),	r15	;0x001a(r1)
    96f0:	1d 41 1c 00 	mov	28(r1),	r13	;0x001c(r1)
    96f4:	4c 4d       	mov.b	r13,	r12	
    96f6:	04 4d       	mov	r13,	r4	
    96f8:	84 10       	swpb	r4		
    96fa:	45 44       	mov.b	r4,	r5	
    96fc:	4e 4f       	mov.b	r15,	r14	
    96fe:	7e b0 40 00 	bit.b	#64,	r14	;#0x0040
    9702:	11 24       	jz	$+36     	;abs 0x9726
    9704:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9708:	00 00 
    970a:	0e 4f       	mov	r15,	r14	
    970c:	8e 10       	swpb	r14		
    970e:	5e f3       	and.b	#1,	r14	;r3 As==01
    9710:	03 24       	jz	$+8      	;abs 0x9718
    9712:	7e 40 58 00 	mov.b	#88,	r14	;#0x0058
    9716:	02 3c       	jmp	$+6      	;abs 0x971c
    9718:	7e 40 78 00 	mov.b	#120,	r14	;#0x0078
    971c:	c1 4e 01 00 	mov.b	r14,	1(r1)	;0x0001(r1)
    9720:	0c 41       	mov	r1,	r12	
    9722:	2c 53       	incd	r12		
    9724:	0f 3c       	jmp	$+32     	;abs 0x9744
    9726:	7e f0 20 00 	and.b	#32,	r14	;#0x0020
    972a:	04 24       	jz	$+10     	;abs 0x9734
    972c:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9730:	00 00 
    9732:	04 3c       	jmp	$+10     	;abs 0x973c
    9734:	4c 93       	tst.b	r12		
    9736:	05 24       	jz	$+12     	;abs 0x9742
    9738:	c1 4d 00 00 	mov.b	r13,	0(r1)	;0x0000(r1)
    973c:	0c 41       	mov	r1,	r12	
    973e:	1c 53       	inc	r12		
    9740:	01 3c       	jmp	$+4      	;abs 0x9744
    9742:	0c 41       	mov	r1,	r12	
    9744:	0a 4c       	mov	r12,	r10	
    9746:	8c 10       	swpb	r12		
    9748:	8c 11       	sxt	r12		
    974a:	8c 10       	swpb	r12		
    974c:	8c 11       	sxt	r12		
    974e:	0b 4c       	mov	r12,	r11	
    9750:	06 41       	mov	r1,	r6	
    9752:	0c 41       	mov	r1,	r12	
    9754:	8c 10       	swpb	r12		
    9756:	8c 11       	sxt	r12		
    9758:	8c 10       	swpb	r12		
    975a:	8c 11       	sxt	r12		
    975c:	07 4c       	mov	r12,	r7	
    975e:	0a 86       	sub	r6,	r10	
    9760:	0b 77       	subc	r7,	r11	
    9762:	0e 4f       	mov	r15,	r14	
    9764:	8e 10       	swpb	r14		
    9766:	c1 4e 02 00 	mov.b	r14,	2(r1)	;0x0002(r1)
    976a:	6e f2       	and.b	#4,	r14	;r2 As==10
    976c:	02 24       	jz	$+6      	;abs 0x9772
    976e:	07 45       	mov	r5,	r7	
    9770:	01 3c       	jmp	$+4      	;abs 0x9774
    9772:	37 43       	mov	#-1,	r7	;r3 As==11
    9774:	4f 4f       	mov.b	r15,	r15	
    9776:	7f b0 10 00 	bit.b	#16,	r15	;#0x0010
    977a:	3c 20       	jnz	$+122    	;abs 0x97f4
    977c:	1d 41 04 00 	mov	4(r1),	r13	;0x0004(r1)
    9780:	3d 53       	add	#-1,	r13	;r3 As==11
    9782:	1d 53       	inc	r13		
    9784:	cd 93 00 00 	tst.b	0(r13)		;0x0000(r13)
    9788:	fc 23       	jnz	$-6      	;abs 0x9782
    978a:	1d 81 04 00 	sub	4(r1),	r13	;0x0004(r1)
    978e:	09 9a       	cmp	r10,	r9	
    9790:	02 28       	jnc	$+6      	;abs 0x9796
    9792:	09 8a       	sub	r10,	r9	
    9794:	01 3c       	jmp	$+4      	;abs 0x9798
    9796:	09 43       	clr	r9		
    9798:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    979c:	05 24       	jz	$+12     	;abs 0x97a8
    979e:	09 95       	cmp	r5,	r9	
    97a0:	02 28       	jnc	$+6      	;abs 0x97a6
    97a2:	09 85       	sub	r5,	r9	
    97a4:	01 3c       	jmp	$+4      	;abs 0x97a8
    97a6:	09 43       	clr	r9		
    97a8:	05 4d       	mov	r13,	r5	
    97aa:	07 9d       	cmp	r13,	r7	
    97ac:	01 2c       	jc	$+4      	;abs 0x97b0
    97ae:	05 47       	mov	r7,	r5	
    97b0:	4f 93       	tst.b	r15		
    97b2:	0d 38       	jl	$+28     	;abs 0x97ce
    97b4:	f1 40 20 00 	mov.b	#32,	6(r1)	;#0x0020, 0x0006(r1)
    97b8:	06 00 
    97ba:	06 43       	clr	r6		
    97bc:	0b 43       	clr	r11		
    97be:	0e 3c       	jmp	$+30     	;abs 0x97dc
    97c0:	0f 41       	mov	r1,	r15	
    97c2:	0f 56       	add	r6,	r15	
    97c4:	6f 4f       	mov.b	@r15,	r15	
    97c6:	8f 11       	sxt	r15		
    97c8:	16 53       	inc	r6		
    97ca:	88 12       	call	r8		
    97cc:	01 3c       	jmp	$+4      	;abs 0x97d0
    97ce:	06 43       	clr	r6		
    97d0:	06 9a       	cmp	r10,	r6	
    97d2:	f6 3b       	jl	$-18     	;abs 0x97c0
    97d4:	0b 4a       	mov	r10,	r11	
    97d6:	f1 40 30 00 	mov.b	#48,	6(r1)	;#0x0030, 0x0006(r1)
    97da:	06 00 
    97dc:	05 8b       	sub	r11,	r5	
    97de:	05 3c       	jmp	$+12     	;abs 0x97ea
    97e0:	5f 41 06 00 	mov.b	6(r1),	r15	;0x0006(r1)
    97e4:	8f 11       	sxt	r15		
    97e6:	88 12       	call	r8		
    97e8:	1b 53       	inc	r11		
    97ea:	0f 45       	mov	r5,	r15	
    97ec:	0f 5b       	add	r11,	r15	
    97ee:	0f 99       	cmp	r9,	r15	
    97f0:	f7 2b       	jnc	$-16     	;abs 0x97e0
    97f2:	0a 3c       	jmp	$+22     	;abs 0x9808
    97f4:	06 43       	clr	r6		
    97f6:	0b 43       	clr	r11		
    97f8:	07 3c       	jmp	$+16     	;abs 0x9808
    97fa:	1b 53       	inc	r11		
    97fc:	0f 41       	mov	r1,	r15	
    97fe:	0f 56       	add	r6,	r15	
    9800:	6f 4f       	mov.b	@r15,	r15	
    9802:	8f 11       	sxt	r15		
    9804:	16 53       	inc	r6		
    9806:	88 12       	call	r8		
    9808:	06 9a       	cmp	r10,	r6	
    980a:	f7 3b       	jl	$-16     	;abs 0x97fa
    980c:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    9810:	02 24       	jz	$+6      	;abs 0x9816
    9812:	4a 44       	mov.b	r4,	r10	
    9814:	08 3c       	jmp	$+18     	;abs 0x9826
    9816:	1a 41 04 00 	mov	4(r1),	r10	;0x0004(r1)
    981a:	0a 8b       	sub	r11,	r10	
    981c:	0d 3c       	jmp	$+28     	;abs 0x9838
    981e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    9822:	88 12       	call	r8		
    9824:	7a 53       	add.b	#-1,	r10	;r3 As==11
    9826:	4a 93       	tst.b	r10		
    9828:	fa 23       	jnz	$-10     	;abs 0x981e
    982a:	44 44       	mov.b	r4,	r4	
    982c:	0b 54       	add	r4,	r11	
    982e:	f3 3f       	jmp	$-24     	;abs 0x9816
    9830:	37 53       	add	#-1,	r7	;r3 As==11
    9832:	8f 11       	sxt	r15		
    9834:	88 12       	call	r8		
    9836:	1b 53       	inc	r11		
    9838:	0f 4a       	mov	r10,	r15	
    983a:	0f 5b       	add	r11,	r15	
    983c:	6f 4f       	mov.b	@r15,	r15	
    983e:	4f 93       	tst.b	r15		
    9840:	07 24       	jz	$+16     	;abs 0x9850
    9842:	07 93       	tst	r7		
    9844:	f5 23       	jnz	$-20     	;abs 0x9830
    9846:	04 3c       	jmp	$+10     	;abs 0x9850
    9848:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    984c:	88 12       	call	r8		
    984e:	1b 53       	inc	r11		
    9850:	0b 99       	cmp	r9,	r11	
    9852:	fa 2b       	jnc	$-10     	;abs 0x9848
    9854:	0f 4b       	mov	r11,	r15	
    9856:	31 52       	add	#8,	r1	;r2 As==11
    9858:	34 41       	pop	r4		
    985a:	35 41       	pop	r5		
    985c:	36 41       	pop	r6		
    985e:	37 41       	pop	r7		
    9860:	38 41       	pop	r8		
    9862:	39 41       	pop	r9		
    9864:	3a 41       	pop	r10		
    9866:	3b 41       	pop	r11		
    9868:	30 41       	ret			

0000986a <vuprintf>:
    986a:	0b 12       	push	r11		
    986c:	0a 12       	push	r10		
    986e:	09 12       	push	r9		
    9870:	08 12       	push	r8		
    9872:	07 12       	push	r7		
    9874:	06 12       	push	r6		
    9876:	05 12       	push	r5		
    9878:	04 12       	push	r4		
    987a:	31 50 b6 ff 	add	#-74,	r1	;#0xffb6
    987e:	81 4f 3a 00 	mov	r15,	58(r1)	;0x003a(r1)
    9882:	06 4e       	mov	r14,	r6	
    9884:	05 4d       	mov	r13,	r5	
    9886:	81 4e 3e 00 	mov	r14,	62(r1)	;0x003e(r1)
    988a:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    988e:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9892:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    9896:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    989a:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    989e:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    98a2:	07 43       	clr	r7		
    98a4:	81 43 2c 00 	mov	#0,	44(r1)	;r3 As==00, 0x002c(r1)
    98a8:	0e 41       	mov	r1,	r14	
    98aa:	3e 50 1c 00 	add	#28,	r14	;#0x001c
    98ae:	81 4e 1c 00 	mov	r14,	28(r1)	;0x001c(r1)
    98b2:	30 40 e4 9e 	br	#0x9ee4	
    98b6:	0f 46       	mov	r6,	r15	
    98b8:	1f 53       	inc	r15		
    98ba:	81 4f 40 00 	mov	r15,	64(r1)	;0x0040(r1)
    98be:	07 93       	tst	r7		
    98c0:	1e 20       	jnz	$+62     	;abs 0x98fe
    98c2:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    98c6:	13 20       	jnz	$+40     	;abs 0x98ee
    98c8:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00, 0x0000(r1)
    98cc:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    98d0:	81 46 3e 00 	mov	r6,	62(r1)	;0x003e(r1)
    98d4:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    98d8:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    98dc:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    98e0:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    98e4:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    98e8:	30 40 da 9e 	br	#0x9eda	
    98ec:	05 47       	mov	r7,	r5	
    98ee:	8e 11       	sxt	r14		
    98f0:	0f 4e       	mov	r14,	r15	
    98f2:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    98f6:	91 53 2c 00 	inc	44(r1)		;0x002c(r1)
    98fa:	30 40 c0 9e 	br	#0x9ec0	
    98fe:	7e 90 63 00 	cmp.b	#99,	r14	;#0x0063
    9902:	c5 24       	jz	$+396    	;abs 0x9a8e
    9904:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9908:	27 34       	jge	$+80     	;abs 0x9958
    990a:	7e 90 30 00 	cmp.b	#48,	r14	;#0x0030
    990e:	94 24       	jz	$+298    	;abs 0x9a38
    9910:	7e 90 31 00 	cmp.b	#49,	r14	;#0x0031
    9914:	1a 34       	jge	$+54     	;abs 0x994a
    9916:	7e 90 2a 00 	cmp.b	#42,	r14	;#0x002a
    991a:	77 24       	jz	$+240    	;abs 0x9a0a
    991c:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9920:	0a 34       	jge	$+22     	;abs 0x9936
    9922:	7e 90 23 00 	cmp.b	#35,	r14	;#0x0023
    9926:	42 24       	jz	$+134    	;abs 0x99ac
    9928:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    992c:	e0 27       	jz	$-62     	;abs 0x98ee
    992e:	7e 90 20 00 	cmp.b	#32,	r14	;#0x0020
    9932:	32 20       	jnz	$+102    	;abs 0x9998
    9934:	56 3c       	jmp	$+174    	;abs 0x99e2
    9936:	7e 90 2d 00 	cmp.b	#45,	r14	;#0x002d
    993a:	49 24       	jz	$+148    	;abs 0x99ce
    993c:	7e 90 2e 00 	cmp.b	#46,	r14	;#0x002e
    9940:	5b 24       	jz	$+184    	;abs 0x99f8
    9942:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9946:	28 20       	jnz	$+82     	;abs 0x9998
    9948:	47 3c       	jmp	$+144    	;abs 0x99d8
    994a:	7e 90 3a 00 	cmp.b	#58,	r14	;#0x003a
    994e:	8c 38       	jl	$+282    	;abs 0x9a68
    9950:	7e 90 58 00 	cmp.b	#88,	r14	;#0x0058
    9954:	21 20       	jnz	$+68     	;abs 0x9998
    9956:	e9 3c       	jmp	$+468    	;abs 0x9b2a
    9958:	7e 90 6f 00 	cmp.b	#111,	r14	;#0x006f
    995c:	24 24       	jz	$+74     	;abs 0x99a6
    995e:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9962:	0a 34       	jge	$+22     	;abs 0x9978
    9964:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    9968:	e3 24       	jz	$+456    	;abs 0x9b30
    996a:	7e 90 6c 00 	cmp.b	#108,	r14	;#0x006c
    996e:	22 24       	jz	$+70     	;abs 0x99b4
    9970:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9974:	11 20       	jnz	$+36     	;abs 0x9998
    9976:	dc 3c       	jmp	$+442    	;abs 0x9b30
    9978:	7e 90 73 00 	cmp.b	#115,	r14	;#0x0073
    997c:	98 24       	jz	$+306    	;abs 0x9aae
    997e:	7e 90 74 00 	cmp.b	#116,	r14	;#0x0074
    9982:	04 34       	jge	$+10     	;abs 0x998c
    9984:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9988:	07 20       	jnz	$+16     	;abs 0x9998
    998a:	b8 3c       	jmp	$+370    	;abs 0x9afc
    998c:	7e 90 75 00 	cmp.b	#117,	r14	;#0x0075
    9990:	d1 24       	jz	$+420    	;abs 0x9b34
    9992:	7e 90 78 00 	cmp.b	#120,	r14	;#0x0078
    9996:	d2 24       	jz	$+422    	;abs 0x9b3c
    9998:	19 41 3e 00 	mov	62(r1),	r9	;0x003e(r1)
    999c:	18 41 2c 00 	mov	44(r1),	r8	;0x002c(r1)
    99a0:	08 89       	sub	r9,	r8	
    99a2:	30 40 ae 9e 	br	#0x9eae	
    99a6:	b1 42 28 00 	mov	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    99aa:	cb 3c       	jmp	$+408    	;abs 0x9b42
    99ac:	f1 d2 00 00 	bis.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    99b0:	30 40 de 9e 	br	#0x9ede	
    99b4:	69 41       	mov.b	@r1,	r9	
    99b6:	59 f3       	and.b	#1,	r9	;r3 As==01
    99b8:	6e 41       	mov.b	@r1,	r14	
    99ba:	04 24       	jz	$+10     	;abs 0x99c4
    99bc:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    99c0:	6e d3       	bis.b	#2,	r14	;r3 As==10
    99c2:	01 3c       	jmp	$+4      	;abs 0x99c6
    99c4:	5e d3       	bis.b	#1,	r14	;r3 As==01
    99c6:	c1 4e 00 00 	mov.b	r14,	0(r1)	;0x0000(r1)
    99ca:	30 40 de 9e 	br	#0x9ede	
    99ce:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    99d2:	00 00 
    99d4:	30 40 de 9e 	br	#0x9ede	
    99d8:	f1 40 2b 00 	mov.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    99dc:	02 00 
    99de:	30 40 de 9e 	br	#0x9ede	
    99e2:	f1 90 2b 00 	cmp.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    99e6:	02 00 
    99e8:	02 20       	jnz	$+6      	;abs 0x99ee
    99ea:	30 40 de 9e 	br	#0x9ede	
    99ee:	f1 40 20 00 	mov.b	#32,	2(r1)	;#0x0020, 0x0002(r1)
    99f2:	02 00 
    99f4:	30 40 de 9e 	br	#0x9ede	
    99f8:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    99fc:	02 24       	jz	$+6      	;abs 0x9a02
    99fe:	30 40 c4 9e 	br	#0x9ec4	
    9a02:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9a06:	30 40 de 9e 	br	#0x9ede	
    9a0a:	0e 45       	mov	r5,	r14	
    9a0c:	2e 53       	incd	r14		
    9a0e:	2a 45       	mov	@r5,	r10	
    9a10:	0a 93       	tst	r10		
    9a12:	03 38       	jl	$+8      	;abs 0x9a1a
    9a14:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9a18:	0d 3c       	jmp	$+28     	;abs 0x9a34
    9a1a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9a1e:	02 24       	jz	$+6      	;abs 0x9a24
    9a20:	30 40 d4 9e 	br	#0x9ed4	
    9a24:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9a28:	00 00 
    9a2a:	3a e3       	inv	r10		
    9a2c:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9a30:	91 53 26 00 	inc	38(r1)		;0x0026(r1)
    9a34:	05 4e       	mov	r14,	r5	
    9a36:	27 3c       	jmp	$+80     	;abs 0x9a86
    9a38:	81 93 26 00 	tst	38(r1)		;0x0026(r1)
    9a3c:	15 20       	jnz	$+44     	;abs 0x9a68
    9a3e:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9a42:	12 20       	jnz	$+38     	;abs 0x9a68
    9a44:	69 41       	mov.b	@r1,	r9	
    9a46:	79 f0 10 00 	and.b	#16,	r9	;#0x0010
    9a4a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9a4c:	01 24       	jz	$+4      	;abs 0x9a50
    9a4e:	4e 43       	clr.b	r14		
    9a50:	4e 4e       	mov.b	r14,	r14	
    9a52:	0e 11       	rra	r14		
    9a54:	0e 43       	clr	r14		
    9a56:	4e 10       	rrc.b	r14		
    9a58:	6a 41       	mov.b	@r1,	r10	
    9a5a:	7a f0 7f 00 	and.b	#127,	r10	;#0x007f
    9a5e:	4a de       	bis.b	r14,	r10	
    9a60:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    9a64:	30 40 de 9e 	br	#0x9ede	
    9a68:	1a 41 26 00 	mov	38(r1),	r10	;0x0026(r1)
    9a6c:	0a 5a       	rla	r10		
    9a6e:	0c 4a       	mov	r10,	r12	
    9a70:	0c 5c       	rla	r12		
    9a72:	0c 5c       	rla	r12		
    9a74:	0a 5c       	add	r12,	r10	
    9a76:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9a7a:	b1 50 d0 ff 	add	#-48,	38(r1)	;#0xffd0, 0x0026(r1)
    9a7e:	26 00 
    9a80:	8e 11       	sxt	r14		
    9a82:	81 5e 26 00 	add	r14,	38(r1)	;0x0026(r1)
    9a86:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9a8a:	30 40 de 9e 	br	#0x9ede	
    9a8e:	07 45       	mov	r5,	r7	
    9a90:	27 53       	incd	r7		
    9a92:	6e 45       	mov.b	@r5,	r14	
    9a94:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9a98:	03 20       	jnz	$+8      	;abs 0x9aa0
    9a9a:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9a9e:	26 27       	jz	$-434    	;abs 0x98ec
    9aa0:	c1 4e 04 00 	mov.b	r14,	4(r1)	;0x0004(r1)
    9aa4:	c1 43 05 00 	mov.b	#0,	5(r1)	;r3 As==00, 0x0005(r1)
    9aa8:	0e 41       	mov	r1,	r14	
    9aaa:	2e 52       	add	#4,	r14	;r2 As==10
    9aac:	03 3c       	jmp	$+8      	;abs 0x9ab4
    9aae:	07 45       	mov	r5,	r7	
    9ab0:	27 53       	incd	r7		
    9ab2:	2e 45       	mov	@r5,	r14	
    9ab4:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9ab8:	07 24       	jz	$+16     	;abs 0x9ac8
    9aba:	e1 d2 01 00 	bis.b	#4,	1(r1)	;r2 As==10, 0x0001(r1)
    9abe:	1f 41 26 00 	mov	38(r1),	r15	;0x0026(r1)
    9ac2:	c1 4f 03 00 	mov.b	r15,	3(r1)	;0x0003(r1)
    9ac6:	06 3c       	jmp	$+14     	;abs 0x9ad4
    9ac8:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9acc:	03 24       	jz	$+8      	;abs 0x9ad4
    9ace:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9ad2:	30 00 
    9ad4:	0e 93       	tst	r14		
    9ad6:	02 20       	jnz	$+6      	;abs 0x9adc
    9ad8:	3e 40 e0 a1 	mov	#-24096,r14	;#0xa1e0
    9adc:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9ae0:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9ae4:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9ae8:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9aec:	b0 12 d2 96 	call	#0x96d2	
    9af0:	21 52       	add	#4,	r1	;r2 As==10
    9af2:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    9af6:	05 47       	mov	r7,	r5	
    9af8:	30 40 c0 9e 	br	#0x9ec0	
    9afc:	07 45       	mov	r5,	r7	
    9afe:	27 53       	incd	r7		
    9b00:	29 45       	mov	@r5,	r9	
    9b02:	81 49 1e 00 	mov	r9,	30(r1)	;0x001e(r1)
    9b06:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9b08:	09 93       	tst	r9		
    9b0a:	01 20       	jnz	$+4      	;abs 0x9b0e
    9b0c:	4e 43       	clr.b	r14		
    9b0e:	4e 5e       	rla.b	r14		
    9b10:	4e 5e       	rla.b	r14		
    9b12:	4e 5e       	rla.b	r14		
    9b14:	6a 41       	mov.b	@r1,	r10	
    9b16:	7a f0 f7 ff 	and.b	#-9,	r10	;#0xfff7
    9b1a:	4a de       	bis.b	r14,	r10	
    9b1c:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    9b20:	05 47       	mov	r7,	r5	
    9b22:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9b26:	28 00 
    9b28:	53 3c       	jmp	$+168    	;abs 0x9bd0
    9b2a:	d1 d3 01 00 	bis.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9b2e:	06 3c       	jmp	$+14     	;abs 0x9b3c
    9b30:	e1 d2 00 00 	bis.b	#4,	0(r1)	;r2 As==10, 0x0000(r1)
    9b34:	b1 40 0a 00 	mov	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9b38:	28 00 
    9b3a:	03 3c       	jmp	$+8      	;abs 0x9b42
    9b3c:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9b40:	28 00 
    9b42:	6b 41       	mov.b	@r1,	r11	
    9b44:	6b b3       	bit.b	#2,	r11	;r3 As==10
    9b46:	24 24       	jz	$+74     	;abs 0x9b90
    9b48:	0c 45       	mov	r5,	r12	
    9b4a:	3c 52       	add	#8,	r12	;r2 As==11
    9b4c:	28 45       	mov	@r5,	r8	
    9b4e:	17 45 02 00 	mov	2(r5),	r7	;0x0002(r5)
    9b52:	16 45 04 00 	mov	4(r5),	r6	;0x0004(r5)
    9b56:	1b 45 06 00 	mov	6(r5),	r11	;0x0006(r5)
    9b5a:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    9b5e:	81 47 20 00 	mov	r7,	32(r1)	;0x0020(r1)
    9b62:	81 46 22 00 	mov	r6,	34(r1)	;0x0022(r1)
    9b66:	81 4b 24 00 	mov	r11,	36(r1)	;0x0024(r1)
    9b6a:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9b6e:	08 93       	tst	r8		
    9b70:	06 20       	jnz	$+14     	;abs 0x9b7e
    9b72:	07 93       	tst	r7		
    9b74:	04 20       	jnz	$+10     	;abs 0x9b7e
    9b76:	06 93       	tst	r6		
    9b78:	02 20       	jnz	$+6      	;abs 0x9b7e
    9b7a:	0b 93       	tst	r11		
    9b7c:	02 24       	jz	$+6      	;abs 0x9b82
    9b7e:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9b82:	0b 5b       	rla	r11		
    9b84:	0b 43       	clr	r11		
    9b86:	0b 6b       	rlc	r11		
    9b88:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    9b8c:	05 4c       	mov	r12,	r5	
    9b8e:	20 3c       	jmp	$+66     	;abs 0x9bd0
    9b90:	5b f3       	and.b	#1,	r11	;r3 As==01
    9b92:	07 45       	mov	r5,	r7	
    9b94:	0d 24       	jz	$+28     	;abs 0x9bb0
    9b96:	27 52       	add	#4,	r7	;r2 As==10
    9b98:	28 45       	mov	@r5,	r8	
    9b9a:	1b 45 02 00 	mov	2(r5),	r11	;0x0002(r5)
    9b9e:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    9ba2:	81 4b 20 00 	mov	r11,	32(r1)	;0x0020(r1)
    9ba6:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9baa:	08 93       	tst	r8		
    9bac:	09 20       	jnz	$+20     	;abs 0x9bc0
    9bae:	06 3c       	jmp	$+14     	;abs 0x9bbc
    9bb0:	27 53       	incd	r7		
    9bb2:	2b 45       	mov	@r5,	r11	
    9bb4:	81 4b 1e 00 	mov	r11,	30(r1)	;0x001e(r1)
    9bb8:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    9bbc:	0b 93       	tst	r11		
    9bbe:	02 24       	jz	$+6      	;abs 0x9bc4
    9bc0:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9bc4:	0b 5b       	rla	r11		
    9bc6:	0b 43       	clr	r11		
    9bc8:	0b 6b       	rlc	r11		
    9bca:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    9bce:	05 47       	mov	r7,	r5	
    9bd0:	f1 b2 00 00 	bit.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    9bd4:	12 24       	jz	$+38     	;abs 0x9bfa
    9bd6:	c1 93 2b 00 	tst.b	43(r1)		;0x002b(r1)
    9bda:	0f 20       	jnz	$+32     	;abs 0x9bfa
    9bdc:	68 41       	mov.b	@r1,	r8	
    9bde:	b1 90 10 00 	cmp	#16,	40(r1)	;#0x0010, 0x0028(r1)
    9be2:	28 00 
    9be4:	03 20       	jnz	$+8      	;abs 0x9bec
    9be6:	78 d0 40 00 	bis.b	#64,	r8	;#0x0040
    9bea:	05 3c       	jmp	$+12     	;abs 0x9bf6
    9bec:	b1 92 28 00 	cmp	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    9bf0:	04 20       	jnz	$+10     	;abs 0x9bfa
    9bf2:	78 d0 20 00 	bis.b	#32,	r8	;#0x0020
    9bf6:	c1 48 00 00 	mov.b	r8,	0(r1)	;0x0000(r1)
    9bfa:	68 41       	mov.b	@r1,	r8	
    9bfc:	68 b2       	bit.b	#4,	r8	;r2 As==10
    9bfe:	30 24       	jz	$+98     	;abs 0x9c60
    9c00:	c1 93 2f 00 	tst.b	47(r1)		;0x002f(r1)
    9c04:	2d 24       	jz	$+92     	;abs 0x9c60
    9c06:	f1 40 2d 00 	mov.b	#45,	2(r1)	;#0x002d, 0x0002(r1)
    9c0a:	02 00 
    9c0c:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9c0e:	11 24       	jz	$+36     	;abs 0x9c32
    9c10:	b1 e3 1e 00 	xor	#-1,	30(r1)	;r3 As==11, 0x001e(r1)
    9c14:	b1 e3 20 00 	xor	#-1,	32(r1)	;r3 As==11, 0x0020(r1)
    9c18:	b1 e3 22 00 	xor	#-1,	34(r1)	;r3 As==11, 0x0022(r1)
    9c1c:	b1 e3 24 00 	xor	#-1,	36(r1)	;r3 As==11, 0x0024(r1)
    9c20:	91 53 1e 00 	inc	30(r1)		;0x001e(r1)
    9c24:	81 63 20 00 	adc	32(r1)		;0x0020(r1)
    9c28:	81 63 22 00 	adc	34(r1)		;0x0022(r1)
    9c2c:	81 63 24 00 	adc	36(r1)		;0x0024(r1)
    9c30:	17 3c       	jmp	$+48     	;abs 0x9c60
    9c32:	58 b3       	bit.b	#1,	r8	;r3 As==01
    9c34:	0f 24       	jz	$+32     	;abs 0x9c54
    9c36:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9c3a:	1b 41 20 00 	mov	32(r1),	r11	;0x0020(r1)
    9c3e:	3a e3       	inv	r10		
    9c40:	3b e3       	inv	r11		
    9c42:	0e 4a       	mov	r10,	r14	
    9c44:	0f 4b       	mov	r11,	r15	
    9c46:	1e 53       	inc	r14		
    9c48:	0f 63       	adc	r15		
    9c4a:	81 4e 1e 00 	mov	r14,	30(r1)	;0x001e(r1)
    9c4e:	81 4f 20 00 	mov	r15,	32(r1)	;0x0020(r1)
    9c52:	06 3c       	jmp	$+14     	;abs 0x9c60
    9c54:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    9c58:	3a e3       	inv	r10		
    9c5a:	1a 53       	inc	r10		
    9c5c:	81 4a 1e 00 	mov	r10,	30(r1)	;0x001e(r1)
    9c60:	c1 43 1b 00 	mov.b	#0,	27(r1)	;r3 As==00, 0x001b(r1)
    9c64:	68 b3       	bit.b	#2,	r8	;r3 As==10
    9c66:	6a 24       	jz	$+214    	;abs 0x9d3c
    9c68:	16 41 1e 00 	mov	30(r1),	r6	;0x001e(r1)
    9c6c:	91 41 20 00 	mov	32(r1),	60(r1)	;0x0020(r1), 0x003c(r1)
    9c70:	3c 00 
    9c72:	18 41 22 00 	mov	34(r1),	r8	;0x0022(r1)
    9c76:	14 41 24 00 	mov	36(r1),	r4	;0x0024(r1)
    9c7a:	07 41       	mov	r1,	r7	
    9c7c:	37 50 1a 00 	add	#26,	r7	;#0x001a
    9c80:	09 46       	mov	r6,	r9	
    9c82:	91 41 28 00 	mov	40(r1),	50(r1)	;0x0028(r1), 0x0032(r1)
    9c86:	32 00 
    9c88:	1b 41 28 00 	mov	40(r1),	r11	;0x0028(r1)
    9c8c:	8b 10       	swpb	r11		
    9c8e:	8b 11       	sxt	r11		
    9c90:	8b 10       	swpb	r11		
    9c92:	8b 11       	sxt	r11		
    9c94:	81 4b 34 00 	mov	r11,	52(r1)	;0x0034(r1)
    9c98:	81 4b 36 00 	mov	r11,	54(r1)	;0x0036(r1)
    9c9c:	81 4b 38 00 	mov	r11,	56(r1)	;0x0038(r1)
    9ca0:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9ca4:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9ca8:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cac:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cb0:	0c 49       	mov	r9,	r12	
    9cb2:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9cb6:	0e 48       	mov	r8,	r14	
    9cb8:	0f 44       	mov	r4,	r15	
    9cba:	b0 12 1a a0 	call	#0xa01a	
    9cbe:	31 52       	add	#8,	r1	;r2 As==11
    9cc0:	0b 4c       	mov	r12,	r11	
    9cc2:	3c 90 0a 00 	cmp	#10,	r12	;#0x000a
    9cc6:	05 34       	jge	$+12     	;abs 0x9cd2
    9cc8:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    9ccc:	c7 4b 00 00 	mov.b	r11,	0(r7)	;0x0000(r7)
    9cd0:	0c 3c       	jmp	$+26     	;abs 0x9cea
    9cd2:	4b 4c       	mov.b	r12,	r11	
    9cd4:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9cd8:	03 24       	jz	$+8      	;abs 0x9ce0
    9cda:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    9cde:	02 3c       	jmp	$+6      	;abs 0x9ce4
    9ce0:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    9ce4:	4a 5b       	add.b	r11,	r10	
    9ce6:	c7 4a 00 00 	mov.b	r10,	0(r7)	;0x0000(r7)
    9cea:	06 47       	mov	r7,	r6	
    9cec:	36 53       	add	#-1,	r6	;r3 As==11
    9cee:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cf2:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cf6:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cfa:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    9cfe:	0c 49       	mov	r9,	r12	
    9d00:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9d04:	0e 48       	mov	r8,	r14	
    9d06:	0f 44       	mov	r4,	r15	
    9d08:	b0 12 f4 9f 	call	#0x9ff4	
    9d0c:	31 52       	add	#8,	r1	;r2 As==11
    9d0e:	09 4c       	mov	r12,	r9	
    9d10:	81 4d 3c 00 	mov	r13,	60(r1)	;0x003c(r1)
    9d14:	08 4e       	mov	r14,	r8	
    9d16:	04 4f       	mov	r15,	r4	
    9d18:	37 53       	add	#-1,	r7	;r3 As==11
    9d1a:	0c 93       	tst	r12		
    9d1c:	b2 23       	jnz	$-154    	;abs 0x9c82
    9d1e:	0d 93       	tst	r13		
    9d20:	b0 23       	jnz	$-158    	;abs 0x9c82
    9d22:	0e 93       	tst	r14		
    9d24:	ae 23       	jnz	$-162    	;abs 0x9c82
    9d26:	0f 93       	tst	r15		
    9d28:	ac 23       	jnz	$-166    	;abs 0x9c82
    9d2a:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9d2e:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    9d32:	81 43 22 00 	mov	#0,	34(r1)	;r3 As==00, 0x0022(r1)
    9d36:	81 43 24 00 	mov	#0,	36(r1)	;r3 As==00, 0x0024(r1)
    9d3a:	6c 3c       	jmp	$+218    	;abs 0x9e14
    9d3c:	58 b3       	bit.b	#1,	r8	;r3 As==01
    9d3e:	3e 24       	jz	$+126    	;abs 0x9dbc
    9d40:	14 41 1e 00 	mov	30(r1),	r4	;0x001e(r1)
    9d44:	17 41 20 00 	mov	32(r1),	r7	;0x0020(r1)
    9d48:	08 41       	mov	r1,	r8	
    9d4a:	38 50 1a 00 	add	#26,	r8	;#0x001a
    9d4e:	19 41 28 00 	mov	40(r1),	r9	;0x0028(r1)
    9d52:	89 10       	swpb	r9		
    9d54:	89 11       	sxt	r9		
    9d56:	89 10       	swpb	r9		
    9d58:	89 11       	sxt	r9		
    9d5a:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9d5e:	0d 49       	mov	r9,	r13	
    9d60:	0e 44       	mov	r4,	r14	
    9d62:	0f 47       	mov	r7,	r15	
    9d64:	b0 12 8c 9f 	call	#0x9f8c	
    9d68:	0b 4e       	mov	r14,	r11	
    9d6a:	3e 90 0a 00 	cmp	#10,	r14	;#0x000a
    9d6e:	05 34       	jge	$+12     	;abs 0x9d7a
    9d70:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    9d74:	c8 4b 00 00 	mov.b	r11,	0(r8)	;0x0000(r8)
    9d78:	0c 3c       	jmp	$+26     	;abs 0x9d92
    9d7a:	4b 4e       	mov.b	r14,	r11	
    9d7c:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9d80:	03 24       	jz	$+8      	;abs 0x9d88
    9d82:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    9d86:	02 3c       	jmp	$+6      	;abs 0x9d8c
    9d88:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    9d8c:	4a 5b       	add.b	r11,	r10	
    9d8e:	c8 4a 00 00 	mov.b	r10,	0(r8)	;0x0000(r8)
    9d92:	06 48       	mov	r8,	r6	
    9d94:	36 53       	add	#-1,	r6	;r3 As==11
    9d96:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    9d9a:	0d 49       	mov	r9,	r13	
    9d9c:	0e 44       	mov	r4,	r14	
    9d9e:	0f 47       	mov	r7,	r15	
    9da0:	b0 12 56 9f 	call	#0x9f56	
    9da4:	04 4e       	mov	r14,	r4	
    9da6:	07 4f       	mov	r15,	r7	
    9da8:	38 53       	add	#-1,	r8	;r3 As==11
    9daa:	0e 93       	tst	r14		
    9dac:	d0 23       	jnz	$-94     	;abs 0x9d4e
    9dae:	0f 93       	tst	r15		
    9db0:	ce 23       	jnz	$-98     	;abs 0x9d4e
    9db2:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9db6:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    9dba:	2c 3c       	jmp	$+90     	;abs 0x9e14
    9dbc:	17 41 1e 00 	mov	30(r1),	r7	;0x001e(r1)
    9dc0:	08 41       	mov	r1,	r8	
    9dc2:	38 50 1a 00 	add	#26,	r8	;#0x001a
    9dc6:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    9dca:	0f 47       	mov	r7,	r15	
    9dcc:	b0 12 4e 9f 	call	#0x9f4e	
    9dd0:	0d 4f       	mov	r15,	r13	
    9dd2:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    9dd6:	05 34       	jge	$+12     	;abs 0x9de2
    9dd8:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    9ddc:	c8 4d 00 00 	mov.b	r13,	0(r8)	;0x0000(r8)
    9de0:	0c 3c       	jmp	$+26     	;abs 0x9dfa
    9de2:	4d 4f       	mov.b	r15,	r13	
    9de4:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    9de8:	03 24       	jz	$+8      	;abs 0x9df0
    9dea:	7c 40 37 00 	mov.b	#55,	r12	;#0x0037
    9dee:	02 3c       	jmp	$+6      	;abs 0x9df4
    9df0:	7c 40 57 00 	mov.b	#87,	r12	;#0x0057
    9df4:	4c 5d       	add.b	r13,	r12	
    9df6:	c8 4c 00 00 	mov.b	r12,	0(r8)	;0x0000(r8)
    9dfa:	06 48       	mov	r8,	r6	
    9dfc:	36 53       	add	#-1,	r6	;r3 As==11
    9dfe:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    9e02:	0f 47       	mov	r7,	r15	
    9e04:	b0 12 34 9f 	call	#0x9f34	
    9e08:	07 4f       	mov	r15,	r7	
    9e0a:	38 53       	add	#-1,	r8	;r3 As==11
    9e0c:	0f 93       	tst	r15		
    9e0e:	db 23       	jnz	$-72     	;abs 0x9dc6
    9e10:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    9e14:	b1 90 0a 00 	cmp	#10,	40(r1)	;#0x000a, 0x0028(r1)
    9e18:	28 00 
    9e1a:	02 24       	jz	$+6      	;abs 0x9e20
    9e1c:	c1 43 02 00 	mov.b	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    9e20:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9e24:	2a 24       	jz	$+86     	;abs 0x9e7a
    9e26:	0f 41       	mov	r1,	r15	
    9e28:	3f 50 1c 00 	add	#28,	r15	;#0x001c
    9e2c:	81 4f 42 00 	mov	r15,	66(r1)	;0x0042(r1)
    9e30:	1a 41 1c 00 	mov	28(r1),	r10	;0x001c(r1)
    9e34:	8a 10       	swpb	r10		
    9e36:	8a 11       	sxt	r10		
    9e38:	8a 10       	swpb	r10		
    9e3a:	8a 11       	sxt	r10		
    9e3c:	81 4a 44 00 	mov	r10,	68(r1)	;0x0044(r1)
    9e40:	81 46 46 00 	mov	r6,	70(r1)	;0x0046(r1)
    9e44:	0a 46       	mov	r6,	r10	
    9e46:	8a 10       	swpb	r10		
    9e48:	8a 11       	sxt	r10		
    9e4a:	8a 10       	swpb	r10		
    9e4c:	8a 11       	sxt	r10		
    9e4e:	81 4a 48 00 	mov	r10,	72(r1)	;0x0048(r1)
    9e52:	1c 41 42 00 	mov	66(r1),	r12	;0x0042(r1)
    9e56:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    9e5a:	1c 81 46 00 	sub	70(r1),	r12	;0x0046(r1)
    9e5e:	1d 71 48 00 	subc	72(r1),	r13	;0x0048(r1)
    9e62:	2c 83       	decd	r12		
    9e64:	1c 91 26 00 	cmp	38(r1),	r12	;0x0026(r1)
    9e68:	0e 2c       	jc	$+30     	;abs 0x9e86
    9e6a:	e1 d3 01 00 	bis.b	#2,	1(r1)	;r3 As==10, 0x0001(r1)
    9e6e:	5e 41 26 00 	mov.b	38(r1),	r14	;0x0026(r1)
    9e72:	4e 8c       	sub.b	r12,	r14	
    9e74:	c1 4e 03 00 	mov.b	r14,	3(r1)	;0x0003(r1)
    9e78:	06 3c       	jmp	$+14     	;abs 0x9e86
    9e7a:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9e7e:	03 24       	jz	$+8      	;abs 0x9e86
    9e80:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9e84:	30 00 
    9e86:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9e8a:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9e8e:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9e92:	0e 46       	mov	r6,	r14	
    9e94:	1e 53       	inc	r14		
    9e96:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9e9a:	b0 12 d2 96 	call	#0x96d2	
    9e9e:	21 52       	add	#4,	r1	;r2 As==10
    9ea0:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    9ea4:	0d 3c       	jmp	$+28     	;abs 0x9ec0
    9ea6:	7f 49       	mov.b	@r9+,	r15	
    9ea8:	8f 11       	sxt	r15		
    9eaa:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    9eae:	0e 49       	mov	r9,	r14	
    9eb0:	0e 58       	add	r8,	r14	
    9eb2:	19 91 40 00 	cmp	64(r1),	r9	;0x0040(r1)
    9eb6:	f7 2b       	jnc	$-16     	;abs 0x9ea6
    9eb8:	81 49 3e 00 	mov	r9,	62(r1)	;0x003e(r1)
    9ebc:	81 4e 2c 00 	mov	r14,	44(r1)	;0x002c(r1)
    9ec0:	07 43       	clr	r7		
    9ec2:	0e 3c       	jmp	$+30     	;abs 0x9ee0
    9ec4:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9ec8:	30 00 
    9eca:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9ece:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9ed2:	03 3c       	jmp	$+8      	;abs 0x9eda
    9ed4:	05 4e       	mov	r14,	r5	
    9ed6:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9eda:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    9ede:	17 43       	mov	#1,	r7	;r3 As==01
    9ee0:	16 41 40 00 	mov	64(r1),	r6	;0x0040(r1)
    9ee4:	6e 46       	mov.b	@r6,	r14	
    9ee6:	4e 93       	tst.b	r14		
    9ee8:	02 24       	jz	$+6      	;abs 0x9eee
    9eea:	30 40 b6 98 	br	#0x98b6	
    9eee:	1f 41 2c 00 	mov	44(r1),	r15	;0x002c(r1)
    9ef2:	31 50 4a 00 	add	#74,	r1	;#0x004a
    9ef6:	34 41       	pop	r4		
    9ef8:	35 41       	pop	r5		
    9efa:	36 41       	pop	r6		
    9efc:	37 41       	pop	r7		
    9efe:	38 41       	pop	r8		
    9f00:	39 41       	pop	r9		
    9f02:	3a 41       	pop	r10		
    9f04:	3b 41       	pop	r11		
    9f06:	30 41       	ret			

00009f08 <puts>:
    9f08:	0b 12       	push	r11		
    9f0a:	0b 4f       	mov	r15,	r11	
    9f0c:	6f 4b       	mov.b	@r11,	r15	
    9f0e:	4f 93       	tst.b	r15		
    9f10:	06 24       	jz	$+14     	;abs 0x9f1e
    9f12:	1b 53       	inc	r11		
    9f14:	8f 11       	sxt	r15		
    9f16:	b0 12 6e 95 	call	#0x956e	
    9f1a:	0f 93       	tst	r15		
    9f1c:	f7 37       	jge	$-16     	;abs 0x9f0c
    9f1e:	cb 93 00 00 	tst.b	0(r11)		;0x0000(r11)
    9f22:	05 20       	jnz	$+12     	;abs 0x9f2e
    9f24:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    9f28:	b0 12 6e 95 	call	#0x956e	
    9f2c:	01 3c       	jmp	$+4      	;abs 0x9f30
    9f2e:	3f 43       	mov	#-1,	r15	;r3 As==11
    9f30:	3b 41       	pop	r11		
    9f32:	30 41       	ret			

00009f34 <__udivhi3>:
    9f34:	7c 40 10 00 	mov.b	#16,	r12	;#0x0010
    9f38:	0d 4e       	mov	r14,	r13	
    9f3a:	0e 43       	clr	r14		
    9f3c:	0f 5f       	rla	r15		
    9f3e:	0e 6e       	rlc	r14		
    9f40:	0e 9d       	cmp	r13,	r14	
    9f42:	02 28       	jnc	$+6      	;abs 0x9f48
    9f44:	0e 8d       	sub	r13,	r14	
    9f46:	1f d3       	bis	#1,	r15	;r3 As==01
    9f48:	1c 83       	dec	r12		
    9f4a:	f8 23       	jnz	$-14     	;abs 0x9f3c
    9f4c:	30 41       	ret			

00009f4e <__umodhi3>:
    9f4e:	b0 12 34 9f 	call	#0x9f34	
    9f52:	0f 4e       	mov	r14,	r15	
    9f54:	30 41       	ret			

00009f56 <__udivsi3>:
    9f56:	0b 12       	push	r11		
    9f58:	0a 12       	push	r10		
    9f5a:	09 12       	push	r9		
    9f5c:	79 40 20 00 	mov.b	#32,	r9	;#0x0020
    9f60:	0a 4c       	mov	r12,	r10	
    9f62:	0b 4d       	mov	r13,	r11	
    9f64:	0c 43       	clr	r12		
    9f66:	0d 43       	clr	r13		
    9f68:	0e 5e       	rla	r14		
    9f6a:	0f 6f       	rlc	r15		
    9f6c:	0c 6c       	rlc	r12		
    9f6e:	0d 6d       	rlc	r13		
    9f70:	0d 9b       	cmp	r11,	r13	
    9f72:	06 28       	jnc	$+14     	;abs 0x9f80
    9f74:	02 20       	jnz	$+6      	;abs 0x9f7a
    9f76:	0c 9a       	cmp	r10,	r12	
    9f78:	03 28       	jnc	$+8      	;abs 0x9f80
    9f7a:	0c 8a       	sub	r10,	r12	
    9f7c:	0d 7b       	subc	r11,	r13	
    9f7e:	1e d3       	bis	#1,	r14	;r3 As==01
    9f80:	19 83       	dec	r9		
    9f82:	f2 23       	jnz	$-26     	;abs 0x9f68
    9f84:	39 41       	pop	r9		
    9f86:	3a 41       	pop	r10		
    9f88:	3b 41       	pop	r11		
    9f8a:	30 41       	ret			

00009f8c <__umodsi3>:
    9f8c:	b0 12 56 9f 	call	#0x9f56	
    9f90:	0e 4c       	mov	r12,	r14	
    9f92:	0f 4d       	mov	r13,	r15	
    9f94:	30 41       	ret			

00009f96 <__xabi_udivmod64>:
    9f96:	07 12       	push	r7		
    9f98:	06 12       	push	r6		
    9f9a:	05 12       	push	r5		
    9f9c:	04 12       	push	r4		
    9f9e:	30 12 40 00 	push	#64		;#0x0040
    9fa2:	04 48       	mov	r8,	r4	
    9fa4:	05 49       	mov	r9,	r5	
    9fa6:	06 4a       	mov	r10,	r6	
    9fa8:	07 4b       	mov	r11,	r7	
    9faa:	08 43       	clr	r8		
    9fac:	09 43       	clr	r9		
    9fae:	0a 43       	clr	r10		
    9fb0:	0b 43       	clr	r11		
    9fb2:	0c 5c       	rla	r12		
    9fb4:	0d 6d       	rlc	r13		
    9fb6:	0e 6e       	rlc	r14		
    9fb8:	0f 6f       	rlc	r15		
    9fba:	08 68       	rlc	r8		
    9fbc:	09 69       	rlc	r9		
    9fbe:	0a 6a       	rlc	r10		
    9fc0:	0b 6b       	rlc	r11		
    9fc2:	0b 97       	cmp	r7,	r11	
    9fc4:	0e 28       	jnc	$+30     	;abs 0x9fe2
    9fc6:	08 20       	jnz	$+18     	;abs 0x9fd8
    9fc8:	0a 96       	cmp	r6,	r10	
    9fca:	0b 28       	jnc	$+24     	;abs 0x9fe2
    9fcc:	05 20       	jnz	$+12     	;abs 0x9fd8
    9fce:	09 95       	cmp	r5,	r9	
    9fd0:	08 28       	jnc	$+18     	;abs 0x9fe2
    9fd2:	02 20       	jnz	$+6      	;abs 0x9fd8
    9fd4:	08 94       	cmp	r4,	r8	
    9fd6:	05 28       	jnc	$+12     	;abs 0x9fe2
    9fd8:	08 84       	sub	r4,	r8	
    9fda:	09 75       	subc	r5,	r9	
    9fdc:	0a 76       	subc	r6,	r10	
    9fde:	0b 77       	subc	r7,	r11	
    9fe0:	1c d3       	bis	#1,	r12	;r3 As==01
    9fe2:	91 83 00 00 	dec	0(r1)		;0x0000(r1)
    9fe6:	e5 23       	jnz	$-52     	;abs 0x9fb2
    9fe8:	21 53       	incd	r1		
    9fea:	34 41       	pop	r4		
    9fec:	35 41       	pop	r5		
    9fee:	36 41       	pop	r6		
    9ff0:	37 41       	pop	r7		
    9ff2:	30 41       	ret			

00009ff4 <__udivdi3>:
    9ff4:	0b 12       	push	r11		
    9ff6:	0a 12       	push	r10		
    9ff8:	09 12       	push	r9		
    9ffa:	08 12       	push	r8		
    9ffc:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a000:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a004:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a008:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a00c:	b0 12 96 9f 	call	#0x9f96	
    a010:	38 41       	pop	r8		
    a012:	39 41       	pop	r9		
    a014:	3a 41       	pop	r10		
    a016:	3b 41       	pop	r11		
    a018:	30 41       	ret			

0000a01a <__umoddi3>:
    a01a:	0b 12       	push	r11		
    a01c:	0a 12       	push	r10		
    a01e:	09 12       	push	r9		
    a020:	08 12       	push	r8		
    a022:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a026:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a02a:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a02e:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a032:	b0 12 96 9f 	call	#0x9f96	
    a036:	0c 48       	mov	r8,	r12	
    a038:	0d 49       	mov	r9,	r13	
    a03a:	0e 4a       	mov	r10,	r14	
    a03c:	0f 4b       	mov	r11,	r15	
    a03e:	38 41       	pop	r8		
    a040:	39 41       	pop	r9		
    a042:	3a 41       	pop	r10		
    a044:	3b 41       	pop	r11		
    a046:	30 41       	ret			

0000a048 <__udivmoddi4>:
    a048:	0b 12       	push	r11		
    a04a:	0a 12       	push	r10		
    a04c:	09 12       	push	r9		
    a04e:	08 12       	push	r8		
    a050:	07 12       	push	r7		
    a052:	18 41 0c 00 	mov	12(r1),	r8	;0x000c(r1)
    a056:	19 41 0e 00 	mov	14(r1),	r9	;0x000e(r1)
    a05a:	1a 41 10 00 	mov	16(r1),	r10	;0x0010(r1)
    a05e:	1b 41 12 00 	mov	18(r1),	r11	;0x0012(r1)
    a062:	b0 12 96 9f 	call	#0x9f96	
    a066:	17 41 14 00 	mov	20(r1),	r7	;0x0014(r1)
    a06a:	87 48 00 00 	mov	r8,	0(r7)	;0x0000(r7)
    a06e:	87 49 02 00 	mov	r9,	2(r7)	;0x0002(r7)
    a072:	87 4a 04 00 	mov	r10,	4(r7)	;0x0004(r7)
    a076:	87 4b 06 00 	mov	r11,	6(r7)	;0x0006(r7)
    a07a:	37 41       	pop	r7		
    a07c:	38 41       	pop	r8		
    a07e:	39 41       	pop	r9		
    a080:	3a 41       	pop	r10		
    a082:	3b 41       	pop	r11		
    a084:	30 41       	ret			

0000a086 <_unexpected_>:
    a086:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	26 81 26 81 26 81 d6 8e 26 81 26 81 26 81 10 96     &.&.&...&.&.&...
    fff0:	26 81 26 81 26 81 26 81 26 81 26 81 26 81 00 80     &.&.&.&.&.&.&...
