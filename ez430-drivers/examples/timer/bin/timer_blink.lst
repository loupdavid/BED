
bin/timer_blink.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
00000200 l    d  .bss	00000000 .bss
0000020c l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main.c
00008094 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 clock.c
00000200 l     O .bss	00000002 mclk_freq_mhz
000080c2 l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 timer.c
00000202 l     O .bss	00000002 timerA_cb
00000204 l     O .bss	00000002 timerA_wakeup
00000206 l     O .bss	00000002 timerB_cb
00000208 l     O .bss	00000002 timerB_wakeup
00000000 l    df *ABS*	00000000 watchdog.c
0000020a l     O .bss	00000002 watchdog_backup
00000057 g       *ABS*	00000000 __BCSCTL1
0000822c g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000174 g       *ABS*	00000000 __TACCR1
00000000 g       *ABS*	00000000 __data_size
00008094  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00008204 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
0000004b g       *ABS*	00000000 __ADC10AE1
00000069 g       *ABS*	00000000 __UCB0CTL1
00008094  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
00000060 g       *ABS*	00000000 __UCA0CTL0
000081a6 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
000085cc g     F .text	00000018 timerB_register_cb
0000012e g       *ABS*	00000000 __TAIV
00000000 g       .vectors	00000000 _efartext
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
00008696 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000849a g     F .text	00000038 Timer_A
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
0000001d g       *ABS*	00000000 __P4OUT
0000000c g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
0000827c g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
0000808e  w      .text	00000000 __stop_progExec__
0000002d g       *ABS*	00000000 __P2IE
00000192 g       *ABS*	00000000 __TBCCR0
00008094  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
000081f0 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
00008654 g     F .text	0000000e timerB_stop
00000049 g       *ABS*	00000000 __ADC10DTC1
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
000081ca g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
00008254 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
00000182 g       *ABS*	00000000 __TBCCTL0
0000006d g       *ABS*	00000000 __UCB0STAT
00008094  w      .text	00000000 __isr_5
00000063 g       *ABS*	00000000 __UCA0BR1
00008696 g       *ABS*	00000000 __data_load_start
00008452 g     F .text	00000016 leds_on
00008094 g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
000083ea g     F .text	00000014 led_green_switch
000001bc g       *ABS*	00000000 __ADC10SA
00000166 g       *ABS*	00000000 __TACCTL2
00000065 g       *ABS*	00000000 __UCA0STAT
000083c0 g     F .text	00000016 led_green_off
00008094  w      .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
0000012c g       *ABS*	00000000 __FCTL3
000084e8 g     F .text	00000018 timerA_register_cb
00008094  w      .text	00000000 __isr_10
000080b4 g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000854c g     F .text	00000024 timerA_start_milliseconds
000081b8 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
00008414 g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
0000843c g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
0000020c g     O .noinit	00000002 __wdt_clear_value
0000001b g       *ABS*	00000000 __P3SEL
00008570 g     F .text	0000000e timerA_stop
00008094  w      .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
00000028 g       *ABS*	00000000 __P2IN
00008500 g     F .text	00000018 timerA_set_wakeup
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
000083fe g     F .text	00000016 led_red_off
00008094  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
00008028  w      .text	00000000 __do_clear_bss
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
00008240 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
00008662 g     F .text	0000001c watchdog_stop
00008182 g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
00008218 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
000085b6 g     F .text	00000016 timerB_init
00000027 g       *ABS*	00000000 __P1REN
000000c0 g       *ABS*	00000000 __OA0CTL0
00008268 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
00008694  w      .text	00000000 _unexpected_
00008094  w      .text	00000000 __isr_8
00008094  w      .text	00000000 __isr_3
00008428 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
00008000  w      .text	00000000 _reset_vector__
00008094 g       .text	00000000 __ctors_start
00008094  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	00000050 main
00000176 g       *ABS*	00000000 __TACCR2
00008332 g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
0000857e g       .text	00000000 __isr_13
0000828c g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
000084d2 g     F .text	00000016 timerA_init
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
000085e4 g     F .text	00000018 timerB_set_wakeup
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
0000857e g     F .text	00000038 Timer_B
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
000080a6 g     F .text	0000000e red_led_cb
0000849a g       .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00008518 g     F .text	00000034 timerA_start_ticks
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
000081dc g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
00008094 g       .text	00000000 __dtors_start
00008094  w      .text	00000000 __isr_6
00008094 g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
00008194 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
00008094  w      .text	00000000 __isr_1
00000200 g       .text	00000000 _edata
0000020e g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
000083d6 g     F .text	00000014 led_green_on
0000867e g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
0000808e  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
000085fc g     F .text	00000034 timerB_start_ticks
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
00000200 g       .text	00000000 __data_start
00008630 g     F .text	00000024 timerB_start_milliseconds
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
00008098 g     F .text	0000000e green_led_cb
00008468 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 0c 02 	mov	r5,	&0x020c	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 0c 02 	mov	&0x020c,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f 96 86 	mov	-31082(r15),512(r15);0x8696(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 0c 00 	mov	#12,	r15	;#0x000c
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 0c 02 	mov	&0x020c,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:
/* ************************************************** */
/* ************************************************** */
/* ************************************************** */

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
  watchdog_stop();
    8042:	b0 12 62 86 	call	#0x8662	

  /* leds */
  leds_init();
    8046:	b0 12 68 84 	call	#0x8468	
  leds_off();
    804a:	b0 12 3c 84 	call	#0x843c	
  
  /* switch to running freq mode            */
  set_mcu_speed_dco_mclk_8MHz_smclk_4MHz ();
    804e:	b0 12 a6 81 	call	#0x81a6	

  /* timer settings */
  timerB_init();
    8052:	b0 12 b6 85 	call	#0x85b6	
  timerB_register_cb(green_led_cb);
    8056:	3f 40 98 80 	mov	#-32616,r15	;#0x8098
    805a:	b0 12 cc 85 	call	#0x85cc	
  /* uncomment to blink red led */
  timerB_set_wakeup(1); 
    805e:	1f 43       	mov	#1,	r15	;r3 As==01
    8060:	b0 12 e4 85 	call	#0x85e4	
  /* ACLK ~ 12kHz, 10000 ticks = 0.83s */
  timerB_start_ticks(10000); 
    8064:	3f 40 10 27 	mov	#10000,	r15	;#0x2710
    8068:	b0 12 fc 85 	call	#0x85fc	

  /* timer settings */
  timerA_init();
    806c:	b0 12 d2 84 	call	#0x84d2	
  timerA_register_cb(red_led_cb);
    8070:	3f 40 a6 80 	mov	#-32602,r15	;#0x80a6
    8074:	b0 12 e8 84 	call	#0x84e8	
  /* uncomment to blink red led */
  timerA_set_wakeup(1); 
    8078:	1f 43       	mov	#1,	r15	;r3 As==01
    807a:	b0 12 00 85 	call	#0x8500	
  timerA_start_ticks(5000);
    807e:	3f 40 88 13 	mov	#5000,	r15	;#0x1388
    8082:	b0 12 18 85 	call	#0x8518	
   
  /* enable interrupt */
  eint();
    8086:	32 d2       	eint			
  
  while (1)
    {
      LPM1;
    8088:	32 d0 50 00 	bis	#80,	r2	;#0x0050
      //led_red_switch();
    }
    808c:	fd 3f       	jmp	$-4      	;abs 0x8088

0000808e <__stop_progExec__>:
    808e:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    8092:	fd 3f       	jmp	$-4      	;abs 0x808e

00008094 <__ctors_end>:
    8094:	30 40 94 86 	br	#0x8694	

00008098 <green_led_cb>:
/* ************************************************** */
/* ************************************************** */
/* ************************************************** */

void green_led_cb(void)
{
    8098:	04 12       	push	r4		
    809a:	04 41       	mov	r1,	r4	
    809c:	24 53       	incd	r4		
  led_green_switch();
    809e:	b0 12 ea 83 	call	#0x83ea	
}
    80a2:	34 41       	pop	r4		
    80a4:	30 41       	ret			

000080a6 <red_led_cb>:

void red_led_cb(void)
{
    80a6:	04 12       	push	r4		
    80a8:	04 41       	mov	r1,	r4	
    80aa:	24 53       	incd	r4		
  led_red_switch();
    80ac:	b0 12 28 84 	call	#0x8428	
}
    80b0:	34 41       	pop	r4		
    80b2:	30 41       	ret			

000080b4 <get_mclk_freq_mhz>:
    80b4:	04 12       	push	r4		
    80b6:	04 41       	mov	r1,	r4	
    80b8:	24 53       	incd	r4		
    80ba:	1f 42 00 02 	mov	&0x0200,r15	
    80be:	34 41       	pop	r4		
    80c0:	30 41       	ret			

000080c2 <set_mcu_speed>:
    80c2:	04 12       	push	r4		
    80c4:	04 41       	mov	r1,	r4	
    80c6:	24 53       	incd	r4		
    80c8:	21 83       	decd	r1		
    80ca:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    80ce:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    80d2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    80d6:	3f 92       	cmp	#8,	r15	;r2 As==11
    80d8:	16 24       	jz	$+46     	;abs 0x8106
    80da:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    80de:	03 34       	jge	$+8      	;abs 0x80e6
    80e0:	1f 93       	cmp	#1,	r15	;r3 As==01
    80e2:	08 24       	jz	$+18     	;abs 0x80f4
    80e4:	2b 3c       	jmp	$+88     	;abs 0x813c
    80e6:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    80ea:	16 24       	jz	$+46     	;abs 0x8118
    80ec:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    80f0:	1c 24       	jz	$+58     	;abs 0x812a
    80f2:	24 3c       	jmp	$+74     	;abs 0x813c
    80f4:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    80f8:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    80fc:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    8100:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8104:	1b 3c       	jmp	$+56     	;abs 0x813c
    8106:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    810a:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    810e:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    8112:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8116:	12 3c       	jmp	$+38     	;abs 0x813c
    8118:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    811c:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8120:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    8124:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    8128:	09 3c       	jmp	$+20     	;abs 0x813c
    812a:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    812e:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    8132:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    8136:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    813a:	03 43       	nop			
    813c:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    8140:	2f 93       	cmp	#2,	r15	;r3 As==10
    8142:	0e 24       	jz	$+30     	;abs 0x8160
    8144:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    8148:	03 34       	jge	$+8      	;abs 0x8150
    814a:	1f 93       	cmp	#1,	r15	;r3 As==01
    814c:	06 24       	jz	$+14     	;abs 0x815a
    814e:	12 3c       	jmp	$+38     	;abs 0x8174
    8150:	2f 92       	cmp	#4,	r15	;r2 As==10
    8152:	09 24       	jz	$+20     	;abs 0x8166
    8154:	3f 92       	cmp	#8,	r15	;r2 As==11
    8156:	0a 24       	jz	$+22     	;abs 0x816c
    8158:	0d 3c       	jmp	$+28     	;abs 0x8174
    815a:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    815e:	0a 3c       	jmp	$+22     	;abs 0x8174
    8160:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    8164:	07 3c       	jmp	$+16     	;abs 0x8174
    8166:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    816a:	04 3c       	jmp	$+10     	;abs 0x8174
    816c:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    8170:	58 00 
    8172:	03 43       	nop			
    8174:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8178:	82 4f 00 02 	mov	r15,	&0x0200	
    817c:	21 53       	incd	r1		
    817e:	34 41       	pop	r4		
    8180:	30 41       	ret			

00008182 <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    8182:	04 12       	push	r4		
    8184:	04 41       	mov	r1,	r4	
    8186:	24 53       	incd	r4		
    8188:	5e 43       	mov.b	#1,	r14	;r3 As==01
    818a:	5f 43       	mov.b	#1,	r15	;r3 As==01
    818c:	b0 12 c2 80 	call	#0x80c2	
    8190:	34 41       	pop	r4		
    8192:	30 41       	ret			

00008194 <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    8194:	04 12       	push	r4		
    8196:	04 41       	mov	r1,	r4	
    8198:	24 53       	incd	r4		
    819a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    819c:	7f 42       	mov.b	#8,	r15	;r2 As==11
    819e:	b0 12 c2 80 	call	#0x80c2	
    81a2:	34 41       	pop	r4		
    81a4:	30 41       	ret			

000081a6 <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    81a6:	04 12       	push	r4		
    81a8:	04 41       	mov	r1,	r4	
    81aa:	24 53       	incd	r4		
    81ac:	6e 43       	mov.b	#2,	r14	;r3 As==10
    81ae:	7f 42       	mov.b	#8,	r15	;r2 As==11
    81b0:	b0 12 c2 80 	call	#0x80c2	
    81b4:	34 41       	pop	r4		
    81b6:	30 41       	ret			

000081b8 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    81b8:	04 12       	push	r4		
    81ba:	04 41       	mov	r1,	r4	
    81bc:	24 53       	incd	r4		
    81be:	6e 42       	mov.b	#4,	r14	;r2 As==10
    81c0:	7f 42       	mov.b	#8,	r15	;r2 As==11
    81c2:	b0 12 c2 80 	call	#0x80c2	
    81c6:	34 41       	pop	r4		
    81c8:	30 41       	ret			

000081ca <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    81ca:	04 12       	push	r4		
    81cc:	04 41       	mov	r1,	r4	
    81ce:	24 53       	incd	r4		
    81d0:	7e 42       	mov.b	#8,	r14	;r2 As==11
    81d2:	7f 42       	mov.b	#8,	r15	;r2 As==11
    81d4:	b0 12 c2 80 	call	#0x80c2	
    81d8:	34 41       	pop	r4		
    81da:	30 41       	ret			

000081dc <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    81dc:	04 12       	push	r4		
    81de:	04 41       	mov	r1,	r4	
    81e0:	24 53       	incd	r4		
    81e2:	5e 43       	mov.b	#1,	r14	;r3 As==01
    81e4:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    81e8:	b0 12 c2 80 	call	#0x80c2	
    81ec:	34 41       	pop	r4		
    81ee:	30 41       	ret			

000081f0 <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    81f0:	04 12       	push	r4		
    81f2:	04 41       	mov	r1,	r4	
    81f4:	24 53       	incd	r4		
    81f6:	6e 43       	mov.b	#2,	r14	;r3 As==10
    81f8:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    81fc:	b0 12 c2 80 	call	#0x80c2	
    8200:	34 41       	pop	r4		
    8202:	30 41       	ret			

00008204 <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    8204:	04 12       	push	r4		
    8206:	04 41       	mov	r1,	r4	
    8208:	24 53       	incd	r4		
    820a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    820c:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    8210:	b0 12 c2 80 	call	#0x80c2	
    8214:	34 41       	pop	r4		
    8216:	30 41       	ret			

00008218 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    8218:	04 12       	push	r4		
    821a:	04 41       	mov	r1,	r4	
    821c:	24 53       	incd	r4		
    821e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    8220:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    8224:	b0 12 c2 80 	call	#0x80c2	
    8228:	34 41       	pop	r4		
    822a:	30 41       	ret			

0000822c <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    822c:	04 12       	push	r4		
    822e:	04 41       	mov	r1,	r4	
    8230:	24 53       	incd	r4		
    8232:	5e 43       	mov.b	#1,	r14	;r3 As==01
    8234:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8238:	b0 12 c2 80 	call	#0x80c2	
    823c:	34 41       	pop	r4		
    823e:	30 41       	ret			

00008240 <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    8240:	04 12       	push	r4		
    8242:	04 41       	mov	r1,	r4	
    8244:	24 53       	incd	r4		
    8246:	6e 43       	mov.b	#2,	r14	;r3 As==10
    8248:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    824c:	b0 12 c2 80 	call	#0x80c2	
    8250:	34 41       	pop	r4		
    8252:	30 41       	ret			

00008254 <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    8254:	04 12       	push	r4		
    8256:	04 41       	mov	r1,	r4	
    8258:	24 53       	incd	r4		
    825a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    825c:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8260:	b0 12 c2 80 	call	#0x80c2	
    8264:	34 41       	pop	r4		
    8266:	30 41       	ret			

00008268 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    8268:	04 12       	push	r4		
    826a:	04 41       	mov	r1,	r4	
    826c:	24 53       	incd	r4		
    826e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    8270:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    8274:	b0 12 c2 80 	call	#0x80c2	
    8278:	34 41       	pop	r4		
    827a:	30 41       	ret			

0000827c <loop_4_cycles>:
    827c:	04 12       	push	r4		
    827e:	04 41       	mov	r1,	r4	
    8280:	24 53       	incd	r4		
    8282:	3e 53       	add	#-1,	r14	;r3 As==11
    8284:	3f 63       	addc	#-1,	r15	;r3 As==11
    8286:	fd 2f       	jc	$-4      	;abs 0x8282
    8288:	34 41       	pop	r4		
    828a:	30 41       	ret			

0000828c <delay_usec>:
    828c:	04 12       	push	r4		
    828e:	04 41       	mov	r1,	r4	
    8290:	24 53       	incd	r4		
    8292:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8296:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    829a:	1f 42 00 02 	mov	&0x0200,r15	
    829e:	3f 92       	cmp	#8,	r15	;r2 As==11
    82a0:	18 24       	jz	$+50     	;abs 0x82d2
    82a2:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    82a6:	03 2c       	jc	$+8      	;abs 0x82ae
    82a8:	1f 93       	cmp	#1,	r15	;r3 As==01
    82aa:	08 24       	jz	$+18     	;abs 0x82bc
    82ac:	2d 3c       	jmp	$+92     	;abs 0x8308
    82ae:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    82b2:	17 24       	jz	$+48     	;abs 0x82e2
    82b4:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    82b8:	1e 24       	jz	$+62     	;abs 0x82f6
    82ba:	26 3c       	jmp	$+78     	;abs 0x8308
    82bc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82c0:	12 c3       	clrc			
    82c2:	0f 10       	rrc	r15		
    82c4:	12 c3       	clrc			
    82c6:	0f 10       	rrc	r15		
    82c8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    82cc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    82d0:	26 3c       	jmp	$+78     	;abs 0x831e
    82d2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82d6:	0f 5f       	rla	r15		
    82d8:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    82dc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    82e0:	1e 3c       	jmp	$+62     	;abs 0x831e
    82e2:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    82e6:	0f 4e       	mov	r14,	r15	
    82e8:	0f 5f       	rla	r15		
    82ea:	0f 5e       	add	r14,	r15	
    82ec:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    82f0:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    82f4:	14 3c       	jmp	$+42     	;abs 0x831e
    82f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    82fa:	0f 5f       	rla	r15		
    82fc:	0f 5f       	rla	r15		
    82fe:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    8302:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8306:	0b 3c       	jmp	$+24     	;abs 0x831e
    8308:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    830c:	12 c3       	clrc			
    830e:	0f 10       	rrc	r15		
    8310:	12 c3       	clrc			
    8312:	0f 10       	rrc	r15		
    8314:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    8318:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    831c:	03 43       	nop			
    831e:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    8322:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8326:	b0 12 7c 82 	call	#0x827c	
    832a:	31 50 06 00 	add	#6,	r1	;#0x0006
    832e:	34 41       	pop	r4		
    8330:	30 41       	ret			

00008332 <delay_ms>:
    8332:	04 12       	push	r4		
    8334:	04 41       	mov	r1,	r4	
    8336:	24 53       	incd	r4		
    8338:	31 82       	sub	#8,	r1	;r2 As==11
    833a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    833e:	1f 42 00 02 	mov	&0x0200,r15	
    8342:	3f 92       	cmp	#8,	r15	;r2 As==11
    8344:	13 24       	jz	$+40     	;abs 0x836c
    8346:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    834a:	03 2c       	jc	$+8      	;abs 0x8352
    834c:	1f 93       	cmp	#1,	r15	;r3 As==01
    834e:	08 24       	jz	$+18     	;abs 0x8360
    8350:	1f 3c       	jmp	$+64     	;abs 0x8390
    8352:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    8356:	10 24       	jz	$+34     	;abs 0x8378
    8358:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    835c:	13 24       	jz	$+40     	;abs 0x8384
    835e:	18 3c       	jmp	$+50     	;abs 0x8390
    8360:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8364:	f8 ff 
    8366:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    836a:	18 3c       	jmp	$+50     	;abs 0x839c
    836c:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    8370:	f8 ff 
    8372:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8376:	12 3c       	jmp	$+38     	;abs 0x839c
    8378:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    837c:	f8 ff 
    837e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8382:	0c 3c       	jmp	$+26     	;abs 0x839c
    8384:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    8388:	f8 ff 
    838a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    838e:	06 3c       	jmp	$+14     	;abs 0x839c
    8390:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    8394:	f8 ff 
    8396:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    839a:	03 43       	nop			
    839c:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    83a0:	08 3c       	jmp	$+18     	;abs 0x83b2
    83a2:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    83a6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    83aa:	b0 12 7c 82 	call	#0x827c	
    83ae:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    83b2:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    83b6:	f6 ff 
    83b8:	f4 2b       	jnc	$-22     	;abs 0x83a2
    83ba:	31 52       	add	#8,	r1	;r2 As==11
    83bc:	34 41       	pop	r4		
    83be:	30 41       	ret			

000083c0 <led_green_off>:
    83c0:	04 12       	push	r4		
    83c2:	04 41       	mov	r1,	r4	
    83c4:	24 53       	incd	r4		
    83c6:	5f 42 21 00 	mov.b	&0x0021,r15	
    83ca:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    83ce:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    83d2:	34 41       	pop	r4		
    83d4:	30 41       	ret			

000083d6 <led_green_on>:
    83d6:	04 12       	push	r4		
    83d8:	04 41       	mov	r1,	r4	
    83da:	24 53       	incd	r4		
    83dc:	5f 42 21 00 	mov.b	&0x0021,r15	
    83e0:	6f d3       	bis.b	#2,	r15	;r3 As==10
    83e2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    83e6:	34 41       	pop	r4		
    83e8:	30 41       	ret			

000083ea <led_green_switch>:
    83ea:	04 12       	push	r4		
    83ec:	04 41       	mov	r1,	r4	
    83ee:	24 53       	incd	r4		
    83f0:	5f 42 21 00 	mov.b	&0x0021,r15	
    83f4:	6f e3       	xor.b	#2,	r15	;r3 As==10
    83f6:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    83fa:	34 41       	pop	r4		
    83fc:	30 41       	ret			

000083fe <led_red_off>:
    83fe:	04 12       	push	r4		
    8400:	04 41       	mov	r1,	r4	
    8402:	24 53       	incd	r4		
    8404:	5f 42 21 00 	mov.b	&0x0021,r15	
    8408:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    840c:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8410:	34 41       	pop	r4		
    8412:	30 41       	ret			

00008414 <led_red_on>:
    8414:	04 12       	push	r4		
    8416:	04 41       	mov	r1,	r4	
    8418:	24 53       	incd	r4		
    841a:	5f 42 21 00 	mov.b	&0x0021,r15	
    841e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    8420:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8424:	34 41       	pop	r4		
    8426:	30 41       	ret			

00008428 <led_red_switch>:
    8428:	04 12       	push	r4		
    842a:	04 41       	mov	r1,	r4	
    842c:	24 53       	incd	r4		
    842e:	5f 42 21 00 	mov.b	&0x0021,r15	
    8432:	5f e3       	xor.b	#1,	r15	;r3 As==01
    8434:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8438:	34 41       	pop	r4		
    843a:	30 41       	ret			

0000843c <leds_off>:
    843c:	04 12       	push	r4		
    843e:	04 41       	mov	r1,	r4	
    8440:	24 53       	incd	r4		
    8442:	5f 42 21 00 	mov.b	&0x0021,r15	
    8446:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    844a:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    844e:	34 41       	pop	r4		
    8450:	30 41       	ret			

00008452 <leds_on>:
    8452:	04 12       	push	r4		
    8454:	04 41       	mov	r1,	r4	
    8456:	24 53       	incd	r4		
    8458:	5f 42 21 00 	mov.b	&0x0021,r15	
    845c:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8460:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    8464:	34 41       	pop	r4		
    8466:	30 41       	ret			

00008468 <leds_init>:
    8468:	04 12       	push	r4		
    846a:	04 41       	mov	r1,	r4	
    846c:	24 53       	incd	r4		
    846e:	5f 42 21 00 	mov.b	&0x0021,r15	
    8472:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    8476:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    847a:	5f 42 22 00 	mov.b	&0x0022,r15	
    847e:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    8482:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    8486:	5f 42 26 00 	mov.b	&0x0026,r15	
    848a:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    848e:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    8492:	b0 12 3c 84 	call	#0x843c	
    8496:	34 41       	pop	r4		
    8498:	30 41       	ret			

0000849a <Timer_A>:
    849a:	0f 12       	push	r15		
    849c:	0e 12       	push	r14		
    849e:	0d 12       	push	r13		
    84a0:	0c 12       	push	r12		
    84a2:	04 12       	push	r4		
    84a4:	04 41       	mov	r1,	r4	
    84a6:	34 50 0a 00 	add	#10,	r4	;#0x000a
    84aa:	1f 42 02 02 	mov	&0x0202,r15	
    84ae:	0f 93       	tst	r15		
    84b0:	03 24       	jz	$+8      	;abs 0x84b8
    84b2:	1f 42 02 02 	mov	&0x0202,r15	
    84b6:	8f 12       	call	r15		
    84b8:	1f 42 04 02 	mov	&0x0204,r15	
    84bc:	1f 93       	cmp	#1,	r15	;r3 As==01
    84be:	03 20       	jnz	$+8      	;abs 0x84c6
    84c0:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    84c4:	00 00 
    84c6:	34 41       	pop	r4		
    84c8:	3c 41       	pop	r12		
    84ca:	3d 41       	pop	r13		
    84cc:	3e 41       	pop	r14		
    84ce:	3f 41       	pop	r15		
    84d0:	00 13       	reti			

000084d2 <timerA_init>:
    84d2:	04 12       	push	r4		
    84d4:	04 41       	mov	r1,	r4	
    84d6:	24 53       	incd	r4		
    84d8:	82 43 02 02 	mov	#0,	&0x0202	;r3 As==00
    84dc:	82 43 04 02 	mov	#0,	&0x0204	;r3 As==00
    84e0:	b0 12 70 85 	call	#0x8570	
    84e4:	34 41       	pop	r4		
    84e6:	30 41       	ret			

000084e8 <timerA_register_cb>:
    84e8:	04 12       	push	r4		
    84ea:	04 41       	mov	r1,	r4	
    84ec:	24 53       	incd	r4		
    84ee:	21 83       	decd	r1		
    84f0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    84f4:	92 44 fc ff 	mov	-4(r4),	&0x0202	;0xfffc(r4)
    84f8:	02 02 
    84fa:	21 53       	incd	r1		
    84fc:	34 41       	pop	r4		
    84fe:	30 41       	ret			

00008500 <timerA_set_wakeup>:
    8500:	04 12       	push	r4		
    8502:	04 41       	mov	r1,	r4	
    8504:	24 53       	incd	r4		
    8506:	21 83       	decd	r1		
    8508:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    850c:	92 44 fc ff 	mov	-4(r4),	&0x0204	;0xfffc(r4)
    8510:	04 02 
    8512:	21 53       	incd	r1		
    8514:	34 41       	pop	r4		
    8516:	30 41       	ret			

00008518 <timerA_start_ticks>:
    8518:	04 12       	push	r4		
    851a:	04 41       	mov	r1,	r4	
    851c:	24 53       	incd	r4		
    851e:	21 83       	decd	r1		
    8520:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8524:	5f 42 53 00 	mov.b	&0x0053,r15	
    8528:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    852c:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    8530:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    8534:	62 01 
    8536:	82 43 70 01 	mov	#0,	&0x0170	;r3 As==00
    853a:	92 44 fc ff 	mov	-4(r4),	&0x0172	;0xfffc(r4)
    853e:	72 01 
    8540:	b2 40 10 01 	mov	#272,	&0x0160	;#0x0110
    8544:	60 01 
    8546:	21 53       	incd	r1		
    8548:	34 41       	pop	r4		
    854a:	30 41       	ret			

0000854c <timerA_start_milliseconds>:
    854c:	04 12       	push	r4		
    854e:	04 41       	mov	r1,	r4	
    8550:	24 53       	incd	r4		
    8552:	21 83       	decd	r1		
    8554:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8558:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    855c:	0f 4e       	mov	r14,	r15	
    855e:	0f 5f       	rla	r15		
    8560:	0f 5e       	add	r14,	r15	
    8562:	0f 5f       	rla	r15		
    8564:	0f 5f       	rla	r15		
    8566:	b0 12 18 85 	call	#0x8518	
    856a:	21 53       	incd	r1		
    856c:	34 41       	pop	r4		
    856e:	30 41       	ret			

00008570 <timerA_stop>:
    8570:	04 12       	push	r4		
    8572:	04 41       	mov	r1,	r4	
    8574:	24 53       	incd	r4		
    8576:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
    857a:	34 41       	pop	r4		
    857c:	30 41       	ret			

0000857e <Timer_B>:
    857e:	0f 12       	push	r15		
    8580:	0e 12       	push	r14		
    8582:	0d 12       	push	r13		
    8584:	0c 12       	push	r12		
    8586:	04 12       	push	r4		
    8588:	04 41       	mov	r1,	r4	
    858a:	34 50 0a 00 	add	#10,	r4	;#0x000a
    858e:	1f 42 06 02 	mov	&0x0206,r15	
    8592:	0f 93       	tst	r15		
    8594:	03 24       	jz	$+8      	;abs 0x859c
    8596:	1f 42 06 02 	mov	&0x0206,r15	
    859a:	8f 12       	call	r15		
    859c:	1f 42 08 02 	mov	&0x0208,r15	
    85a0:	1f 93       	cmp	#1,	r15	;r3 As==01
    85a2:	03 20       	jnz	$+8      	;abs 0x85aa
    85a4:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    85a8:	00 00 
    85aa:	34 41       	pop	r4		
    85ac:	3c 41       	pop	r12		
    85ae:	3d 41       	pop	r13		
    85b0:	3e 41       	pop	r14		
    85b2:	3f 41       	pop	r15		
    85b4:	00 13       	reti			

000085b6 <timerB_init>:
    85b6:	04 12       	push	r4		
    85b8:	04 41       	mov	r1,	r4	
    85ba:	24 53       	incd	r4		
    85bc:	82 43 06 02 	mov	#0,	&0x0206	;r3 As==00
    85c0:	82 43 08 02 	mov	#0,	&0x0208	;r3 As==00
    85c4:	b0 12 54 86 	call	#0x8654	
    85c8:	34 41       	pop	r4		
    85ca:	30 41       	ret			

000085cc <timerB_register_cb>:
    85cc:	04 12       	push	r4		
    85ce:	04 41       	mov	r1,	r4	
    85d0:	24 53       	incd	r4		
    85d2:	21 83       	decd	r1		
    85d4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    85d8:	92 44 fc ff 	mov	-4(r4),	&0x0206	;0xfffc(r4)
    85dc:	06 02 
    85de:	21 53       	incd	r1		
    85e0:	34 41       	pop	r4		
    85e2:	30 41       	ret			

000085e4 <timerB_set_wakeup>:
    85e4:	04 12       	push	r4		
    85e6:	04 41       	mov	r1,	r4	
    85e8:	24 53       	incd	r4		
    85ea:	21 83       	decd	r1		
    85ec:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    85f0:	92 44 fc ff 	mov	-4(r4),	&0x0208	;0xfffc(r4)
    85f4:	08 02 
    85f6:	21 53       	incd	r1		
    85f8:	34 41       	pop	r4		
    85fa:	30 41       	ret			

000085fc <timerB_start_ticks>:
    85fc:	04 12       	push	r4		
    85fe:	04 41       	mov	r1,	r4	
    8600:	24 53       	incd	r4		
    8602:	21 83       	decd	r1		
    8604:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8608:	5f 42 53 00 	mov.b	&0x0053,r15	
    860c:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    8610:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    8614:	b2 40 10 00 	mov	#16,	&0x0182	;#0x0010
    8618:	82 01 
    861a:	82 43 90 01 	mov	#0,	&0x0190	;r3 As==00
    861e:	92 44 fc ff 	mov	-4(r4),	&0x0192	;0xfffc(r4)
    8622:	92 01 
    8624:	b2 40 10 01 	mov	#272,	&0x0180	;#0x0110
    8628:	80 01 
    862a:	21 53       	incd	r1		
    862c:	34 41       	pop	r4		
    862e:	30 41       	ret			

00008630 <timerB_start_milliseconds>:
    8630:	04 12       	push	r4		
    8632:	04 41       	mov	r1,	r4	
    8634:	24 53       	incd	r4		
    8636:	21 83       	decd	r1		
    8638:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    863c:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    8640:	0f 4e       	mov	r14,	r15	
    8642:	0f 5f       	rla	r15		
    8644:	0f 5e       	add	r14,	r15	
    8646:	0f 5f       	rla	r15		
    8648:	0f 5f       	rla	r15		
    864a:	b0 12 fc 85 	call	#0x85fc	
    864e:	21 53       	incd	r1		
    8650:	34 41       	pop	r4		
    8652:	30 41       	ret			

00008654 <timerB_stop>:
    8654:	04 12       	push	r4		
    8656:	04 41       	mov	r1,	r4	
    8658:	24 53       	incd	r4		
    865a:	82 43 80 01 	mov	#0,	&0x0180	;r3 As==00
    865e:	34 41       	pop	r4		
    8660:	30 41       	ret			

00008662 <watchdog_stop>:
    8662:	04 12       	push	r4		
    8664:	04 41       	mov	r1,	r4	
    8666:	24 53       	incd	r4		
    8668:	1f 42 20 01 	mov	&0x0120,r15	
    866c:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    8670:	82 4f 0a 02 	mov	r15,	&0x020a	
    8674:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    8678:	20 01 
    867a:	34 41       	pop	r4		
    867c:	30 41       	ret			

0000867e <watchdog_restore>:
    867e:	04 12       	push	r4		
    8680:	04 41       	mov	r1,	r4	
    8682:	24 53       	incd	r4		
    8684:	1f 42 0a 02 	mov	&0x020a,r15	
    8688:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    868c:	82 4f 20 01 	mov	r15,	&0x0120	
    8690:	34 41       	pop	r4		
    8692:	30 41       	ret			

00008694 <_unexpected_>:
    8694:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	94 80 94 80 94 80 94 80 94 80 94 80 94 80 94 80     ................
    fff0:	94 80 9a 84 94 80 94 80 94 80 7e 85 94 80 00 80     ..........~.....
